[
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/8f60755881865733528c1391c1102c2165bdb022#diff-5b3247aeaa94c9a1e743fcd7915093f3ce145adbL9",
        "old_file": "main.py",
        "old_line": 9,
        "old_code": "def foo2(l: List[str]) -> None:",
        "new_line": 9,
        "new_file": "main.py",
        "new_code": "def foo2(l: List[str]) -> int:"
    },
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/8f60755881865733528c1391c1102c2165bdb022#diff-5b3247aeaa94c9a1e743fcd7915093f3ce145adbL12",
        "old_file": "main.py",
        "old_line": 12,
        "old_code": "def goo(t: Tuple[str, ...]) -> None:",
        "new_line": 12,
        "new_file": "main.py",
        "new_code": "def goo(t: Tuple[str, ...]) -> int:"
    },
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/a5d9d2a37c383384dbace073b878212df2574a11#diff-86d8c2b93f8f9c98e0dd0d950f9f4d5b1756eaaeL9",
        "old_file": "main.py",
        "old_line": 9,
        "old_code": "def foo2(l: List[str]) -> int:",
        "new_line": 9,
        "new_file": "main.py",
        "new_code": "def foo2(l: List[str]) -> str:"
    },
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/a5d9d2a37c383384dbace073b878212df2574a11#diff-86d8c2b93f8f9c98e0dd0d950f9f4d5b1756eaaeL17",
        "old_file": "main.py",
        "old_line": 17,
        "old_code": "def foo1(s: Optional[str]) -> None:",
        "new_line": 17,
        "new_file": "main.py",
        "new_code": "def foo1(s: Optional[str]) -> str:"
    },
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/4f0460f5b5dc4786c3539b3381f0e0ac32d97622#diff-285267cc26b84fc713f32e383289f25004168ff3L9",
        "old_file": "main.py",
        "old_line": 9,
        "old_code": "def foo2(l: List[str]) -> str:",
        "new_line": 9,
        "new_file": "main.py",
        "new_code": "def foo2(l: Tuple[str]) -> str:"
    },
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/99a4d6882a843eab615de95e6ea2585e3cb8b2a6#diff-ebe5f47148bc5542acdc2fe6751f232cf8b174a2L3",
        "old_file": "main.py",
        "old_line": 3,
        "old_code": "def process_something(arguments: Any) -> Any:",
        "new_line": "",
        "new_file": "main.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/lucaresearch/pythontest/commit/01d078e80fde3052845b5018c3407ee2daeaf7c1#diff-6eead058c2e33d804090871a2b72788032f8e6b2L16",
        "old_file": "main.py",
        "old_line": "",
        "old_code": "",
        "new_line": 16,
        "new_file": "main.py",
        "new_code": "def something(arguments: Any) -> int:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL103",
        "old_file": "httpie/plugins/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "httpie/plugins/base.py",
        "new_code": "    def format_headers(self, headers: str) -> str:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL111",
        "old_file": "httpie/plugins/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "httpie/plugins/base.py",
        "new_code": "    def format_body(self, content: str, mime: str) -> str:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL40",
        "old_file": "httpie/plugins/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "httpie/plugins/manager.py",
        "new_code": "    def get_auth_plugins(self) -> List[Type[AuthPlugin]]:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL43",
        "old_file": "httpie/plugins/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "httpie/plugins/manager.py",
        "new_code": "    def get_auth_plugin_mapping(self) -> Dict[str, Type[AuthPlugin]]:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL52",
        "old_file": "httpie/plugins/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "httpie/plugins/manager.py",
        "new_code": "    def get_formatters(self) -> List[Type[FormatterPlugin]]:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL66",
        "old_file": "httpie/plugins/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "httpie/plugins/manager.py",
        "new_code": "    def get_converters(self) -> List[Type[ConverterPlugin]]:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/b947d4826a3ee7a39992c9f88a433156c154507b#diff-aeeceddac9e636824c3f1e030d7a856bea75189fL73",
        "old_file": "httpie/plugins/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "httpie/plugins/manager.py",
        "new_code": "    def get_transport_plugins(self) -> List[Type[TransportPlugin]]:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/30624e66ec06e19687e83350687945d34af3215c#diff-6f7ef386f4eb7286c9642ede5908d64486e7dcbaL12",
        "old_file": "httpie/output/formatters/json.py",
        "old_line": "",
        "old_code": "",
        "new_line": 12,
        "new_file": "httpie/output/formatters/json.py",
        "new_code": "    def format_body(self, body: str, mime: str) -> str:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/bd3208cf248a587fe3af6f485310383a76ef37a4#diff-9726122554170fd99eb7bd80d8eb33da86d36592L103",
        "old_file": "httpie/plugins/base.py",
        "old_line": 103,
        "old_code": "    def format_headers(self, headers: str) -> str:",
        "new_line": "",
        "new_file": "httpie/plugins/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/bd3208cf248a587fe3af6f485310383a76ef37a4#diff-9726122554170fd99eb7bd80d8eb33da86d36592L111",
        "old_file": "httpie/plugins/base.py",
        "old_line": 111,
        "old_code": "    def format_body(self, content: str, mime: str) -> str:",
        "new_line": "",
        "new_file": "httpie/plugins/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/bd3208cf248a587fe3af6f485310383a76ef37a4#diff-9726122554170fd99eb7bd80d8eb33da86d36592L54",
        "old_file": "httpie/plugins/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "httpie/plugins/manager.py",
        "new_code": "    def get_formatters_grouped(self) -> Dict[str, List[Type[FormatterPlugin]]]:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/f202f338a47d7e2a7e14bb7b14e5c934356ad66e#diff-a30ec9d8b5f72b609322d89e60a8c63f62039bd3L38",
        "old_file": "httpie/config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "httpie/config.py",
        "new_code": "    def is_new(self) -> bool:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/f202f338a47d7e2a7e14bb7b14e5c934356ad66e#diff-a30ec9d8b5f72b609322d89e60a8c63f62039bd3L103",
        "old_file": "httpie/config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "httpie/config.py",
        "new_code": "    def default_options(self) -> list:"
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/5af0874ed302e9ef79cec97836529ccf353e53f7#diff-cac911f5f17742882cfd4c042889dd5891712c3aL38",
        "old_file": "httpie/config.py",
        "old_line": 38,
        "old_code": "    def is_new(self) -> bool:",
        "new_line": "",
        "new_file": "httpie/config.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/jakubroztocil/httpie/commit/5af0874ed302e9ef79cec97836529ccf353e53f7#diff-cac911f5f17742882cfd4c042889dd5891712c3aL103",
        "old_file": "httpie/config.py",
        "old_line": 103,
        "old_code": "    def default_options(self) -> list:",
        "new_line": "",
        "new_file": "httpie/config.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L10",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def make_matrix(row_size: int = 4) -> [[int]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L27",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def rotate_90(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L39",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def rotate_180(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L51",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def rotate_270(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L63",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def transpose(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L68",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def reverse_row(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L73",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def reverse_column(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b2ed8d443c03bd9fa8cc523bcefcca4eeff04c2e#diff-274fa08e6dddd66b0aca2bdea804b0c1900f4884L78",
        "old_file": "matrix/rotate_matrix.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "matrix/rotate_matrix.py",
        "new_code": "def print_matrix(matrix: [[]]) -> [[]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7cf3db184320a454e545882408b8c2f561ef0cdb#diff-dc9985f95f0943d12808cbb58779bf53f7adc68eL5",
        "old_file": "maths/quadratic_equations_complex_numbers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 5,
        "new_file": "maths/quadratic_equations_complex_numbers.py",
        "new_code": "def QuadraticEquation(a: int, b: int, c: int) -> Tuple[str, str]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L43",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def pre_order(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L51",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def in_order(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L59",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def post_order(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L67",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def level_order(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L81",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def level_order_actual(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L101",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def pre_order_iter(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L117",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def in_order_iter(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L131",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def post_order_iter(node: TreeNode) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/4fea48072ae88c19f5133a2303e6707eddf96700#diff-fbc8311cdcede8df964278b55250ed3d617248a2L148",
        "old_file": "traversals/binary_tree_traversals.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "traversals/binary_tree_traversals.py",
        "new_code": "def prompt(s: str = \"\", width=50, char=\"*\") -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/768700b91f85b21fbb422d9deba6bb69d320e18d#diff-75e37cb4bbd73c266ba5148607e116b868f46ce6L36",
        "old_file": "data_structures/trie/trie.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "data_structures/trie/trie.py",
        "new_code": "    def find(self, word: str) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/768700b91f85b21fbb422d9deba6bb69d320e18d#diff-75e37cb4bbd73c266ba5148607e116b868f46ce6L111",
        "old_file": "data_structures/trie/trie.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "data_structures/trie/trie.py",
        "new_code": "def print_results(msg: str, passes: bool) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/9eac17a4083ad08c4bb0520cb0b8e5ce385f9ce0#diff-6a3edd874af4598b4f8dfc23fbe9db7539d0a107L10",
        "old_file": "backtracking/all_combinations.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "backtracking/all_combinations.py",
        "new_code": "def generate_all_combinations(n: int, k: int) -> [[int]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/9eac17a4083ad08c4bb0520cb0b8e5ce385f9ce0#diff-6a3edd874af4598b4f8dfc23fbe9db7539d0a107L59",
        "old_file": "dynamic_programming/edit_distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "dynamic_programming/edit_distance.py",
        "new_code": "def min_distance_bottom_up(word1: str, word2: str) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/9eac17a4083ad08c4bb0520cb0b8e5ce385f9ce0#diff-6a3edd874af4598b4f8dfc23fbe9db7539d0a107L44",
        "old_file": "dynamic_programming/max_sub_array.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "dynamic_programming/max_sub_array.py",
        "new_code": "def max_sub_array(nums: List[int]) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/9eac17a4083ad08c4bb0520cb0b8e5ce385f9ce0#diff-6a3edd874af4598b4f8dfc23fbe9db7539d0a107L4",
        "old_file": "maths/3n+1.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "maths/3n+1.py",
        "new_code": "def n31(a: int) -> Tuple[List[int], int]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/9eac17a4083ad08c4bb0520cb0b8e5ce385f9ce0#diff-6a3edd874af4598b4f8dfc23fbe9db7539d0a107L4",
        "old_file": "maths/abs_max.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "maths/abs_max.py",
        "new_code": "def abs_max(x: List[int]) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/9eac17a4083ad08c4bb0520cb0b8e5ce385f9ce0#diff-6a3edd874af4598b4f8dfc23fbe9db7539d0a107L5",
        "old_file": "maths/zellers_congruence.py",
        "old_line": "",
        "old_code": "",
        "new_line": 5,
        "new_file": "maths/zellers_congruence.py",
        "new_code": "def zeller(date_input: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/927a8c7722a141b19a86fdb2f6fb3ae7dcb94c9e#diff-2325dcc7bd6047954232c69a5bc0b712e0828d91L4",
        "old_file": "maths/polynomial_evaluation.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "maths/polynomial_evaluation.py",
        "new_code": "def evaluate_poly(poly: Sequence[float], x: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/927a8c7722a141b19a86fdb2f6fb3ae7dcb94c9e#diff-2325dcc7bd6047954232c69a5bc0b712e0828d91L18",
        "old_file": "maths/polynomial_evaluation.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "maths/polynomial_evaluation.py",
        "new_code": "def horner(poly: Sequence[float], x: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/179284a41bf265c59913b72d94bee47d7d6b7414#diff-c2e72a088af86b33035c4f11cd7c5a512ddd2807L18",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": 18,
        "old_code": "def split(root: Node, key: int) -> Tuple[Node, Node]:",
        "new_line": "",
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/179284a41bf265c59913b72d94bee47d7d6b7414#diff-c2e72a088af86b33035c4f11cd7c5a512ddd2807L44",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": 44,
        "old_code": "def merge(left: Node, right: Node) -> Node:",
        "new_line": "",
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/179284a41bf265c59913b72d94bee47d7d6b7414#diff-c2e72a088af86b33035c4f11cd7c5a512ddd2807L69",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": 69,
        "old_code": "def insert(root: Node, key: int) -> Node:",
        "new_line": "",
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/179284a41bf265c59913b72d94bee47d7d6b7414#diff-c2e72a088af86b33035c4f11cd7c5a512ddd2807L84",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": 84,
        "old_code": "def erase(root: Node, key: int) -> Node:",
        "new_line": "",
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7592cba417b1766b8c7c5721ffe916f5c14cdc60#diff-a64aa441b4fe0e552b059387b0029daccec3e6a4L35",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": "def split(root: Node, value: int) -> Tuple[Node, Node]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7592cba417b1766b8c7c5721ffe916f5c14cdc60#diff-a64aa441b4fe0e552b059387b0029daccec3e6a4L64",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": "def merge(left: Node, right: Node) -> Node:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7592cba417b1766b8c7c5721ffe916f5c14cdc60#diff-a64aa441b4fe0e552b059387b0029daccec3e6a4L86",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": "def insert(root: Node, value: int) -> Node:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7592cba417b1766b8c7c5721ffe916f5c14cdc60#diff-a64aa441b4fe0e552b059387b0029daccec3e6a4L99",
        "old_file": "data_structures/binary_tree/treap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "data_structures/binary_tree/treap.py",
        "new_code": "def erase(root: Node, value: int) -> Node:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7592cba417b1766b8c7c5721ffe916f5c14cdc60#diff-a64aa441b4fe0e552b059387b0029daccec3e6a4L1",
        "old_file": "maths/factorial_python.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "maths/factorial_python.py",
        "new_code": "def factorial(input_number: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/07483139d14214adaebbd58ee22fd6bb552e1a00#diff-0eae418d200edeab0bdcb9d417dbe629e090adb9L281",
        "old_file": "linear_algebra/src/lib.py",
        "old_line": "",
        "old_code": "",
        "new_line": 281,
        "new_file": "linear_algebra/src/lib.py",
        "new_code": "    def determinate(self) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/07483139d14214adaebbd58ee22fd6bb552e1a00#diff-0eae418d200edeab0bdcb9d417dbe629e090adb9L179",
        "old_file": "linear_algebra/src/tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "linear_algebra/src/tests.py",
        "new_code": "def force_test() -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1ed47ad6f4b1f38d4d0a52b7f69d43c4a4294cc9#diff-a6ece33f7b397acf0211dde3aa6498149762cbefL17",
        "old_file": "other/palindrome.py",
        "old_line": "",
        "old_code": "",
        "new_line": 17,
        "new_file": "other/palindrome.py",
        "new_code": "def is_palindrome(s: str) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1ed47ad6f4b1f38d4d0a52b7f69d43c4a4294cc9#diff-a6ece33f7b397acf0211dde3aa6498149762cbefL36",
        "old_file": "other/palindrome.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "other/palindrome.py",
        "new_code": "def is_palindrome_recursive(s: str) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1ed47ad6f4b1f38d4d0a52b7f69d43c4a4294cc9#diff-a6ece33f7b397acf0211dde3aa6498149762cbefL51",
        "old_file": "other/palindrome.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "other/palindrome.py",
        "new_code": "def is_palindrome_slice(s: str) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bfac867e27328eeedf28b3cd4d8f8195d15e44a4#diff-66fca04e95fa37b6575326d6a9a2c8556d2b00b1L1",
        "old_file": "other/word_patterns.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "other/word_patterns.py",
        "new_code": "def get_word_pattern(word: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/53ff735701db42d2609416ff6772db17383c3f10#diff-bd2e2d3e7393bce80d0bb5b4e271283d76414ac0L4",
        "old_file": "maths/prime_numbers.py",
        "old_line": 4,
        "old_code": "def primes(max: int) -> int:",
        "new_line": 4,
        "new_file": "maths/prime_numbers.py",
        "new_code": "def primes(max: int) -> List[int]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/df95f439072fc055f0611a5006bf2006c62536e7#diff-f545abe8e8fb4742df67b97c28a01e877f0b6cc4L10",
        "old_file": "searches/quick_select.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "searches/quick_select.py",
        "new_code": "def _partition(data: list, pivot) -> tuple:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/357dbd4ada738ed9d4b814eeec99bcc833e94aff#diff-3caa1f3ac3699f6270fbb9785eea4e6bef8f0861L19",
        "old_file": "dynamic_programming/longest_increasing_subsequence_o(nlogn).py",
        "old_line": "",
        "old_code": "",
        "new_line": 19,
        "new_file": "dynamic_programming/longest_increasing_subsequence_o(nlogn).py",
        "new_code": "def LongestIncreasingSubsequenceLength(v: List[int]) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/814750e637ff3a28442808dc10b2c23170abc85b#diff-2517aecbcb32f5e62485da1750e15a17debe8e67L1",
        "old_file": "maths/factorial_python.py",
        "old_line": 1,
        "old_code": "def factorial(input_number: int) -> int:",
        "new_line": "",
        "new_file": "maths/factorial_python.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/a9d5378ce2251b43d4f2541283ff6f1a558a3bfa#diff-979d5989c30d0b4815b047d9ffdd1be8c7449df3L13",
        "old_file": "dynamic_programming/longest_increasing_subsequence.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "dynamic_programming/longest_increasing_subsequence.py",
        "new_code": "def longest_subsequence(array: List[int]) -> List[int]:  # This function is recursive"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5df8aec66cdd87b893a0ee17b97ca8684262f7f7#diff-cd6e851df62d5d85e341089ab7a54df4c690e0d8L1",
        "old_file": "maths/ceil.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "maths/ceil.py",
        "new_code": "def ceil(x) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5df8aec66cdd87b893a0ee17b97ca8684262f7f7#diff-cd6e851df62d5d85e341089ab7a54df4c690e0d8L1",
        "old_file": "maths/factorial_python.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "maths/factorial_python.py",
        "new_code": "def factorial(input_number: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5df8aec66cdd87b893a0ee17b97ca8684262f7f7#diff-cd6e851df62d5d85e341089ab7a54df4c690e0d8L1",
        "old_file": "maths/factorial_recursive.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "maths/factorial_recursive.py",
        "new_code": "def factorial(n: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5df8aec66cdd87b893a0ee17b97ca8684262f7f7#diff-cd6e851df62d5d85e341089ab7a54df4c690e0d8L1",
        "old_file": "maths/floor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "maths/floor.py",
        "new_code": "def floor(x) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5df8aec66cdd87b893a0ee17b97ca8684262f7f7#diff-cd6e851df62d5d85e341089ab7a54df4c690e0d8L4",
        "old_file": "maths/perfect_square.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "maths/perfect_square.py",
        "new_code": "def perfect_square(num: int) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/28c02a1f21b07627c98dd38e2cb933c1b9c14c6c#diff-e3828849c51cbd0b6451bf71b71c538f0b0ef285L10",
        "old_file": "graphs/bellman_ford.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "graphs/bellman_ford.py",
        "new_code": "def BellmanFord(graph: List[Dict[str, int]], V: int, E: int, src: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/0d3c9d586ca3e4642aa88e1bbf88a008993e0019#diff-1b5700504c85f83d96f1329b35274b0005008f32L14",
        "old_file": "data_structures/linked_list/singly_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 14,
        "new_file": "data_structures/linked_list/singly_linked_list.py",
        "new_code": "    def insert_tail(self, data) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/0d3c9d586ca3e4642aa88e1bbf88a008993e0019#diff-1b5700504c85f83d96f1329b35274b0005008f32L23",
        "old_file": "data_structures/linked_list/singly_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "data_structures/linked_list/singly_linked_list.py",
        "new_code": "    def insert_head(self, data) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/0d3c9d586ca3e4642aa88e1bbf88a008993e0019#diff-1b5700504c85f83d96f1329b35274b0005008f32L29",
        "old_file": "data_structures/linked_list/singly_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "data_structures/linked_list/singly_linked_list.py",
        "new_code": "    def print_list(self) -> None:  # print every node data"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/0d3c9d586ca3e4642aa88e1bbf88a008993e0019#diff-1b5700504c85f83d96f1329b35274b0005008f32L54",
        "old_file": "data_structures/linked_list/singly_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "data_structures/linked_list/singly_linked_list.py",
        "new_code": "    def is_empty(self) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/415c9f5e6547457eb3546b467283cbd9e82e4eec#diff-06a0830977be932377b7acb31e75d15259e63f29L77",
        "old_file": "graphs/prim.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "graphs/prim.py",
        "new_code": "def test_vector() -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/938dd0bbb5145aa7c60127745ae0571cb20a2387#diff-a9119b8a407f6a5b1e19bbf8e32c1dea22963c46L4",
        "old_file": "maths/prime_numbers.py",
        "old_line": 4,
        "old_code": "def primes(max: int) -> List[int]:",
        "new_line": 4,
        "new_file": "maths/prime_numbers.py",
        "new_code": "def primes(max: int) -> Generator[int, None, None]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/74d96ab3558120b6810aa3f613e091774aefeca3#diff-291cb75519f70a54c12a2d2005c803aa9975d92eL9",
        "old_file": "conversions/decimal_to_octal.py",
        "old_line": "",
        "old_code": "",
        "new_line": 9,
        "new_file": "conversions/decimal_to_octal.py",
        "new_code": "def decimal_to_octal(num: int) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5f57ac975f80bb79949d0dc222bb5fe124de6357#diff-c4ed58cb645ef91f5b237fac18037d16c3e54976L20",
        "old_file": "graphs/bfs_shortest_path.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "graphs/bfs_shortest_path.py",
        "new_code": "def bfs_shortest_path(graph: dict, start, goal) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5f57ac975f80bb79949d0dc222bb5fe124de6357#diff-c4ed58cb645ef91f5b237fac18037d16c3e54976L70",
        "old_file": "graphs/bfs_shortest_path.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "graphs/bfs_shortest_path.py",
        "new_code": "def bfs_shortest_path_distance(graph: dict, start, target) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1d9266eca08c4e58ba04a403168292edf4204b80#diff-f16d2b74dfb21b97c920d25b8ed6a0ed8a9b7dc8L56",
        "old_file": "ciphers/affine_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "ciphers/affine_cipher.py",
        "new_code": "def encrypt_message(key: int, message: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1d9266eca08c4e58ba04a403168292edf4204b80#diff-f16d2b74dfb21b97c920d25b8ed6a0ed8a9b7dc8L73",
        "old_file": "ciphers/affine_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "ciphers/affine_cipher.py",
        "new_code": "def decrypt_message(key: int, message: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L10",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "maths/volume.py",
        "new_code": "def vol_cube(side_length: Union[int, float]) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L22",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "maths/volume.py",
        "new_code": "def vol_cuboid(width: float, height: float, length: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L35",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "maths/volume.py",
        "new_code": "def vol_cone(area_of_base: float, height: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L50",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "maths/volume.py",
        "new_code": "def vol_right_circ_cone(radius: float, height: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L63",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "maths/volume.py",
        "new_code": "def vol_prism(area_of_base: float, height: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L77",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "maths/volume.py",
        "new_code": "def vol_pyramid(area_of_base: float, height: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L91",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "maths/volume.py",
        "new_code": "def vol_sphere(radius: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1cc817bcc961061941fddcd081ab2dc19da6b877#diff-09208196eb6a6e2536955baa79366818081312c4L105",
        "old_file": "maths/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "maths/volume.py",
        "new_code": "def vol_circular_cylinder(radius: float, height: float) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bfcb95b297a2b28669203642ec63b2ef6fbd8146#diff-0759e673e7424f70b0622978c2c627f5c4b5efa4L1",
        "old_file": "strings/split.py",
        "old_line": 1,
        "old_code": "def split(string: str, seperator: str = \" \") -> list:",
        "new_line": "",
        "new_file": "strings/split.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bfcb95b297a2b28669203642ec63b2ef6fbd8146#diff-0759e673e7424f70b0622978c2c627f5c4b5efa4L1",
        "old_file": "strings/split.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "strings/split.py",
        "new_code": "def split(string: str, separator: str = \" \") -> list:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/724b7d2198895b2cb88e9b506be25a8cd53ef87e#diff-2fd6ba042b73dd73ef3898f2a3c26b1a6de2d3c2L56",
        "old_file": "graphs/prim.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "graphs/prim.py",
        "new_code": "def prim(graph: list, root: Vertex) -> list:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/724b7d2198895b2cb88e9b506be25a8cd53ef87e#diff-2fd6ba042b73dd73ef3898f2a3c26b1a6de2d3c2L86",
        "old_file": "graphs/prim.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "graphs/prim.py",
        "new_code": "def prim_heap(graph: list, root: Vertex) -> Iterator[tuple]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1608d75351be2b11b0e1ce891e2f71296f0be24b#diff-513bd2d974f8f95b85a08eb403e6d39d5c60e757L4",
        "old_file": "maths/collatz_sequence.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "maths/collatz_sequence.py",
        "new_code": "def collatz_sequence(n: int) -> List[int]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/d2f7982a4ee105ca980b2446ed8fc2e32139dd7d#diff-5bd3c12bd94d204ee5d73eee19f608c91bc1008dL5",
        "old_file": "maths/quadratic_equations_complex_numbers.py",
        "old_line": 5,
        "old_code": "def QuadraticEquation(a: int, b: int, c: int) -> Tuple[str, str]:",
        "new_line": "",
        "new_file": "maths/quadratic_equations_complex_numbers.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/5543d14b3f84eb4985f59c9f874f367e8980133f#diff-4186a40141a24121f68ce4201e38997b0ec5b5a6L21",
        "old_file": "maths/monte_carlo.py",
        "old_line": 21,
        "old_code": "    def in_circle(x: float, y: float) -> bool:",
        "new_line": "",
        "new_file": "maths/monte_carlo.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7f04e5cd3499c07f07ae94437b706254edb7ba39#diff-7aa3e8ea7c6bdd5a0c599c2cdb68c7ead0fe1894L21",
        "old_file": "sorts/comb_sort.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "sorts/comb_sort.py",
        "new_code": "def comb_sort(data: list) -> list:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/f17e9822b08a0b1d811d1a638f3de1ac26c511d8#diff-74bb2a5f7c34f58633b5b415b61d8d8a196eccb7L5",
        "old_file": "data_structures/stacks/next_greater_element.py",
        "old_line": "",
        "old_code": "",
        "new_line": 5,
        "new_file": "data_structures/stacks/next_greater_element.py",
        "new_code": "def next_greatest_element_slow(arr: list) -> list:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/f17e9822b08a0b1d811d1a638f3de1ac26c511d8#diff-74bb2a5f7c34f58633b5b415b61d8d8a196eccb7L24",
        "old_file": "data_structures/stacks/next_greater_element.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "data_structures/stacks/next_greater_element.py",
        "new_code": "def next_greatest_element_fast(arr: list) -> list:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/f17e9822b08a0b1d811d1a638f3de1ac26c511d8#diff-74bb2a5f7c34f58633b5b415b61d8d8a196eccb7L4",
        "old_file": "maths/allocation_number.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "maths/allocation_number.py",
        "new_code": "def allocation_num(number_of_bytes: int, partitions: int) -> List[str]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/20c2db0de4bb4f73db3053b13280bed8dee30cf4#diff-57076cc13710068618f59fb8798d73688d0fde85L4",
        "old_file": "strings/reverse_words.py",
        "old_line": 4,
        "old_code": "def reverse_words(input_str: str) -> str:",
        "new_line": "",
        "new_file": "strings/reverse_words.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/3d129a4964b335fe7977e6376935fc916b6df3c9#diff-2d8ccda20d94eb79dba7f337cc4994a80db915b2L5",
        "old_file": "strings/reverse_words.py",
        "old_line": "",
        "old_code": "",
        "new_line": 5,
        "new_file": "strings/reverse_words.py",
        "new_code": "def reverse_words(input_str: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/8bf380ce7d010723d96a8658adc67eae8abc786c#diff-f9febea8e734b51140fa7db5c5753d084037e843L2",
        "old_file": "data_structures/linked_list/middle_element_of_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 2,
        "new_file": "data_structures/linked_list/middle_element_of_linked_list.py",
        "new_code": "    def __init__(self, data: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/8bf380ce7d010723d96a8658adc67eae8abc786c#diff-f9febea8e734b51140fa7db5c5753d084037e843L11",
        "old_file": "data_structures/linked_list/middle_element_of_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "data_structures/linked_list/middle_element_of_linked_list.py",
        "new_code": "    def push(self, new_data: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/8bf380ce7d010723d96a8658adc67eae8abc786c#diff-f9febea8e734b51140fa7db5c5753d084037e843L17",
        "old_file": "data_structures/linked_list/middle_element_of_linked_list.py",
        "old_line": "",
        "old_code": "",
        "new_line": 17,
        "new_file": "data_structures/linked_list/middle_element_of_linked_list.py",
        "new_code": "    def middle_element(self) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1c9d4a39294b8dc1852717d89313d0f62744d125#diff-36d8f8599439c13bd231418ebacb42c1cde83824L15",
        "old_file": "dynamic_programming/abbreviation.py",
        "old_line": "",
        "old_code": "",
        "new_line": 15,
        "new_file": "dynamic_programming/abbreviation.py",
        "new_code": "def abbr(a: str, b: str) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/7aaf79cc23c7bac95d4da830605341b68529dd47#diff-90e4408a57c1c999134565c20b19b1d57bf87c73L18",
        "old_file": "graphs/depth_first_search.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "graphs/depth_first_search.py",
        "new_code": "def depth_first_search(graph: Dict, start: str) -> Set[int]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bcaa88b26c8012cb5f8cba75d10ccb44b801c72c#diff-4314529f7f1cea5b028fb4a997aaee5a27532e0bL7",
        "old_file": "linear_algebra/src/rayleigh_quotient.py",
        "old_line": 7,
        "old_code": "def is_hermitian(matrix: np.matrix) -> bool:",
        "new_line": 7,
        "new_file": "linear_algebra/src/rayleigh_quotient.py",
        "new_code": "def is_hermitian(matrix: np.array) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bcaa88b26c8012cb5f8cba75d10ccb44b801c72c#diff-4314529f7f1cea5b028fb4a997aaee5a27532e0bL28",
        "old_file": "linear_algebra/src/rayleigh_quotient.py",
        "old_line": 28,
        "old_code": "def rayleigh_quotient(A: np.matrix, v: np.matrix) -> float:",
        "new_line": 27,
        "new_file": "linear_algebra/src/rayleigh_quotient.py",
        "new_code": "def rayleigh_quotient(A: np.array, v: np.array) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/b6fcee311430d1bcf81253898b08f9e80d20064d#diff-374b116df77a66963c5143846d59be69ebf80ed4L50",
        "old_file": "data_structures/stacks/stack.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "data_structures/stacks/stack.py",
        "new_code": "    def __contains__(self, item) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/c8fbdee2294fcc14d002ee7ef9f6a3d8dcb66636#diff-d48d1de91cf856eb4d51756cdaae010b03607ca4L5",
        "old_file": "maths/prime_numbers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 5,
        "new_file": "maths/prime_numbers.py",
        "new_code": "def slow_primes(max: int) -> Generator[int, None, None]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L44",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "def gcd(a: int, b: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L79",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def replaceLetters(self, letter: str) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L89",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def replaceNumbers(self, num: int) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L99",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def check_determinant(self) -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L116",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def process_text(self, text: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L131",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def encrypt(self, text: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/aa120cea12589e4f7907dff95d2efe246f1da178#diff-258d785919faa60a724e41a53bb5de0540d42978L179",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def decrypt(self, text: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/38d2e98665db0df90ba1ef33d9ba8e5025c7e38d#diff-995d810dd6d198fedc3d223dbebd839347cc289aL44",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": 44,
        "old_code": "def gcd(a: int, b: int) -> int:",
        "new_line": "",
        "new_file": "ciphers/hill_cipher.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/38d2e98665db0df90ba1ef33d9ba8e5025c7e38d#diff-995d810dd6d198fedc3d223dbebd839347cc289aL79",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": 79,
        "old_code": "    def replaceLetters(self, letter: str) -> int:",
        "new_line": "",
        "new_file": "ciphers/hill_cipher.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/38d2e98665db0df90ba1ef33d9ba8e5025c7e38d#diff-995d810dd6d198fedc3d223dbebd839347cc289aL89",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": 89,
        "old_code": "    def replaceNumbers(self, num: int) -> str:",
        "new_line": "",
        "new_file": "ciphers/hill_cipher.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/38d2e98665db0df90ba1ef33d9ba8e5025c7e38d#diff-995d810dd6d198fedc3d223dbebd839347cc289aL43",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "def greatest_common_divisor(a: int, b: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/38d2e98665db0df90ba1ef33d9ba8e5025c7e38d#diff-995d810dd6d198fedc3d223dbebd839347cc289aL76",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def replace_letters(self, letter: str) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/38d2e98665db0df90ba1ef33d9ba8e5025c7e38d#diff-995d810dd6d198fedc3d223dbebd839347cc289aL86",
        "old_file": "ciphers/hill_cipher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "ciphers/hill_cipher.py",
        "new_code": "    def replace_digits(self, num: int) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/777ddca2e9b63c294c49883518fc0723de2c11e0#diff-ff2df39f39f173083d946055770f7148e150bd5aL11",
        "old_file": "dynamic_programming/fast_fibonacci.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "dynamic_programming/fast_fibonacci.py",
        "new_code": "def fibonacci(n: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/777ddca2e9b63c294c49883518fc0723de2c11e0#diff-ff2df39f39f173083d946055770f7148e150bd5aL23",
        "old_file": "dynamic_programming/fast_fibonacci.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "dynamic_programming/fast_fibonacci.py",
        "new_code": "def _fib(n: int) -> Tuple[int, int]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/965d02ad41a5269e0b858a7e983c7d7e24e1ee33#diff-97e60fafe2cddba901481070602cdc081ad2f208L5",
        "old_file": "ciphers/atbash.py",
        "old_line": "",
        "old_code": "",
        "new_line": 5,
        "new_file": "ciphers/atbash.py",
        "new_code": "def atbash_slow(sequence: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/965d02ad41a5269e0b858a7e983c7d7e24e1ee33#diff-97e60fafe2cddba901481070602cdc081ad2f208L40",
        "old_file": "ciphers/atbash.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "ciphers/atbash.py",
        "new_code": "def benchmark() -> None:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/21ed8968c08c67cf0552845b57e0cd244f9b47e9#diff-b6ac0129e9f3c5fff4c9c72dc734dfb4c75b261aL63",
        "old_file": "graphs/bidirectional_a_star.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "graphs/bidirectional_a_star.py",
        "new_code": "    def __lt__(self, other) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/21ed8968c08c67cf0552845b57e0cd244f9b47e9#diff-b6ac0129e9f3c5fff4c9c72dc734dfb4c75b261aL92",
        "old_file": "graphs/bidirectional_a_star.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "graphs/bidirectional_a_star.py",
        "new_code": "    def search(self) -> List[Tuple[int]]:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/d8a4faf96d940737ddc488aa8817bc3563ab1a82#diff-95c8f5d862b0283c7fe35193e239fde99cd6a180L1",
        "old_file": "strings/is_palindrome.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1,
        "new_file": "strings/is_palindrome.py",
        "new_code": "def is_palindrome(s: str) -> bool:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bb5552efd0fea2a8e83aef4321d9686acb150b59#diff-d85fde724e25c3b3a775cf53bf6d7c412b226af8L4",
        "old_file": "other/euclidean_gcd.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "other/euclidean_gcd.py",
        "new_code": "def euclidean_gcd(a: int, b: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/bb5552efd0fea2a8e83aef4321d9686acb150b59#diff-d85fde724e25c3b3a775cf53bf6d7c412b226af8L18",
        "old_file": "other/euclidean_gcd.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "other/euclidean_gcd.py",
        "new_code": "def euclidean_gcd_recursive(a: int, b: int) -> int:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/fa358d614a2ee0ad624fd3175fed3d06e7a9a434#diff-ff102915fdfa8ae8c981f04c62401786255c5f67L12",
        "old_file": "web_programming/current_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 12,
        "new_file": "web_programming/current_weather.py",
        "new_code": "def weather_forecast(q: str = \"Kolkata, India\", appid: str = APPID) -> dict:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/fa358d614a2ee0ad624fd3175fed3d06e7a9a434#diff-ff102915fdfa8ae8c981f04c62401786255c5f67L17",
        "old_file": "web_programming/current_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 17,
        "new_file": "web_programming/current_weather.py",
        "new_code": "def weather_onecall(lat: float = 55.68, lon: float = 12.57, appid: str = APPID) -> dict:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/fa358d614a2ee0ad624fd3175fed3d06e7a9a434#diff-ff102915fdfa8ae8c981f04c62401786255c5f67L9",
        "old_file": "web_programming/current_weather.py",
        "old_line": 9,
        "old_code": "def current_weather(location: str = \"Chicago\", appid: str = APPID) -> dict:",
        "new_line": "",
        "new_file": "web_programming/current_weather.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/fa358d614a2ee0ad624fd3175fed3d06e7a9a434#diff-ff102915fdfa8ae8c981f04c62401786255c5f67L7",
        "old_file": "web_programming/current_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 7,
        "new_file": "web_programming/current_weather.py",
        "new_code": "def current_weather(q: str = \"Chicago\", appid: str = APPID) -> dict:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1e8fe8efcfc499c85079659708f4afefe92ec66b#diff-828bbc7349be9cb975c54d896e9af43b61ff2924L27",
        "old_file": "strings/jaro_winkler.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "strings/jaro_winkler.py",
        "new_code": "    def get_matched_characters(_str1: str, _str2: str) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/1e8fe8efcfc499c85079659708f4afefe92ec66b#diff-828bbc7349be9cb975c54d896e9af43b61ff2924L4",
        "old_file": "strings/jaro_winkler.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "strings/jaro_winkler.py",
        "new_code": "def jaro_winkler(str1: str, str2: str) -> float:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/d7cc778092ab406cd9269845262e4fc4952c51bc#diff-caa729298ca51aa0df26eae52a7eb40db34aa870L4",
        "old_file": "conversions/decimal_to_binary.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "conversions/decimal_to_binary.py",
        "new_code": "def decimal_to_binary(num: int) -> str:"
    },
    {
        "url": "https://github.com/TheAlgorithms/Python/commit/20b21e5ec9d4ed28ede8bd67d4b5bc924454d4ac#diff-a2bdb6d50719d0da552e56df0ed07f7e7c9049d8L7",
        "old_file": "sorts/cycle_sort.py",
        "old_line": "",
        "old_code": "",
        "new_line": 7,
        "new_file": "sorts/cycle_sort.py",
        "new_code": "def cycle_sort(array: list) -> list:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L138",
        "old_file": "superset/security.py",
        "old_line": "",
        "old_code": "",
        "new_line": 138,
        "new_file": "superset/security.py",
        "new_code": "    def can_only_access_owned_queries(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L80",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def __get_full_name(tlist: TokenList) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L24",
        "old_file": "superset/sql_validators/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "superset/sql_validators/__init__.py",
        "new_code": "def get_validator_by_name(name: str) -> Optional[base.BaseSQLValidator]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L38",
        "old_file": "superset/sql_validators/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "superset/sql_validators/base.py",
        "new_code": "    def to_dict(self) -> Dict:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L23",
        "old_file": "superset/utils/cache.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "superset/utils/cache.py",
        "new_code": "def view_cache_key(*unused_args, **unused_kwargs) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L36",
        "old_file": "superset/views/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/views/sql_lab.py",
        "new_code": "    def apply(self, query: BaseQuery, func: Callable) -> BaseQuery:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L165",
        "old_file": "superset/views/utils.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "superset/views/utils.py",
        "new_code": "def apply_display_max_row_limit(sql_results: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L229",
        "old_file": "tests/sqllab_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "tests/sqllab_tests.py",
        "new_code": "    def test_search_query_with_owner_only_perms(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L350",
        "old_file": "tests/sqllab_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 350,
        "new_file": "tests/sqllab_tests.py",
        "new_code": "    def test_queryview_filter(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5c58fd18026fa8ab947a8ff5985da469c84a6a6a#diff-c9f917c04aa010d919812ce425830593ddaece48L367",
        "old_file": "tests/sqllab_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 367,
        "new_file": "tests/sqllab_tests.py",
        "new_code": "    def test_queryview_filter_owner_only(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0125ba40ef31790fddbd8cd156e9d39ce532c051#diff-888a333a2a1e36aa91dc459631a5a79f3d2f570aL45",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "superset/jinja_context.py",
        "new_code": "def url_param(param: str, default: Optional[str] = None) -> Optional[Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0125ba40ef31790fddbd8cd156e9d39ce532c051#diff-888a333a2a1e36aa91dc459631a5a79f3d2f570aL73",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "superset/jinja_context.py",
        "new_code": "def current_user_id() -> Optional[int]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0125ba40ef31790fddbd8cd156e9d39ce532c051#diff-888a333a2a1e36aa91dc459631a5a79f3d2f570aL80",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "superset/jinja_context.py",
        "new_code": "def current_username() -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0125ba40ef31790fddbd8cd156e9d39ce532c051#diff-888a333a2a1e36aa91dc459631a5a79f3d2f570aL87",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "superset/jinja_context.py",
        "new_code": "def filter_values(column: str, default: Optional[str] = None) -> List[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0125ba40ef31790fddbd8cd156e9d39ce532c051#diff-888a333a2a1e36aa91dc459631a5a79f3d2f570aL170",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def process_template(self, sql: str, **kwargs) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0125ba40ef31790fddbd8cd156e9d39ce532c051#diff-888a333a2a1e36aa91dc459631a5a79f3d2f570aL192",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def _schema_table(table_name: str, schema: str) -> Tuple[str, str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/cd6de3a1d8120d34e290931017764ec3d3965719#diff-c1eda53157fec99f4258f9b0bb54f18dce4d4b25L243",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def first_latest_partition(self, table_name: str) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/cd6de3a1d8120d34e290931017764ec3d3965719#diff-c1eda53157fec99f4258f9b0bb54f18dce4d4b25L254",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 254,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def latest_partitions(self, table_name: str) -> List[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9233a63a16311a7fe2012e97a949b9b3fd6434a1#diff-166c2672bef8de8825fe008a69aa162b4d546cb5L90",
        "old_file": "superset/utils/log.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "superset/utils/log.py",
        "new_code": "def get_event_logger_from_cfg_value(cfg_value: object) -> AbstractEventLogger:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L47",
        "old_file": "superset/db_engine_specs/clickhouse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/db_engine_specs/clickhouse.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L53",
        "old_file": "superset/db_engine_specs/db2.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "superset/db_engine_specs/db2.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L57",
        "old_file": "superset/db_engine_specs/db2.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "superset/db_engine_specs/db2.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L45",
        "old_file": "superset/db_engine_specs/drill.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "superset/db_engine_specs/drill.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L49",
        "old_file": "superset/db_engine_specs/drill.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "superset/db_engine_specs/drill.py",
        "new_code": "    def epoch_ms_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L53",
        "old_file": "superset/db_engine_specs/drill.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "superset/db_engine_specs/drill.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L43",
        "old_file": "superset/db_engine_specs/impala.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/db_engine_specs/impala.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L47",
        "old_file": "superset/db_engine_specs/impala.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/db_engine_specs/impala.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L54",
        "old_file": "superset/db_engine_specs/impala.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "superset/db_engine_specs/impala.py",
        "new_code": "    def get_schema_names(cls, inspector: Inspector) -> List[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L51",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L55",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def fetch_data(cls, cursor, limit: int) -> List[Tuple]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L67",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def get_sqla_column_type(cls, type_: str) -> Optional[TypeEngine]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L54",
        "old_file": "superset/db_engine_specs/mysql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "superset/db_engine_specs/mysql.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L68",
        "old_file": "superset/db_engine_specs/mysql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "superset/db_engine_specs/mysql.py",
        "new_code": "    def get_datatype(cls, type_code: Any) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L85",
        "old_file": "superset/db_engine_specs/mysql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "superset/db_engine_specs/mysql.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L43",
        "old_file": "superset/db_engine_specs/oracle.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/db_engine_specs/oracle.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L44",
        "old_file": "superset/db_engine_specs/postgres.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/db_engine_specs/postgres.py",
        "new_code": "    def fetch_data(cls, cursor, limit: int) -> List[Tuple]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L52",
        "old_file": "superset/db_engine_specs/postgres.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "superset/db_engine_specs/postgres.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L56",
        "old_file": "superset/db_engine_specs/postgres.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "superset/db_engine_specs/postgres.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L26",
        "old_file": "superset/db_engine_specs/redshift.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "superset/db_engine_specs/redshift.py",
        "new_code": "    def _mutate_label(label: str) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L44",
        "old_file": "superset/db_engine_specs/sqlite.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/db_engine_specs/sqlite.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L75",
        "old_file": "superset/db_engine_specs/sqlite.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "superset/db_engine_specs/sqlite.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L82",
        "old_file": "superset/db_engine_specs/sqlite.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "superset/db_engine_specs/sqlite.py",
        "new_code": "    def get_table_names(cls, inspector: Inspector, schema: str) -> List[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L40",
        "old_file": "superset/db_engine_specs/teradata.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "superset/db_engine_specs/teradata.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L47",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def tables(self) -> Set[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L51",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def limit(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L54",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def is_select(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L57",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def is_explain(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L60",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def is_readonly(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L64",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def stripped(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L68",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def get_statements(self) -> List[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L110",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def __is_identifier(token: Token) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L135",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def as_create_table(self, table_name: str, overwrite: bool = False) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L191",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def _extract_limit_from_query(self, statement: TokenList) -> Optional[int]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/fb51632e18e03d3401d25035b3a14d7a40370295#diff-c65fb246ee89c7e641960b89edc091afe5f603b8L211",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 211,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def get_query_with_new_limit(self, new_limit: int) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7595d9e5fdb4e9614b6d3c812a7f26282550ff01#diff-0ef114e01e6ee82939bf0b4bc7caa1fd19af0379L808",
        "old_file": "superset/utils/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 808,
        "new_file": "superset/utils/core.py",
        "new_code": "def zlib_decompress(blob: bytes, decode: Optional[bool] = True) -> Union[bytes, str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4e2d1c1a6205935a8c3d1dfa48a153d5433b314f#diff-50ce8b2323e5c1bb885841f3ef9003baff9e8493L480",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 480,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def _extract_error_message(cls, e: Exception) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/8847e10529639f45dd72b61cb84d48d63876f73e#diff-582f0ec30dee5a299d8f1e8c857d9f8ecd83b4b8L130",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def get_allow_cost_estimate(cls, version: str = None) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L71",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def get_query_result(self, query_object: QueryObject) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L117",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def df_metrics_to_num(self, df: pd.DataFrame, query_object: QueryObject) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L124",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 124,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def get_data(self, df: pd.DataFrame) -> List[Dict]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L127",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def get_single_payload(self, query_obj: QueryObject) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L141",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def get_payload(self) -> List[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L146",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 146,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def cache_timeout(self) -> int:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L158",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 158,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def get_df_payload(self, query_obj: QueryObject, **kwargs) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L100",
        "old_file": "superset/common/query_object.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "superset/common/query_object.py",
        "new_code": "    def to_dict(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L119",
        "old_file": "superset/common/query_object.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "superset/common/query_object.py",
        "new_code": "    def cache_key(self, **extra) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L137",
        "old_file": "superset/common/query_object.py",
        "old_line": "",
        "old_code": "",
        "new_line": 137,
        "new_file": "superset/common/query_object.py",
        "new_code": "    def json_dumps(self, obj: Any, sort_keys: bool = False) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dfb3bf69a0d4388a04d23c3049ed33b5aedf524f#diff-8d605ef8a621bfed24bd838b031472db91f761b9L34",
        "old_file": "superset/connectors/connector_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/connectors/connector_registry.py",
        "new_code": "    def register_sources(cls, datasource_config: OrderedDict) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/05b67673c3fdb4c94e5af5bc2fe83f1b227d7d08#diff-2467025fc5748f44b51f62a4b5155e439e0a728dL797",
        "old_file": "superset/security.py",
        "old_line": "",
        "old_code": "",
        "new_line": 797,
        "new_file": "superset/security.py",
        "new_code": "    def assert_query_context_permission(self, query_context: \"QueryContext\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/05b67673c3fdb4c94e5af5bc2fe83f1b227d7d08#diff-2467025fc5748f44b51f62a4b5155e439e0a728dL807",
        "old_file": "superset/security.py",
        "old_line": "",
        "old_code": "",
        "new_line": 807,
        "new_file": "superset/security.py",
        "new_code": "    def assert_viz_permission(self, viz: \"BaseViz\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9fc37ea9f1ff032dea923012613d4e7189ada178#diff-21a22639d74ea9f7f2959f0b77b88699860e1ae0L343",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 343,
        "old_code": "    def get_limit_from_sql(cls, sql: str) -> int:",
        "new_line": 343,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def get_limit_from_sql(cls, sql: str) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/63ba5044b358b19f81e1c094e0064dfe77a86064#diff-861f2b1ac421ea86ae2220f3b9925e61987321f2L4",
        "old_file": "homeassistant/util/temperature.py",
        "old_line": "",
        "old_code": "",
        "new_line": 4,
        "new_file": "homeassistant/util/temperature.py",
        "new_code": "def fahrenheit_to_celsius(fahrenheit: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/63ba5044b358b19f81e1c094e0064dfe77a86064#diff-861f2b1ac421ea86ae2220f3b9925e61987321f2L9",
        "old_file": "homeassistant/util/temperature.py",
        "old_line": "",
        "old_code": "",
        "new_line": 9,
        "new_file": "homeassistant/util/temperature.py",
        "new_code": "def celsius_to_fahrenheit(celsius: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26526ca57ab847cefcbd0fbf8f61e4108ac101b1#diff-596e854a5ce1037de4805394a39d5bfede55ea0bL20",
        "old_file": "homeassistant/util/temperature.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "homeassistant/util/temperature.py",
        "new_code": "def convert(temperature: float, from_unit: str, to_unit: str) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0377338a81da8b1716253c8b019c44234930ea9a#diff-bef9a82396b8001bd6472b6f2c4fe26bceab78aeL10",
        "old_file": "homeassistant/helpers/location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "homeassistant/helpers/location.py",
        "new_code": "def has_location(state: State) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9fc37ea9f1ff032dea923012613d4e7189ada178#diff-21a22639d74ea9f7f2959f0b77b88699860e1ae0L24",
        "old_file": "superset/sql_validators/__init__.py",
        "old_line": 24,
        "old_code": "def get_validator_by_name(name: str) -> Optional[base.BaseSQLValidator]:",
        "new_line": 23,
        "new_file": "superset/sql_validators/__init__.py",
        "new_code": "def get_validator_by_name(name: str) -> Optional[Type[base.BaseSQLValidator]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL443",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 443,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 443,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL46",
        "old_file": "superset/db_engine_specs/clickhouse.py",
        "old_line": 46,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 47,
        "new_file": "superset/db_engine_specs/clickhouse.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL56",
        "old_file": "superset/db_engine_specs/db2.py",
        "old_line": 56,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/db2.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL52",
        "old_file": "superset/db_engine_specs/drill.py",
        "old_line": 52,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 53,
        "new_file": "superset/db_engine_specs/drill.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL44",
        "old_file": "superset/db_engine_specs/elasticsearch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/db_engine_specs/elasticsearch.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL46",
        "old_file": "superset/db_engine_specs/impala.py",
        "old_line": 46,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 46,
        "new_file": "superset/db_engine_specs/impala.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL53",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": 53,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 53,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL53",
        "old_file": "superset/db_engine_specs/mysql.py",
        "old_line": 53,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 53,
        "new_file": "superset/db_engine_specs/mysql.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL42",
        "old_file": "superset/db_engine_specs/oracle.py",
        "old_line": 42,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 43,
        "new_file": "superset/db_engine_specs/oracle.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL59",
        "old_file": "superset/db_engine_specs/postgres.py",
        "old_line": 59,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/postgres.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL74",
        "old_file": "superset/db_engine_specs/postgres.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "superset/db_engine_specs/postgres.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0a3b1212442d306673e619cafc2ca65285fcbfec#diff-8ac1b4977e700201b25bcac3c7f7b499f198742dL78",
        "old_file": "superset/db_engine_specs/sqlite.py",
        "old_line": 78,
        "old_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> str:",
        "new_line": 78,
        "new_file": "superset/db_engine_specs/sqlite.py",
        "new_code": "    def convert_dttm(cls, target_type: str, dttm: datetime) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL217",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 217,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL222",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 222,
        "old_code": "    def speed_list(self) -> list:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL227",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 227,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL241",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 241,
        "old_code": "    def turn_on(self, speed: str=SPEED_MED) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL247",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 247,
        "old_code": "    def turn_off(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL252",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 252,
        "old_code": "    def set_speed(self, speed: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cc99d266b7b7cacca9102bb4a0c153f3ce24d4d5#diff-b70b6a00c1adf412e8debe1cc55dfa3a6360398eL269",
        "old_file": "homeassistant/components/fan/mqtt.py",
        "old_line": 269,
        "old_code": "    def oscillate(self, oscillating: bool) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/mqtt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e4904144846afb7d8d0433fdc7ca97c49b41d0b4#diff-94cc28fbf43176e1184948c0c20504c0e2fcf1f4L25",
        "old_file": "tests/load_examples_test.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "tests/load_examples_test.py",
        "new_code": "    def setUp(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/df2ee5cbcb8bc6e5cd310b9b9015509db744a256#diff-0d910568b4542083fd3f5ef918822f2d25e62cbaL96",
        "old_file": "superset/app.py",
        "old_line": 96,
        "old_code": "    def configure_celery(self) -> None:",
        "new_line": "",
        "new_file": "superset/app.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0ed0031412fa5d4b97b628c9449882c40b16a28d#diff-5f1717cc59596d4612acd2adf9da8c05c782928bL36",
        "old_file": "superset/extensions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/extensions.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/003e98c231801b0ea34ebaefcff06c7ae9568faf#diff-f26dbe0a6c701f69028caf40bdb1bb01868ffa7cL381",
        "old_file": "superset/security.py",
        "old_line": 381,
        "old_code": "    def _user_datasource_perms(self) -> Set[str]:",
        "new_line": "",
        "new_file": "superset/security.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/003e98c231801b0ea34ebaefcff06c7ae9568faf#diff-f26dbe0a6c701f69028caf40bdb1bb01868ffa7cL156",
        "old_file": "superset/security.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "superset/security.py",
        "new_code": "    def unpack_schema_perm(self, schema_permission: str) -> Tuple[str, str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/003e98c231801b0ea34ebaefcff06c7ae9568faf#diff-f26dbe0a6c701f69028caf40bdb1bb01868ffa7cL391",
        "old_file": "superset/security.py",
        "old_line": "",
        "old_code": "",
        "new_line": 391,
        "new_file": "superset/security.py",
        "new_code": "    def get_public_role(self) -> Optional[Any]:  # Optional[self.role_model]"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/003e98c231801b0ea34ebaefcff06c7ae9568faf#diff-f26dbe0a6c701f69028caf40bdb1bb01868ffa7cL401",
        "old_file": "superset/security.py",
        "old_line": "",
        "old_code": "",
        "new_line": 401,
        "new_file": "superset/security.py",
        "new_code": "    def user_view_menu_names(self, permission_name: str) -> Set[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/003e98c231801b0ea34ebaefcff06c7ae9568faf#diff-f26dbe0a6c701f69028caf40bdb1bb01868ffa7cL43",
        "old_file": "tests/security_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "tests/security_tests.py",
        "new_code": "def create_schema_perm(view_menu_name: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/003e98c231801b0ea34ebaefcff06c7ae9568faf#diff-f26dbe0a6c701f69028caf40bdb1bb01868ffa7cL53",
        "old_file": "tests/security_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "tests/security_tests.py",
        "new_code": "def delete_schema_perm(view_menu_name: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/60914fa76a4309036b91b932fea91e7236b408cb#diff-3f0074980569694a0d085b391dc9e9fe6c10f623L42",
        "old_file": "superset/views/sql_lab.py",
        "old_line": 42,
        "old_code": "    def apply(self, query: BaseQuery, func: Callable) -> BaseQuery:",
        "new_line": "",
        "new_file": "superset/views/sql_lab.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/60914fa76a4309036b91b932fea91e7236b408cb#diff-3f0074980569694a0d085b391dc9e9fe6c10f623L41",
        "old_file": "superset/views/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "superset/views/sql_lab.py",
        "new_code": "    def apply(self, query: BaseQuery, value: Callable) -> BaseQuery:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/562aeab1aad6da0577e17c8c5467030ba8ee3e55#diff-bea70bb782f7f8711546e5e2458df6840167abe6L191",
        "old_file": "superset/sql_parse.py",
        "old_line": 191,
        "old_code": "    def _extract_limit_from_query(self, statement: TokenList) -> Optional[int]:",
        "new_line": "",
        "new_file": "superset/sql_parse.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/562aeab1aad6da0577e17c8c5467030ba8ee3e55#diff-bea70bb782f7f8711546e5e2458df6840167abe6L31",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "superset/sql_parse.py",
        "new_code": "def _extract_limit_from_query(statement: TokenList) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d9ae7ceb0c39263926b115fc188e976dad385b7b#diff-c7ed397d798b53339e7afa5d040a27db4b84110cL66",
        "old_file": "homeassistant/components/switch/tellstick.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/switch/tellstick.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3d9181d27047f919109701ef5007654c494614c4#diff-f8af3a90ec8c49f35e3c81a1c16c8fcb3b3d5f45L412",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 412,
        "new_file": "superset/views/base.py",
        "new_code": "    def _get_related_filter(self, datamodel, column_name: str, value: str) -> Filters:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5b690f94116b5b77c0af566d24f298cc6db469b9#diff-6ac9696fd639e0c08dc9541c34d0e8e78c7c3785L172",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "superset/views/base.py",
        "new_code": "    def json_response(obj, status=200) -> Response:  # pylint: disable=no-self-use"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/8fc814fc62d8f96f93aaac8223a660e4f9e6d28e#diff-6e0fb8ec02f4932f2ec2265858daf9246f2f0816L864",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 864,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def pyodbc_rows_to_tuples(data: List[Any]) -> List[Tuple]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/6537d5ed8c11c061ee966d88b7bce772ac635227#diff-75b7c64a0ef2d8688507e444724db18fb20985a4L26",
        "old_file": "superset/dataframe.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "superset/dataframe.py",
        "new_code": "def df_to_records(dframe: pd.DataFrame) -> List[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/c087a48d5289767e0ae29205318c11a27963d496#diff-2996d0a751bbc7991f73ba792c25ad7279c3327bL159",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 159,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def cache_key(self, query_obj: QueryObject, **kwargs) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/74158694c567ec26706fd3cf8128aed2cb625291#diff-501ad73cb72cbff156bd07250b5f05e5fa07be92L433",
        "old_file": "superset/views/base.py",
        "old_line": 433,
        "old_code": "    def _get_related_filter(self, datamodel, column_name: str, value: str) -> Filters:",
        "new_line": "",
        "new_file": "superset/views/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/74158694c567ec26706fd3cf8128aed2cb625291#diff-501ad73cb72cbff156bd07250b5f05e5fa07be92L115",
        "old_file": "superset/views/dashboard/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "superset/views/dashboard/api.py",
        "new_code": "    def make_object(self, data: Dict, discard: List[str] = None) -> Dashboard:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/74158694c567ec26706fd3cf8128aed2cb625291#diff-501ad73cb72cbff156bd07250b5f05e5fa07be92L65",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_user(username: str) -> ab_models.User:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a4b8e0b9e45dea5dabef55a0565714a9f30f03bc#diff-43483b51d964db1461dc7dd9f5d7eef30ec4ae1eL851",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 851,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def get_function_names(cls, database: \"Database\") -> List[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/68e85ab1b6ba788504f8ced93c22077b3670d25a#diff-4fa699b9b4a8185347a36465c6b3b14e5cc9d0d4L37",
        "old_file": "superset/utils/cache_manager.py",
        "old_line": 37,
        "old_code": "    def _setup_cache(app: Flask, cache_config) -> Optional[Cache]:",
        "new_line": 37,
        "new_file": "superset/utils/cache_manager.py",
        "new_code": "    def _setup_cache(app: Flask, cache_config: CacheConfig) -> Cache:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/68e85ab1b6ba788504f8ced93c22077b3670d25a#diff-4fa699b9b4a8185347a36465c6b3b14e5cc9d0d4L30",
        "old_file": "superset/utils/cache_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "superset/utils/cache_manager.py",
        "new_code": "    def init_app(self, app: Flask) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/68e85ab1b6ba788504f8ced93c22077b3670d25a#diff-4fa699b9b4a8185347a36465c6b3b14e5cc9d0d4L47",
        "old_file": "superset/utils/cache_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/utils/cache_manager.py",
        "new_code": "    def tables_cache(self) -> Cache:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/68e85ab1b6ba788504f8ced93c22077b3670d25a#diff-4fa699b9b4a8185347a36465c6b3b14e5cc9d0d4L37",
        "old_file": "superset/utils/cache_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "superset/utils/cache_manager.py",
        "new_code": "    def _setup_cache(app: Flask, cache_config: CacheConfig) -> Cache:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L191",
        "old_file": "superset/security/manager.py",
        "old_line": 191,
        "old_code": "    def can_only_access_owned_queries(self) -> bool:",
        "new_line": "",
        "new_file": "superset/security/manager.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L191",
        "old_file": "superset/security/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "superset/security/manager.py",
        "new_code": "    def can_access_all_queries(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L226",
        "old_file": "tests/sqllab_tests.py",
        "old_line": 226,
        "old_code": "    def test_search_query_with_owner_only_perms(self) -> None:",
        "new_line": "",
        "new_file": "tests/sqllab_tests.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L359",
        "old_file": "tests/sqllab_tests.py",
        "old_line": 359,
        "old_code": "    def test_queryview_filter_owner_only(self) -> None:",
        "new_line": "",
        "new_file": "tests/sqllab_tests.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L226",
        "old_file": "tests/sqllab_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 226,
        "new_file": "tests/sqllab_tests.py",
        "new_code": "    def test_search_query_only_owned(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L338",
        "old_file": "tests/sqllab_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 338,
        "new_file": "tests/sqllab_tests.py",
        "new_code": "    def test_queryview_can_access_all_queries(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/916d184076f39c83c7a9f96de7ab8653955d5238#diff-ab9ba63608e18f627258e1e1e989342d5c8c5389L372",
        "old_file": "tests/sqllab_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 372,
        "new_file": "tests/sqllab_tests.py",
        "new_code": "    def test_queryview_admin_can_access_all_queries(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1d8a1df2c497912262ac7a2fa03e10294c3b959c#diff-fcbc0e304f5116165f3b9f1aace51d5c73da7155L66",
        "old_file": "homeassistant/components/switch/tellstick.py",
        "old_line": 66,
        "old_code": "    def force_update(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/switch/tellstick.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1d8a1df2c497912262ac7a2fa03e10294c3b959c#diff-fcbc0e304f5116165f3b9f1aace51d5c73da7155L56",
        "old_file": "homeassistant/components/switch/tellstick.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/switch/tellstick.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/161d211c07398a14992cf79784b566b7b9f1fb39#diff-11c492c025effc82ecd61813bea3eb030ddab8a7L60",
        "old_file": "superset/result_set.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "superset/result_set.py",
        "new_code": "def stringify(obj: Any) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/161d211c07398a14992cf79784b566b7b9f1fb39#diff-11c492c025effc82ecd61813bea3eb030ddab8a7L64",
        "old_file": "superset/result_set.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "superset/result_set.py",
        "new_code": "def stringify_values(array: np.ndarray) -> np.ndarray:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/97cc76b43e0156d02b723f4e0a24509f946e668a#diff-93606ded969d526ccf0ffdcc95d8cfceb45ab694L56",
        "old_file": "homeassistant/components/switch/tellstick.py",
        "old_line": 56,
        "old_code": "    def force_update(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/switch/tellstick.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f993bdc7efcbfe293a62140bf604ed888dddabbd#diff-038d7144d50da35b9ac7636e70248677a3ad5dc6L125",
        "old_file": "superset/views/base_api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "superset/views/base_api.py",
        "new_code": "    def incr_stats(self, action: str, func_name: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a7e433a512c47ab8d3500ddfc711d6b323b33043#diff-a49277a18c868c088ec8dd554ba07aa6266fa438L131",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 131,
        "old_code": "    def get_allow_cost_estimate(cls, version: str = None) -> bool:",
        "new_line": 131,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def get_allow_cost_estimate(cls, version: Optional[str] = None) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a7e433a512c47ab8d3500ddfc711d6b323b33043#diff-a49277a18c868c088ec8dd554ba07aa6266fa438L58",
        "old_file": "superset/views/base_schemas.py",
        "old_line": 58,
        "old_code": "    def make_object(self, data: Dict, discard: List[str] = None) -> Model:",
        "new_line": 58,
        "new_file": "superset/views/base_schemas.py",
        "new_code": "    def make_object(self, data: Dict, discard: Optional[List[str]] = None) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a7e433a512c47ab8d3500ddfc711d6b323b33043#diff-a49277a18c868c088ec8dd554ba07aa6266fa438L98",
        "old_file": "superset/views/chart/api.py",
        "old_line": 98,
        "old_code": "    def make_object(self, data: Dict, discard: List[str] = None) -> Slice:",
        "new_line": 98,
        "new_file": "superset/views/chart/api.py",
        "new_code": "    def make_object(self, data: Dict, discard: Optional[List[str]] = None) -> Slice:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a7e433a512c47ab8d3500ddfc711d6b323b33043#diff-a49277a18c868c088ec8dd554ba07aa6266fa438L122",
        "old_file": "superset/views/dashboard/api.py",
        "old_line": 122,
        "old_code": "    def make_object(self, data: Dict, discard: List[str] = None) -> Dashboard:",
        "new_line": 122,
        "new_file": "superset/views/dashboard/api.py",
        "new_code": "    def make_object(self, data: Dict, discard: Optional[List[str]] = None) -> Dashboard:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL490",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 490,
        "old_code": "    def _extract_error_message(cls, e: Exception) -> str:",
        "new_line": 504,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def _extract_error_message(cls, e: Exception) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL87",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def __init__(self, expr: str, col: ColumnClause, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL99",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def _constructor(self) -> ColumnClause:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL64",
        "old_file": "superset/db_engine_specs/drill.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "superset/db_engine_specs/drill.py",
        "new_code": "    def adjust_database_uri(cls, uri: URL, selected_schema: Optional[str]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL47",
        "old_file": "superset/db_engine_specs/druid.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/db_engine_specs/druid.py",
        "new_code": "    def alter_new_orm_column(cls, orm_col: \"TableColumn\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL42",
        "old_file": "superset/db_engine_specs/exasol.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "superset/db_engine_specs/exasol.py",
        "new_code": "    def fetch_data(cls, cursor: Any, limit: int) -> List[Tuple]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL49",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL64",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def fetch_data(cls, cursor: Any, limit: int) -> List[Tuple]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL54",
        "old_file": "superset/db_engine_specs/postgres.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "superset/db_engine_specs/postgres.py",
        "new_code": "    def fetch_data(cls, cursor: Any, limit: int) -> List[Tuple]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/9f5f8e5d92f4d346acbedfbd2a1105f7194fea78#diff-b555fdc5c057a143a8562f2fa3ca69de21aa33acL37",
        "old_file": "superset/utils/feature_flag_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "superset/utils/feature_flag_manager.py",
        "new_code": "    def is_feature_enabled(self, feature) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dee16de03ea6ed2a08c4d525c89676f6aa5ff3d4#diff-607cef29bac861724bde29e4e963eb80332dd325L930",
        "old_file": "superset/security/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 930,
        "new_file": "superset/security/manager.py",
        "new_code": "    def get_rls_ids(self, table: \"BaseDatasource\") -> List[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/074f9315d7f0d20837ed19d1846a295120ed63c9#diff-c46e5885d531c71249fd785fbfbbcc4a5ac7a44cL35",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": 35,
        "old_code": "    def set_drection(self: ToggleEntity, direction: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/074f9315d7f0d20837ed19d1846a295120ed63c9#diff-c46e5885d531c71249fd785fbfbbcc4a5ac7a44cL35",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": "    def set_direction(self: ToggleEntity, direction: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4e1fa95035f7fb8464669967a0b768fe4b1edbed#diff-5a566daff2a551cef587d214b27803ba823b9f61L355",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 355,
        "old_code": "    def get_query_with_new_limit(cls, sql: str, limit: int) -> str:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4e1fa95035f7fb8464669967a0b768fe4b1edbed#diff-5a566daff2a551cef587d214b27803ba823b9f61L355",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 355,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def set_or_update_query_limit(cls, sql: str, limit: int) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4e1fa95035f7fb8464669967a0b768fe4b1edbed#diff-5a566daff2a551cef587d214b27803ba823b9f61L212",
        "old_file": "superset/sql_parse.py",
        "old_line": 212,
        "old_code": "    def get_query_with_new_limit(self, new_limit: int) -> str:",
        "new_line": "",
        "new_file": "superset/sql_parse.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4e1fa95035f7fb8464669967a0b768fe4b1edbed#diff-5a566daff2a551cef587d214b27803ba823b9f61L220",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def set_or_update_query_limit(self, new_limit: int) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7a91498cf1a9e56d4b3d7b3805076137525ea277#diff-aad3caecec0d8e86a9e355422f9c5e7521c9e9b0L177",
        "old_file": "superset/result_set.py",
        "old_line": 177,
        "old_code": "    def is_date(db_type_str: Optional[str]) -> bool:",
        "new_line": "",
        "new_file": "superset/result_set.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7a91498cf1a9e56d4b3d7b3805076137525ea277#diff-aad3caecec0d8e86a9e355422f9c5e7521c9e9b0L176",
        "old_file": "superset/result_set.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "superset/result_set.py",
        "new_code": "    def is_temporal(self, db_type_str: Optional[str]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/969bc87431264bb71462ca834b934fd295ed0650#diff-33706bc0b90f5d8f0516b802895fb764a6cb2790L53",
        "old_file": "superset/db_engine_specs/oracle.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "superset/db_engine_specs/oracle.py",
        "new_code": "    def epoch_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/969bc87431264bb71462ca834b934fd295ed0650#diff-33706bc0b90f5d8f0516b802895fb764a6cb2790L57",
        "old_file": "superset/db_engine_specs/oracle.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "superset/db_engine_specs/oracle.py",
        "new_code": "    def epoch_ms_to_dttm(cls) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/80a794e587f9f63f28afea741f97e36a7ca8e427#diff-d2a2c556f741cd06a39eb4a4df192aad7d218969L35",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": 35,
        "old_code": "    def set_direction(self: ToggleEntity, direction: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/80a794e587f9f63f28afea741f97e36a7ca8e427#diff-d2a2c556f741cd06a39eb4a4df192aad7d218969L39",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": 39,
        "old_code": "    def set_speed(self: ToggleEntity, speed: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/80a794e587f9f63f28afea741f97e36a7ca8e427#diff-d2a2c556f741cd06a39eb4a4df192aad7d218969L43",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": 43,
        "old_code": "    def turn_on(self: ToggleEntity, speed: str=None, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/80a794e587f9f63f28afea741f97e36a7ca8e427#diff-d2a2c556f741cd06a39eb4a4df192aad7d218969L47",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": 47,
        "old_code": "    def turn_off(self: ToggleEntity, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/80a794e587f9f63f28afea741f97e36a7ca8e427#diff-d2a2c556f741cd06a39eb4a4df192aad7d218969L78",
        "old_file": "homeassistant/components/fan/wink.py",
        "old_line": 78,
        "old_code": "    def speed_list(self: ToggleEntity) -> list:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/wink.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ef2ebbd570524ffede72011803a76eacf1203370#diff-3ec7989294f10d635c841e905f67e369c9cfdc16L253",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 253,
        "old_code": "    def get_time_grain_functions(cls) -> Dict[Optional[str], str]:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ef2ebbd570524ffede72011803a76eacf1203370#diff-3ec7989294f10d635c841e905f67e369c9cfdc16L262",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 262,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def get_time_grain_expressions(cls) -> Dict[Optional[str], str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3682702e91d17b432fccc7ade40d4713bfcf2a21#diff-0ccace73d5e06d729e9bc2720797e9c0506d6de9L948",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 948,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def mutate_db_for_connection_test(database: \"Database\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f51ab59748a72e57dc3f57084ecb8532e139f30d#diff-fc3f729abba94e0ec317a7135b3628e570b27b1bL51",
        "old_file": "superset/commands/utils.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/commands/utils.py",
        "new_code": "def get_datasource_by_id(datasource_id: int, datasource_type: str) -> BaseDatasource:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L284",
        "old_file": "superset/datasets/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 284,
        "new_file": "superset/datasets/api.py",
        "new_code": "    def refresh(self, pk: int) -> Response:  # pylint: disable=invalid-name"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L82",
        "old_file": "superset/datasets/dao.py",
        "old_line": 82,
        "old_code": "    def find_by_id(model_id: int) -> SqlaTable:",
        "new_line": "",
        "new_file": "superset/datasets/dao.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L89",
        "old_file": "superset/datasets/dao.py",
        "old_line": 89,
        "old_code": "    def create(properties: Dict, commit=True) -> Optional[SqlaTable]:",
        "new_line": "",
        "new_file": "superset/datasets/dao.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L80",
        "old_file": "superset/datasets/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "superset/datasets/dao.py",
        "new_code": "    def validate_columns_exist(dataset_id: int, columns_ids: List[int]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L89",
        "old_file": "superset/datasets/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "superset/datasets/dao.py",
        "new_code": "    def validate_columns_uniqueness(dataset_id: int, columns_names: List[str]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L99",
        "old_file": "superset/datasets/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "superset/datasets/dao.py",
        "new_code": "    def validate_metrics_exist(dataset_id: int, metrics_ids: List[int]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ccb22dc976d3ddf5de88ef24ebe4b320c00096b3#diff-f00108a15499246e28ebc98c407b8188c545c210L108",
        "old_file": "superset/datasets/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "superset/datasets/dao.py",
        "new_code": "    def validate_metrics_uniqueness(dataset_id: int, metrics_names: List[str]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/81971967c3df4d430c08b52dfce7685d7fd44264#diff-8ba087c1f2366748e3c5c5bbb19d926a29beb70dL290",
        "old_file": "superset/charts/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 290,
        "new_file": "superset/charts/api.py",
        "new_code": "    def bulk_delete(self, **kwargs) -> Response:  # pylint: disable=arguments-differ"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/81971967c3df4d430c08b52dfce7685d7fd44264#diff-8ba087c1f2366748e3c5c5bbb19d926a29beb70dL62",
        "old_file": "superset/dao/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "superset/dao/base.py",
        "new_code": "    def find_by_ids(cls, model_ids: List[int]) -> List[Model]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/81971967c3df4d430c08b52dfce7685d7fd44264#diff-8ba087c1f2366748e3c5c5bbb19d926a29beb70dL36",
        "old_file": "superset/dashboards/dao.py",
        "old_line": 36,
        "old_code": "    def find_by_ids(model_ids: List[int]) -> List[Dashboard]:",
        "new_line": "",
        "new_file": "superset/dashboards/dao.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/499f9c8fca3ea01b7f7eeb977531669518c5dc4b#diff-6a588046e43fbe82ad27b6f9e306a0828a8f10f8L969",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 969,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def get_extra_params(database: \"Database\") -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/499f9c8fca3ea01b7f7eeb977531669518c5dc4b#diff-6a588046e43fbe82ad27b6f9e306a0828a8f10f8L58",
        "old_file": "superset/db_engine_specs/druid.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "superset/db_engine_specs/druid.py",
        "new_code": "    def get_extra_params(database: \"Database\") -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L43",
        "old_file": "superset/charts/commands/bulk_delete.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/charts/commands/bulk_delete.py",
        "new_code": "    def run(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L43",
        "old_file": "superset/charts/commands/create.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/charts/commands/create.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L44",
        "old_file": "superset/charts/commands/delete.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/charts/commands/delete.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L35",
        "old_file": "superset/charts/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "superset/charts/commands/exceptions.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L51",
        "old_file": "superset/charts/commands/update.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/charts/commands/update.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L35",
        "old_file": "superset/charts/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "superset/charts/dao.py",
        "new_code": "    def bulk_delete(models: Optional[List[Slice]], commit: bool = True) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L27",
        "old_file": "superset/charts/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "superset/charts/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L28",
        "old_file": "superset/charts/schemas.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/charts/schemas.py",
        "new_code": "def validate_json(value: Union[bytes, bytearray, str]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L39",
        "old_file": "superset/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "superset/commands/exceptions.py",
        "new_code": "    def __init__(self, message=\"\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L49",
        "old_file": "superset/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "superset/commands/exceptions.py",
        "new_code": "    def normalized_messages(self) -> Dict[Any, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L78",
        "old_file": "superset/dao/base.py",
        "old_line": 78,
        "old_code": "    def create(cls, properties: Dict, commit=True) -> Optional[Model]:",
        "new_line": 78,
        "new_file": "superset/dao/base.py",
        "new_code": "    def create(cls, properties: Dict, commit: bool = True) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L98",
        "old_file": "superset/dao/base.py",
        "old_line": 98,
        "old_code": "    def update(cls, model: Model, properties: Dict, commit=True) -> Optional[Model]:",
        "new_line": 98,
        "new_file": "superset/dao/base.py",
        "new_code": "    def update(cls, model: Model, properties: Dict, commit: bool = True) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L78",
        "old_file": "superset/dao/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "superset/dao/base.py",
        "new_code": "    def create(cls, properties: Dict, commit: bool = True) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L98",
        "old_file": "superset/dao/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "superset/dao/base.py",
        "new_code": "    def update(cls, model: Model, properties: Dict, commit: bool = True) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/ec795a4711390bcd93de51940cc173d4552a0f8d#diff-12a93779a9c502673ee9dccb8ae419f9308c1455L370",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 370,
        "new_file": "superset/views/base.py",
        "new_code": "def check_ownership(obj: Any, raise_if_false: bool = True) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/752de8fe9de4a3e4f41404cc3d6d762ea9848f2f#diff-5209356c7bf0ebe353e7e6aa1998cea28de2ee2aL42",
        "old_file": "superset/dashboards/dao.py",
        "old_line": 42,
        "old_code": "    def validate_update_slug_uniqueness(dashboard_id: int, slug: str) -> bool:",
        "new_line": 42,
        "new_file": "superset/dashboards/dao.py",
        "new_code": "    def validate_update_slug_uniqueness(dashboard_id: int, slug: Optional[str]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL29",
        "old_file": "superset/commands/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "superset/commands/base.py",
        "new_code": "    def run(self) -> Optional[Model]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL28",
        "old_file": "superset/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/commands/exceptions.py",
        "new_code": "    def __repr__(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL43",
        "old_file": "superset/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/commands/exceptions.py",
        "new_code": "    def add(self, exception: ValidationError) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL46",
        "old_file": "superset/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "superset/commands/exceptions.py",
        "new_code": "    def add_list(self, exceptions: List[ValidationError]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL39",
        "old_file": "superset/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "superset/commands/exceptions.py",
        "new_code": "    def __init__(self, message: str = \"\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL160",
        "old_file": "superset/common/query_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "superset/common/query_context.py",
        "new_code": "    def cache_key(self, query_obj: QueryObject, **kwargs: Any) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL125",
        "old_file": "superset/common/query_object.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "superset/common/query_object.py",
        "new_code": "    def cache_key(self, **extra: Any) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL25",
        "old_file": "superset/common/tags.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "superset/common/tags.py",
        "new_code": "def add_types(engine: Engine, metadata: Metadata) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL167",
        "old_file": "superset/common/tags.py",
        "old_line": "",
        "old_code": "",
        "new_line": 167,
        "new_file": "superset/common/tags.py",
        "new_code": "def add_owners(engine: Engine, metadata: Metadata) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL323",
        "old_file": "superset/common/tags.py",
        "old_line": "",
        "old_code": "",
        "new_line": 323,
        "new_file": "superset/common/tags.py",
        "new_code": "def add_favorites(engine: Engine, metadata: Metadata) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL115",
        "old_file": "superset/dao/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "superset/dao/base.py",
        "new_code": "    def delete(cls, model: Model, commit: bool = True) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL27",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def __init__(self, prefix: str = \"superset\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL30",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def key(self, key: str) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL35",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def incr(self, key: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL39",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def decr(self, key: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL43",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def timing(self, key, value: float) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5e55e09e3ea41569ecb24cd22e352ab1c274aab9#diff-a4542e2b87930bb8a4f470a443ab82b7a9a638cbL46",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def gauge(self, key: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L29",
        "old_file": "superset/examples/bart_lines.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "superset/examples/bart_lines.py",
        "new_code": "def load_bart_lines(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L2501",
        "old_file": "superset/examples/countries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 2501,
        "new_file": "superset/examples/countries.py",
        "new_code": "def get(field: str, symbol: str) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L37",
        "old_file": "superset/examples/country_map.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "superset/examples/country_map.py",
        "new_code": "def load_country_map_data(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L23",
        "old_file": "superset/examples/css_templates.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "superset/examples/css_templates.py",
        "new_code": "def load_css_templates() -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L170",
        "old_file": "superset/examples/deck.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "superset/examples/deck.py",
        "new_code": "def load_deck_dash() -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L32",
        "old_file": "superset/examples/energy.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "superset/examples/energy.py",
        "new_code": "def load_energy(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L26",
        "old_file": "superset/examples/flights.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "superset/examples/flights.py",
        "new_code": "def load_flights(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L56",
        "old_file": "superset/examples/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "superset/examples/helpers.py",
        "new_code": "def merge_slice(slc: Slice) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L64",
        "old_file": "superset/examples/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "superset/examples/helpers.py",
        "new_code": "def get_slice_json(defaults: Dict[Any, Any], **kwargs: Any) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L37",
        "old_file": "superset/examples/long_lat.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "superset/examples/long_lat.py",
        "new_code": "def load_long_lat_data(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L27",
        "old_file": "superset/examples/multi_line.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "superset/examples/multi_line.py",
        "new_code": "def load_multi_line(only_metadata: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L28",
        "old_file": "superset/examples/paris.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/examples/paris.py",
        "new_code": "def load_paris_iris_geojson(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L28",
        "old_file": "superset/examples/tabbed_dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/examples/tabbed_dashboard.py",
        "new_code": "def load_tabbed_dashboard(_: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/dcb7b8350ed02906ef72b58b1b8a866f7585ffd3#diff-96bd60ddf198abe87c851f64e95cf2f16e2abf07L39",
        "old_file": "superset/examples/unicode_test_data.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "superset/examples/unicode_test_data.py",
        "new_code": "def load_unicode_test_data(only_metadata: bool = False, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L29",
        "old_file": "superset/commands/base.py",
        "old_line": 29,
        "old_code": "    def run(self) -> Optional[Model]:",
        "new_line": 27,
        "new_file": "superset/commands/base.py",
        "new_code": "    def run(self) -> Any:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L349",
        "old_file": "superset/dashboards/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 349,
        "new_file": "superset/dashboards/api.py",
        "new_code": "    def export(self, **kwargs: Any) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L43",
        "old_file": "superset/dashboards/commands/bulk_delete.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/dashboards/commands/bulk_delete.py",
        "new_code": "    def run(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L42",
        "old_file": "superset/dashboards/commands/create.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "superset/dashboards/commands/create.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L44",
        "old_file": "superset/dashboards/commands/delete.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/dashboards/commands/delete.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L35",
        "old_file": "superset/dashboards/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "superset/dashboards/commands/exceptions.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L49",
        "old_file": "superset/dashboards/commands/update.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "superset/dashboards/commands/update.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L51",
        "old_file": "superset/dashboards/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/dashboards/dao.py",
        "new_code": "    def bulk_delete(models: Optional[List[Dashboard]], commit: bool = True) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L41",
        "old_file": "superset/dashboards/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "superset/dashboards/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L31",
        "old_file": "superset/dashboards/schemas.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "superset/dashboards/schemas.py",
        "new_code": "def validate_json(value: Union[bytes, bytearray, str]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L38",
        "old_file": "superset/dashboards/schemas.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "superset/dashboards/schemas.py",
        "new_code": "def validate_json_metadata(value: Union[bytes, bytearray, str]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/f9db3faadec5e651fd3872b7af21f4099359ea06#diff-324cfb58d160979a63205af9e434e693f5b12b21L64",
        "old_file": "superset/dashboards/schemas.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "superset/dashboards/schemas.py",
        "new_code": "    def pre_load(self, data: Dict[str, Any]) -> None:  # pylint: disable=no-self-use"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L292",
        "old_file": "superset/datasets/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 292,
        "new_file": "superset/datasets/api.py",
        "new_code": "    def export(self, **kwargs: Any) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L46",
        "old_file": "superset/datasets/commands/create.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "superset/datasets/commands/create.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L46",
        "old_file": "superset/datasets/commands/delete.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "superset/datasets/commands/delete.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L36",
        "old_file": "superset/datasets/commands/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/datasets/commands/exceptions.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L43",
        "old_file": "superset/datasets/commands/refresh.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/datasets/commands/refresh.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L57",
        "old_file": "superset/datasets/commands/update.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "superset/datasets/commands/update.py",
        "new_code": "    def run(self) -> Model:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L45",
        "old_file": "superset/datasets/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "superset/datasets/dao.py",
        "new_code": "    def get_database_by_id(database_id: int) -> Optional[Database]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L26",
        "old_file": "superset/datasets/schemas.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "superset/datasets/schemas.py",
        "new_code": "def validate_python_date_format(value: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/4be827544eeb3966b353df90fd26a0086144d508#diff-87d7d054788904b3387a0811d50f52c099c979d1L148",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "superset/views/base.py",
        "new_code": "def get_datasource_exist_error_msg(full_name: str) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/980dd2fd419893ec5ed9386ca28fa87115a3753d#diff-51578a75a1916ed381ee3f8f81c79e5225d39d49L566",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 566,
        "old_code": "    def extract_error_message(cls, e: Exception) -> str:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/980dd2fd419893ec5ed9386ca28fa87115a3753d#diff-51578a75a1916ed381ee3f8f81c79e5225d39d49L570",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": 570,
        "old_code": "    def _extract_error_message(cls, e: Exception) -> Optional[str]:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/980dd2fd419893ec5ed9386ca28fa87115a3753d#diff-51578a75a1916ed381ee3f8f81c79e5225d39d49L564",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 564,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def extract_error_message(cls, ex: Exception) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/980dd2fd419893ec5ed9386ca28fa87115a3753d#diff-51578a75a1916ed381ee3f8f81c79e5225d39d49L568",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 568,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def _extract_error_message(cls, ex: Exception) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/980dd2fd419893ec5ed9386ca28fa87115a3753d#diff-51578a75a1916ed381ee3f8f81c79e5225d39d49L89",
        "old_file": "superset/db_engine_specs/mysql.py",
        "old_line": 89,
        "old_code": "    def _extract_error_message(cls, e: Exception) -> str:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/mysql.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/980dd2fd419893ec5ed9386ca28fa87115a3753d#diff-51578a75a1916ed381ee3f8f81c79e5225d39d49L89",
        "old_file": "superset/db_engine_specs/mysql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "superset/db_engine_specs/mysql.py",
        "new_code": "    def _extract_error_message(cls, ex: Exception) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0610c489bbc3f77ff473cb47cf1072980c6afadd#diff-731f28bb0d0f73390f85902254b36437fe94289aL362",
        "old_file": "superset/charts/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 362,
        "new_file": "superset/charts/api.py",
        "new_code": "    def data(self) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/bb80ceaccc6b134db0bb08b5d0d66ab15d59b360#diff-b4c70baf5f3bab9ce69eafd3d57ff4f5e67c2bd6L51",
        "old_file": "superset/dashboards/dao.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/dashboards/dao.py",
        "new_code": "    def update_charts_owners(model: Dashboard, commit: bool = True) -> Dashboard:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b39e78fca5265f297f3ce318bc239eee981c4453#diff-1b6070697710fae877e52dcf3812b63113e23330L34",
        "old_file": "superset/dashboards/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/dashboards/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a8ce3bccdf1bdcc963aee37cb81b0783d4157dff#diff-401499cc756b0497f8dea1afec82479dc1ab582aL156",
        "old_file": "superset/common/query_object.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "superset/common/query_object.py",
        "new_code": "    def exec_post_processing(self, df: DataFrame) -> DataFrame:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/02b3fb1d634f1e6d287060af902024c82b548c3b#diff-07424f27684b28576cd6f1114686a496b200469eL165",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "superset/views/base.py",
        "new_code": "def validate_sqlatable(table: models.SqlaTable) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/02b3fb1d634f1e6d287060af902024c82b548c3b#diff-07424f27684b28576cd6f1114686a496b200469eL191",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "superset/views/base.py",
        "new_code": "def create_table_permissions(table: models.SqlaTable) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/622561f7568a209327f6f16f93ac8b40f6bc1937#diff-e81aa16ac851e63fae5223bff445fa0fd483c878L34",
        "old_file": "superset/charts/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/charts/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/d81f720502375101b43ffe9e2e6c28c0687b00f9#diff-c546726d133e9f86defabcd4f4117c4c5c1971faL140",
        "old_file": "superset/charts/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "superset/charts/api.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/d81f720502375101b43ffe9e2e6c28c0687b00f9#diff-c546726d133e9f86defabcd4f4117c4c5c1971faL134",
        "old_file": "superset/dashboards/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 134,
        "new_file": "superset/dashboards/api.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/d81f720502375101b43ffe9e2e6c28c0687b00f9#diff-c546726d133e9f86defabcd4f4117c4c5c1971faL59",
        "old_file": "superset/utils/cache_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "superset/utils/cache_manager.py",
        "new_code": "    def thumbnail_cache(self) -> Cache:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/d81f720502375101b43ffe9e2e6c28c0687b00f9#diff-c546726d133e9f86defabcd4f4117c4c5c1971faL94",
        "old_file": "superset/views/base_api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "superset/views/base_api.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7b11b44abe08c131fb9df6ec479ea29c24c784ec#diff-07f47f5a95b1ec0401282bc03b39e79ee8e56067L46",
        "old_file": "superset/views/base_api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "superset/views/base_api.py",
        "new_code": "    def wraps(self, *args: Any, **kwargs: Any) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7b11b44abe08c131fb9df6ec479ea29c24c784ec#diff-07f47f5a95b1ec0401282bc03b39e79ee8e56067L334",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 334,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_assert_metric(self, uri: str, func_name: str) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7b11b44abe08c131fb9df6ec479ea29c24c784ec#diff-07f47f5a95b1ec0401282bc03b39e79ee8e56067L353",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 353,
        "new_file": "tests/base_tests.py",
        "new_code": "    def delete_assert_metric(self, uri: str, func_name: str) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7b11b44abe08c131fb9df6ec479ea29c24c784ec#diff-07f47f5a95b1ec0401282bc03b39e79ee8e56067L372",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 372,
        "new_file": "tests/base_tests.py",
        "new_code": "    def post_assert_metric(self, uri: str, data: Dict, func_name: str) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7b11b44abe08c131fb9df6ec479ea29c24c784ec#diff-07f47f5a95b1ec0401282bc03b39e79ee8e56067L392",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 392,
        "new_file": "tests/base_tests.py",
        "new_code": "    def put_assert_metric(self, uri: str, data: Dict, func_name: str) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/8e439b1115481b6df7f8af616ac683f399d52893#diff-940c4b5f892b56f0c704d0b451a2791302e0b3d0L490",
        "old_file": "superset/charts/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 490,
        "new_file": "superset/charts/api.py",
        "new_code": "    def add_apispec_components(self, api_spec: APISpec) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/8e439b1115481b6df7f8af616ac683f399d52893#diff-940c4b5f892b56f0c704d0b451a2791302e0b3d0L32",
        "old_file": "superset/charts/schemas.py",
        "old_line": 32,
        "old_code": "def validate_json(value: Union[bytes, bytearray, str]) -> None:",
        "new_line": "",
        "new_file": "superset/charts/schemas.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/636ee5d19af09debe49a45389ba97d12b3569e1f#diff-5b479d2ea8daf58c7fd52ac4395ee8bd105bd11cL47",
        "old_file": "superset/migrations/env.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/migrations/env.py",
        "new_code": "def run_migrations_offline() -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0b999e3b91af674217dccbceaf08efb37fcf9f7e#diff-638e2a808e16b35ff8c2b756d4f4c49d9e0ad858L519",
        "old_file": "superset/charts/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 519,
        "new_file": "superset/charts/api.py",
        "new_code": "    def datasources(self) -> Response:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a6cedaaa879348aca49a520793bb20e63d152a1f#diff-d614f5fdb340381f7b7e269147ff792260874ca7L109",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 109,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_table_by_id(table_id: int) -> SqlaTable:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a6cedaaa879348aca49a520793bb20e63d152a1f#diff-d614f5fdb340381f7b7e269147ff792260874ca7L133",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_slice(self, slice_name: str, session: Session) -> Slice:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a6cedaaa879348aca49a520793bb20e63d152a1f#diff-d614f5fdb340381f7b7e269147ff792260874ca7L139",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 139,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_table_by_name(name: str) -> SqlaTable:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a6cedaaa879348aca49a520793bb20e63d152a1f#diff-d614f5fdb340381f7b7e269147ff792260874ca7L143",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 143,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_database_by_id(db_id: int) -> Database:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/a6cedaaa879348aca49a520793bb20e63d152a1f#diff-d614f5fdb340381f7b7e269147ff792260874ca7L147",
        "old_file": "tests/base_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 147,
        "new_file": "tests/base_tests.py",
        "new_code": "    def get_druid_ds_by_name(name: str) -> DruidDatasource:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L30",
        "old_file": "superset/jinja_context.py",
        "old_line": 30,
        "old_code": "def url_param(param: str, default: Optional[str] = None) -> Optional[Any]:",
        "new_line": "",
        "new_file": "superset/jinja_context.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L61",
        "old_file": "superset/jinja_context.py",
        "old_line": 61,
        "old_code": "def current_user_id() -> Optional[int]:",
        "new_line": "",
        "new_file": "superset/jinja_context.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L68",
        "old_file": "superset/jinja_context.py",
        "old_line": 68,
        "old_code": "def current_username() -> Optional[str]:",
        "new_line": "",
        "new_file": "superset/jinja_context.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L132",
        "old_file": "superset/jinja_context.py",
        "old_line": 132,
        "old_code": "    def cache_key_wrapper(self, key: Any) -> Any:",
        "new_line": "",
        "new_file": "superset/jinja_context.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L101",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def current_user_id(self, add_to_cache_keys: bool = True) -> Optional[int]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L115",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def current_username(self, add_to_cache_keys: bool = True) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/955a4fe7925c76b2ffdd838c68099952f9595ed7#diff-6473c0e4da3afd130f8d98b5511472baebcf49c9L129",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def cache_key_wrapper(self, key: Any) -> Any:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L44",
        "old_file": "superset/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/exceptions.py",
        "new_code": "    def __init__(self, msg: str, link: Optional[str] = None) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L89",
        "old_file": "superset/models/schedules.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "superset/models/schedules.py",
        "new_code": "def get_scheduler_model(report_type: ScheduleType) -> Optional[Type[EmailSchedule]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L26",
        "old_file": "superset/security/analytics_db_safety.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "superset/security/analytics_db_safety.py",
        "new_code": "def check_sqlalchemy_uri(uri: URL) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L74",
        "old_file": "superset/security/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "superset/security/manager.py",
        "new_code": "    def __init__(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L569",
        "old_file": "superset/security/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 569,
        "new_file": "superset/security/manager.py",
        "new_code": "    def create_missing_perms(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L903",
        "old_file": "superset/security/manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 903,
        "new_file": "superset/security/manager.py",
        "new_code": "    def get_rls_filters(self, table: \"BaseDatasource\") -> List[Query]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L33",
        "old_file": "superset/tasks/thumbnails.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "superset/tasks/thumbnails.py",
        "new_code": "def cache_chart_thumbnail(chart_id: int, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/1c656feb95c15007c3c5f90b199b721c26bfa0bd#diff-cbfdbecc0eec7f5630b3780317b89dc24bb636c6L45",
        "old_file": "superset/tasks/thumbnails.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "superset/tasks/thumbnails.py",
        "new_code": "def cache_dashboard_thumbnail(dashboard_id: int, force: bool = False) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/516bdf6db1bbb9591be24ee8869c6466eb14e8c2#diff-177a9c5e3582d940e0cd94de58509ede58e9709eL88",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def apply_limit_to_sql(cls, sql: str, limit: int, database: \"Database\") -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/516bdf6db1bbb9591be24ee8869c6466eb14e8c2#diff-177a9c5e3582d940e0cd94de58509ede58e9709eL263",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 263,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def set_alias(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b27a81e0da2267d4774166d7aacf4657dea90425#diff-4311b8ab1fe7e65b08b6692f8bb2c67f08c7413aL47",
        "old_file": "superset/migrations/env.py",
        "old_line": 47,
        "old_code": "def run_migrations_offline() -> None:",
        "new_line": "",
        "new_file": "superset/migrations/env.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b27a81e0da2267d4774166d7aacf4657dea90425#diff-4311b8ab1fe7e65b08b6692f8bb2c67f08c7413aL72",
        "old_file": "tests/superset_test_config_thumbnails.py",
        "old_line": 72,
        "old_code": "def init_thumbnail_cache(app: Flask) -> RedisCache:",
        "new_line": "",
        "new_file": "tests/superset_test_config_thumbnails.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7f89f12c4a80f95282c0c5b4807b20dbd688de43#diff-bb0c4b52429c90e32a1af73b07300fc1787b470bL83",
        "old_file": "tests/jinja_context_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "tests/jinja_context_tests.py",
        "new_code": "    def test_url_param_default(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7f89f12c4a80f95282c0c5b4807b20dbd688de43#diff-bb0c4b52429c90e32a1af73b07300fc1787b470bL87",
        "old_file": "tests/jinja_context_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "tests/jinja_context_tests.py",
        "new_code": "    def test_url_param_no_default(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7f89f12c4a80f95282c0c5b4807b20dbd688de43#diff-bb0c4b52429c90e32a1af73b07300fc1787b470bL91",
        "old_file": "tests/jinja_context_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "tests/jinja_context_tests.py",
        "new_code": "    def test_url_param_query(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7f89f12c4a80f95282c0c5b4807b20dbd688de43#diff-bb0c4b52429c90e32a1af73b07300fc1787b470bL95",
        "old_file": "tests/jinja_context_tests.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "tests/jinja_context_tests.py",
        "new_code": "    def test_url_param_form_data(self) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3b0f8e9c8abb60982773a0cacc9634c4df5eb702#diff-e785458b42f54ae981204acf32fda40ae2627d74L73",
        "old_file": "superset/sql_parse.py",
        "old_line": 73,
        "old_code": "    def tables(self) -> Set[str]:",
        "new_line": 97,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def tables(self) -> Set[Table]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3b0f8e9c8abb60982773a0cacc9634c4df5eb702#diff-e785458b42f54ae981204acf32fda40ae2627d74L110",
        "old_file": "superset/sql_parse.py",
        "old_line": 110,
        "old_code": "    def __get_full_name(tlist: TokenList) -> Optional[str]:",
        "new_line": "",
        "new_file": "superset/sql_parse.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3b0f8e9c8abb60982773a0cacc9634c4df5eb702#diff-e785458b42f54ae981204acf32fda40ae2627d74L140",
        "old_file": "superset/sql_parse.py",
        "old_line": 140,
        "old_code": "    def __is_identifier(token: Token) -> bool:",
        "new_line": "",
        "new_file": "superset/sql_parse.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3b0f8e9c8abb60982773a0cacc9634c4df5eb702#diff-e785458b42f54ae981204acf32fda40ae2627d74L72",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def __str__(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3b0f8e9c8abb60982773a0cacc9634c4df5eb702#diff-e785458b42f54ae981204acf32fda40ae2627d74L137",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 137,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def _get_table(tlist: TokenList) -> Optional[Table]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3b0f8e9c8abb60982773a0cacc9634c4df5eb702#diff-e785458b42f54ae981204acf32fda40ae2627d74L167",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 167,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def _is_identifier(token: Token) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0d85d2531456ceebb8d40364102bca62e43a1140#diff-a5b6f4eaaf15e34df6ec1c329c379fdb9d835ac2L512",
        "old_file": "superset/charts/api.py",
        "old_line": 512,
        "old_code": "    def add_apispec_components(self, api_spec: APISpec) -> None:",
        "new_line": "",
        "new_file": "superset/charts/api.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/0d85d2531456ceebb8d40364102bca62e43a1140#diff-a5b6f4eaaf15e34df6ec1c329c379fdb9d835ac2L123",
        "old_file": "superset/views/base_api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "superset/views/base_api.py",
        "new_code": "    def add_apispec_components(self, api_spec: APISpec) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/83ec7365a7b369e6490a7eb666cfdb51e44d542d#diff-646e5752118e94dd8133349e884ac91ca08b716bL575",
        "old_file": "superset/db_engine_specs/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 575,
        "new_file": "superset/db_engine_specs/base.py",
        "new_code": "    def extract_errors(cls, ex: Exception) -> List[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/83ec7365a7b369e6490a7eb666cfdb51e44d542d#diff-646e5752118e94dd8133349e884ac91ca08b716bL69",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "superset/views/base.py",
        "new_code": "def get_error_msg() -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/d02f2d1fa7e46c61895d39c2adc40297c36e4cbe#diff-91f924e1e4dac29163221af5ddf3f19ee6977140L44",
        "old_file": "superset/exceptions.py",
        "old_line": 44,
        "old_code": "    def __init__(self, msg: str, link: Optional[str] = None) -> None:",
        "new_line": "",
        "new_file": "superset/exceptions.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3cc540019f2aa6c3dac1d356f0f21eeca96b34f2#diff-7e3108b0a4e3270c39434787055a808087556e2aL88",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": 88,
        "old_code": "    def apply_limit_to_sql(cls, sql: str, limit: int, database: \"Database\") -> str:",
        "new_line": "",
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3cc540019f2aa6c3dac1d356f0f21eeca96b34f2#diff-7e3108b0a4e3270c39434787055a808087556e2aL87",
        "old_file": "superset/db_engine_specs/mssql.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "superset/db_engine_specs/mssql.py",
        "new_code": "    def extract_error_message(cls, ex: Exception) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/3cc540019f2aa6c3dac1d356f0f21eeca96b34f2#diff-7e3108b0a4e3270c39434787055a808087556e2aL293",
        "old_file": "superset/sql_parse.py",
        "old_line": 293,
        "old_code": "    def set_alias(self) -> str:",
        "new_line": "",
        "new_file": "superset/sql_parse.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/53b58edd6ff759c87ea177b157206e1024c7629a#diff-259c3ebb7bca8622635025f0b99f0b6dd24f4bd4L27",
        "old_file": "superset/translations/utils.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "superset/translations/utils.py",
        "new_code": "def get_language_pack(locale: str) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L21",
        "old_file": "superset/legacy.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "superset/legacy.py",
        "new_code": "def update_time_range(form_data: Dict[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L36",
        "old_file": "superset/models/annotations.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/models/annotations.py",
        "new_code": "    def __repr__(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L57",
        "old_file": "superset/models/annotations.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "superset/models/annotations.py",
        "new_code": "    def data(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L58",
        "old_file": "superset/models/schedules.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "superset/models/schedules.py",
        "new_code": "    def user_id(self) -> int:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L62",
        "old_file": "superset/models/schedules.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "superset/models/schedules.py",
        "new_code": "    def user(self) -> RelationshipProperty:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L104",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def to_dict(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L135",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L144",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def database_name(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L148",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def username(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L175",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def pop_tab_link(self) -> Markup:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L185",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 185,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def user_email(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L189",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def sqlalchemy_uri(self) -> URL:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L192",
        "old_file": "superset/models/sql_lab.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "superset/models/sql_lab.py",
        "new_code": "    def url(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L32",
        "old_file": "superset/models/sql_types/presto_sql_types.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "superset/models/sql_types/presto_sql_types.py",
        "new_code": "    def python_type(self) -> Type:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L36",
        "old_file": "superset/models/sql_types/presto_sql_types.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/models/sql_types/presto_sql_types.py",
        "new_code": "    def _compiler_dispatch(cls, _visitor: Visitable, **_kw: Any) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L45",
        "old_file": "superset/models/sql_types/presto_sql_types.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "superset/models/sql_types/presto_sql_types.py",
        "new_code": "    def python_type(self) -> Optional[Type]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L91",
        "old_file": "superset/models/tags.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "superset/models/tags.py",
        "new_code": "def get_tag(name: str, session: Session, type_: TagTypes) -> Tag:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L102",
        "old_file": "superset/models/tags.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "superset/models/tags.py",
        "new_code": "def get_object_type(class_name: str) -> ObjectTypes:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/e789a3555843d9791b9230a61454a3abb8cb07e0#diff-4142a27b5437c85ddb68d0e073284811e14b4070L212",
        "old_file": "superset/models/tags.py",
        "old_line": "",
        "old_code": "",
        "new_line": 212,
        "new_file": "superset/models/tags.py",
        "new_code": "    def get_owners_ids(cls, target: \"Slice\") -> List[int]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7f6dbf838e4e527e640a002ce20bf5da1abf4a98#diff-6fa9865e794b0e0d570c7b737d48802db7ea466fL25",
        "old_file": "superset/connectors/base/views.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "superset/connectors/base/views.py",
        "new_code": "    def pre_delete(self, item: BaseDatasource) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/7f6dbf838e4e527e640a002ce20bf5da1abf4a98#diff-6fa9865e794b0e0d570c7b737d48802db7ea466fL315",
        "old_file": "superset/views/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 315,
        "new_file": "superset/views/base.py",
        "new_code": "    def render_app_template(self) -> FlaskResponse:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5ce1076f3cb51d3f0e6d6a3344b078db0fee452d#diff-d82103a49371a44248ff822a394e07aaaae26c5aL43",
        "old_file": "superset/views/dashboard/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "superset/views/dashboard/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5ce1076f3cb51d3f0e6d6a3344b078db0fee452d#diff-d82103a49371a44248ff822a394e07aaaae26c5aL85",
        "old_file": "superset/views/dashboard/mixin.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "superset/views/dashboard/mixin.py",
        "new_code": "    def pre_delete(self, item: \"DashboardMixin\") -> None:  # pylint: disable=no-self-use"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/5ce1076f3cb51d3f0e6d6a3344b078db0fee452d#diff-d82103a49371a44248ff822a394e07aaaae26c5aL58",
        "old_file": "superset/views/dashboard/views.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "superset/views/dashboard/views.py",
        "new_code": "    def list(self) -> FlaskResponse:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b010c358871678723499eb9541221119aaaed34f#diff-3e4428f8e1fc1442fffc608c1da3e10c66532e34L28",
        "old_file": "superset/views/database/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/views/database/filters.py",
        "new_code": "    def schema_access_databases(self) -> Set[str]:  # noqa pylint: disable=no-self-use"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b010c358871678723499eb9541221119aaaed34f#diff-3e4428f8e1fc1442fffc608c1da3e10c66532e34L34",
        "old_file": "superset/views/database/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/views/database/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b010c358871678723499eb9541221119aaaed34f#diff-3e4428f8e1fc1442fffc608c1da3e10c66532e34L47",
        "old_file": "superset/views/database/validators.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/views/database/validators.py",
        "new_code": "def schema_allows_csv_upload(database: Database, schema: Optional[str]) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/54dced1cf6886bce3508eb80f7a98fe4ed5de6ca#diff-2095a7631b68d8bf25e3826a8964cb8c7f262452L27",
        "old_file": "superset/views/chart/filters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "superset/views/chart/filters.py",
        "new_code": "    def apply(self, query: Query, value: Any) -> Query:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/54dced1cf6886bce3508eb80f7a98fe4ed5de6ca#diff-2095a7631b68d8bf25e3826a8964cb8c7f262452L44",
        "old_file": "superset/views/chart/views.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/views/chart/views.py",
        "new_code": "    def pre_add(self, item: \"SliceModelView\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/54dced1cf6886bce3508eb80f7a98fe4ed5de6ca#diff-2095a7631b68d8bf25e3826a8964cb8c7f262452L47",
        "old_file": "superset/views/chart/views.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/views/chart/views.py",
        "new_code": "    def pre_update(self, item: \"SliceModelView\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/54dced1cf6886bce3508eb80f7a98fe4ed5de6ca#diff-2095a7631b68d8bf25e3826a8964cb8c7f262452L51",
        "old_file": "superset/views/chart/views.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/views/chart/views.py",
        "new_code": "    def pre_delete(self, item: \"SliceModelView\") -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/54dced1cf6886bce3508eb80f7a98fe4ed5de6ca#diff-2095a7631b68d8bf25e3826a8964cb8c7f262452L70",
        "old_file": "superset/views/chart/views.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "superset/views/chart/views.py",
        "new_code": "    def list(self) -> FlaskResponse:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L51",
        "old_file": "superset/utils/cache.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "superset/utils/cache.py",
        "new_code": "            def wrapped_f(self: Any, *args: Any, **kwargs: Any) -> Any:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L34",
        "old_file": "superset/utils/dashboard_import_export.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/utils/dashboard_import_export.py",
        "new_code": "def decode_dashboards(o: Dict[str, Any]) -> Any:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L24",
        "old_file": "superset/utils/dates.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "superset/utils/dates.py",
        "new_code": "def datetime_to_epoch(dttm: datetime) -> float:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L32",
        "old_file": "superset/utils/dates.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "superset/utils/dates.py",
        "new_code": "def now_as_float() -> float:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L38",
        "old_file": "superset/utils/decorators.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "superset/utils/decorators.py",
        "new_code": "def stats_timing(stats_key: str, stats_logger: BaseStatsLogger) -> Iterator[float]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L31",
        "old_file": "superset/utils/dict_import_export.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "superset/utils/dict_import_export.py",
        "new_code": "def export_schema_to_dict(back_references: bool) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L29",
        "old_file": "superset/utils/feature_flag_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "superset/utils/feature_flag_manager.py",
        "new_code": "    def init_app(self, app: Flask) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L34",
        "old_file": "superset/utils/feature_flag_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/utils/feature_flag_manager.py",
        "new_code": "    def get_feature_flags(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L40",
        "old_file": "superset/utils/feature_flag_manager.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "superset/utils/feature_flag_manager.py",
        "new_code": "    def is_feature_enabled(self, feature: str) -> bool:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L138",
        "old_file": "superset/utils/screenshots.py",
        "old_line": "",
        "old_code": "",
        "new_line": 138,
        "new_file": "superset/utils/screenshots.py",
        "new_code": "    def destroy(driver: WebDriver, tries: int = 2) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L94",
        "old_file": "superset/utils/screenshots.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "superset/utils/screenshots.py",
        "new_code": "def get_url_path(view: str, **kwargs: Any) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L25",
        "old_file": "superset/utils/url_map_converters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "superset/utils/url_map_converters.py",
        "new_code": "    def __init__(self, url_map: Map, *items: List[str]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L33",
        "old_file": "superset/utils/url_map_converters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "superset/utils/url_map_converters.py",
        "new_code": "    def to_python(self, value: str) -> Any:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/b296a0f250979bf70e9cb2a2a2b48fd10038a363#diff-a9606131823dc535045d663fd5313801798fbb98L36",
        "old_file": "superset/utils/url_map_converters.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/utils/url_map_converters.py",
        "new_code": "    def to_url(self, value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L28",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def __init__(self, hass, name: str, supported_features: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L53",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L58",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L62",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def turn_on(self, speed: str=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L68",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L73",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L78",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def set_direction(self, direction: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L83",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def oscillate(self, oscillating: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/401309c3b2dbcb0d4423bc9a2b12aad1ba8e5b44#diff-d06b0a4473847b3da03e93a3b1d614ed06fd49e4L89",
        "old_file": "homeassistant/components/fan/demo.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/fan/demo.py",
        "new_code": "    def current_direction(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L52",
        "old_file": "superset/app.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "superset/app.py",
        "new_code": "def create_app() -> Flask:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L73",
        "old_file": "superset/app.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "superset/app.py",
        "new_code": "    def index(self) -> FlaskResponse:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L35",
        "old_file": "superset/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "superset/exceptions.py",
        "new_code": "    def exception(self) -> Optional[Exception]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L55",
        "old_file": "superset/extensions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "superset/extensions.py",
        "new_code": "    def init_app(self, app: Flask) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L60",
        "old_file": "superset/extensions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "superset/extensions.py",
        "new_code": "    def base_context(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L28",
        "old_file": "superset/forms.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/forms.py",
        "new_code": "    def _value(self) -> str:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L34",
        "old_file": "superset/forms.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "superset/forms.py",
        "new_code": "    def process_formdata(self, valuelist: List[str]) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L41",
        "old_file": "superset/forms.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "superset/forms.py",
        "new_code": "def filter_not_empty_values(values: Optional[List[Any]]) -> Optional[List[Any]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L269",
        "old_file": "superset/jinja_context.py",
        "old_line": 269,
        "old_code": "    def first_latest_partition(self, table_name: str) -> str:",
        "new_line": 269,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def first_latest_partition(self, table_name: str) -> Optional[str]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L280",
        "old_file": "superset/jinja_context.py",
        "old_line": 280,
        "old_code": "    def latest_partitions(self, table_name: str) -> List[str]:",
        "new_line": 281,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def latest_partitions(self, table_name: str) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L296",
        "old_file": "superset/jinja_context.py",
        "old_line": "",
        "old_code": "",
        "new_line": 296,
        "new_file": "superset/jinja_context.py",
        "new_code": "    def latest_sub_partition(self, table_name: str, **kwargs: Any) -> Any:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L163",
        "old_file": "superset/sql_parse.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "superset/sql_parse.py",
        "new_code": "    def _process_tokenlist(self, token_list: TokenList) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L36",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def incr(self, key: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L40",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def decr(self, key: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L44",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def timing(self, key: str, value: float) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L47",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def gauge(self, key: str) -> None:"
    },
    {
        "url": "https://github.com/apache/incubator-superset/commit/244677cf5e0ecb7c767455e96655af6c18cc58bc#diff-052692e3ec82058f92179f6e5159d4558afc7338L28",
        "old_file": "superset/stats_logger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "superset/stats_logger.py",
        "new_code": "    def __init__(self, prefix: str = \"superset\") -> None:"
    },
    {
        "url": "https://github.com/tensorflow/models/commit/23c87aaa5a1d930f4f9ca927c8c3577056c4f656#diff-0324146683e1ebe2ad9417c01e314834503c7185L80",
        "old_file": "official/modeling/optimization/lr_schedule.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "official/modeling/optimization/lr_schedule.py",
        "new_code": "  def get_config(self) -> Mapping[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/62c1b542edf2ff24baf1749c57293af94c8413e5#diff-bfa7d5e1704c6acca428c6120d309aaf53942f35L53",
        "old_file": "homeassistant/components/switch/tellstick.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/switch/tellstick.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/30bd92c851a7fe2891bf8e2fb4b37133e2e6d062#diff-bfa7d5e1704c6acca428c6120d309aaf53942f35L53",
        "old_file": "homeassistant/components/switch/tellstick.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/switch/tellstick.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L51",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L56",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L61",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L65",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L69",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def turn_on(self, speed: str=None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L73",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L78",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L83",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L32",
        "old_file": "homeassistant/components/light/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/light/isy994.py",
        "new_code": "    def __init__(self, node: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L37",
        "old_file": "homeassistant/components/light/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/components/light/isy994.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L42",
        "old_file": "homeassistant/components/light/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/light/isy994.py",
        "new_code": "    def brightness(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L46",
        "old_file": "homeassistant/components/light/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/light/isy994.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d687bc073e7e3b5b3f7f2460a2625f2b2c651d7b#diff-c55338507a56911cac908554a7a0e68e73cd3398L51",
        "old_file": "homeassistant/components/light/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/light/isy994.py",
        "new_code": "    def turn_on(self, brightness=None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/678f284015a2c52f96a7687979cfd9f785e4527a#diff-9a8e72d5d077b45215e958a2153545615e11d587L51",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": 51,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/678f284015a2c52f96a7687979cfd9f785e4527a#diff-9a8e72d5d077b45215e958a2153545615e11d587L65",
        "old_file": "homeassistant/components/fan/isy994.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/fan/isy994.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/678f284015a2c52f96a7687979cfd9f785e4527a#diff-9a8e72d5d077b45215e958a2153545615e11d587L32",
        "old_file": "homeassistant/components/light/isy994.py",
        "old_line": 32,
        "old_code": "    def __init__(self, node: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/light/isy994.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5801d78017c6ef4cce986bc046db4d7eb448449c#diff-f7c1ccbad074b9cc82ca695d4da85f65f2bcdae0L6",
        "old_file": "homeassistant/util/temperature.py",
        "old_line": "",
        "old_code": "",
        "new_line": 6,
        "new_file": "homeassistant/util/temperature.py",
        "new_code": "def fahrenheit_to_celsius(fahrenheit: float, interval: bool = False) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b674b1d16de47980391338f051dd37e3517f5b8#diff-aa57dc702b59bebd4a0c21281b6efdb816e9ee34L36",
        "old_file": "tests/components/fan/common.py",
        "old_line": 36,
        "old_code": "def toggle(hass, entity_id: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b674b1d16de47980391338f051dd37e3517f5b8#diff-aa57dc702b59bebd4a0c21281b6efdb816e9ee34L15",
        "old_file": "tests/components/fan/common.py",
        "old_line": 15,
        "old_code": "def turn_on(hass, entity_id: str = None, speed: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL15",
        "old_file": "tests/components/fan/common.py",
        "old_line": 15,
        "old_code": "def turn_on(hass, entity_id: str = None, speed: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL28",
        "old_file": "tests/components/fan/common.py",
        "old_line": 28,
        "old_code": "def turn_off(hass, entity_id: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL37",
        "old_file": "tests/components/fan/common.py",
        "old_line": 37,
        "old_code": "              should_oscillate: bool = True) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL50",
        "old_file": "tests/components/fan/common.py",
        "old_line": 50,
        "old_code": "def set_speed(hass, entity_id: str = None, speed: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL63",
        "old_file": "tests/components/fan/common.py",
        "old_line": 63,
        "old_code": "def set_direction(hass, entity_id: str = None, direction: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL17",
        "old_file": "tests/components/fan/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 17,
        "new_file": "tests/components/fan/common.py",
        "new_code": "def async_turn_on(hass, entity_id: str = None, speed: str = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1f290bad94d931796c74ab6dd859552a8e7ffb8e#diff-46f2646ee4a34c29a329901cb2f9cd87738ee36dL32",
        "old_file": "tests/components/fan/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "tests/components/fan/common.py",
        "new_code": "def async_turn_off(hass, entity_id: str = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/922f34f72df878021f8272acbdaa0a94cd11e5d5#diff-9659822f2b523351f2babfae1d50dbb73abe71a4L30",
        "old_file": "homeassistant/helpers/entity_values.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/helpers/entity_values.py",
        "new_code": "    def get(self, entity_id: str) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b8629a5f416e6f04bd246f71f13250a75451033#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L25",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def _entity_func(self) -> Callable[[str, str], bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b8629a5f416e6f04bd246f71f13250a75451033#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L29",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def check_entity(self, entity_id: str, key: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b8629a5f416e6f04bd246f71f13250a75451033#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L42",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def __init__(self, policy: PolicyType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b8629a5f416e6f04bd246f71f13250a75451033#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L50",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def __eq__(self, other: Any) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3a8303137a6151c74fc6f8236f7f7f3f9766b2f2#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L25",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def _entity_func(self) -> Callable[[str, str], bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3a8303137a6151c74fc6f8236f7f7f3f9766b2f2#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L29",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def check_entity(self, entity_id: str, key: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3a8303137a6151c74fc6f8236f7f7f3f9766b2f2#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L42",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def __init__(self, policy: PolicyType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3a8303137a6151c74fc6f8236f7f7f3f9766b2f2#diff-ed6fd081bb714152ccb2018c9e4c11514123dfe8L50",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def __eq__(self, other: Any) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6a80ffa8ccfd6a3de9388f5637d51636e8f18d57#diff-e0add020f037b2892a7638c4271e2e636f8a1ac0L83",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    def cloud_user(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbdf5558e64fa3b29b40db550eee15db812bd7b7#diff-36a53e69e58e50839e58bca4e0eee046097d2860L83",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": 83,
        "old_code": "    def cloud_user(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/707d32495bad25ad345fc21798d5de970d4cf968#diff-e0add020f037b2892a7638c4271e2e636f8a1ac0L83",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    def cloud_user(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/68d1a5322a4adfb1ff5e7eb71485a5e7627519bb#diff-36a53e69e58e50839e58bca4e0eee046097d2860L83",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": 83,
        "old_code": "    def cloud_user(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ecba87179f1248c6669874ffad8b6744010646cf#diff-e51af38d09997514273a0159a2b0aa29ab150490L8",
        "old_file": "homeassistant/components/heos/config_flow.py",
        "old_line": 8,
        "old_code": "def format_title(host: str) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/heos/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL48",
        "old_file": "homeassistant/components/deconz/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/deconz/scene.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL46",
        "old_file": "homeassistant/components/ecoal_boiler/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/ecoal_boiler/switch.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL66",
        "old_file": "homeassistant/components/ecoal_boiler/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/ecoal_boiler/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL70",
        "old_file": "homeassistant/components/ecoal_boiler/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/ecoal_boiler/switch.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL75",
        "old_file": "homeassistant/components/ecoal_boiler/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/ecoal_boiler/switch.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL36",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": "    def scan_devices(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL46",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": "    def get_device_name(self, device: str) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL51",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": "    def get_extra_attributes(self, device: str) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2c07bfb9e0ac03fdf74b83152f4511ed7f7104b0#diff-7b62a8f68e0fa3bab2545a250de20c37053ef90bL40",
        "old_file": "homeassistant/components/n26/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/n26/switch.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b0ee473b6ec7d7f636e814a6c0c661537317748#diff-b9cc8ded7a9441b8388c959665c7d22a02d3e1bfL33",
        "old_file": "homeassistant/auth/permissions/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/auth/permissions/__init__.py",
        "new_code": "    def access_all_entities(self, key: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b0ee473b6ec7d7f636e814a6c0c661537317748#diff-b9cc8ded7a9441b8388c959665c7d22a02d3e1bfL102",
        "old_file": "homeassistant/auth/permissions/util.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/auth/permissions/util.py",
        "new_code": "def test_all(policy: CategoryType, key: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b0ee473b6ec7d7f636e814a6c0c661537317748#diff-b9cc8ded7a9441b8388c959665c7d22a02d3e1bfL32",
        "old_file": "homeassistant/auth/permissions/util.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/auth/permissions/util.py",
        "new_code": "        def apply_policy_deny_all(entity_id: str, key: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7d83c683d30b2336f85636c21af60ec8e95d77c#diff-f4446758d6b5987f156dd3d1c2a5404aa256c9dbL18",
        "old_file": "tests/components/switcher_kis/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "tests/components/switcher_kis/test_init.py",
        "new_code": "        mock_failed_bridge: Generator[None, Any, None]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bf91a8c1b3db6dc982bbaddf09d05a048e87d13b#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L87",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def has_emeter(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bf91a8c1b3db6dc982bbaddf09d05a048e87d13b#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L91",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bf91a8c1b3db6dc982bbaddf09d05a048e87d13b#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L95",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def turn_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bf91a8c1b3db6dc982bbaddf09d05a048e87d13b#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L100",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bf91a8c1b3db6dc982bbaddf09d05a048e87d13b#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L105",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def state_information(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b4374c8c4c36007c33ff46de5aafd3b11707110a#diff-20d58c595da6df4ccd2670f2b4623a2c5993b807L47",
        "old_file": "homeassistant/components/mobile_app/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/mobile_app/entity.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fe2e5089abe726fd5fc37975e983b3448058b68f#diff-20d58c595da6df4ccd2670f2b4623a2c5993b807L47",
        "old_file": "homeassistant/components/mobile_app/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/mobile_app/entity.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2858f56d4d1c593654626f26ebcdefc3c18c0c32#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L87",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def has_emeter(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2858f56d4d1c593654626f26ebcdefc3c18c0c32#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L91",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2858f56d4d1c593654626f26ebcdefc3c18c0c32#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L95",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def turn_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2858f56d4d1c593654626f26ebcdefc3c18c0c32#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L100",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2858f56d4d1c593654626f26ebcdefc3c18c0c32#diff-ab86d5f7e40977a52c320941fba5f29c4a0379f4L105",
        "old_file": "tests/components/tplink/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "tests/components/tplink/test_init.py",
        "new_code": "    def state_information(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3c487928d49b4852ceccc341102383a57a285eca#diff-9faf5095380a14aa76d8d2d67ba2e69a9b6b49e6L60",
        "old_file": "homeassistant/components/device_tracker/config_entry.py",
        "old_line": 60,
        "old_code": "    def location_name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/device_tracker/config_entry.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3c487928d49b4852ceccc341102383a57a285eca#diff-9faf5095380a14aa76d8d2d67ba2e69a9b6b49e6L65",
        "old_file": "homeassistant/components/device_tracker/config_entry.py",
        "old_line": 65,
        "old_code": "    def latitude(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/device_tracker/config_entry.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3c487928d49b4852ceccc341102383a57a285eca#diff-9faf5095380a14aa76d8d2d67ba2e69a9b6b49e6L70",
        "old_file": "homeassistant/components/device_tracker/config_entry.py",
        "old_line": 70,
        "old_code": "    def longitude(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/device_tracker/config_entry.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3c487928d49b4852ceccc341102383a57a285eca#diff-9faf5095380a14aa76d8d2d67ba2e69a9b6b49e6L81",
        "old_file": "homeassistant/components/device_tracker/config_entry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/device_tracker/config_entry.py",
        "new_code": "    def location_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3c487928d49b4852ceccc341102383a57a285eca#diff-9faf5095380a14aa76d8d2d67ba2e69a9b6b49e6L86",
        "old_file": "homeassistant/components/device_tracker/config_entry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/device_tracker/config_entry.py",
        "new_code": "    def latitude(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3c487928d49b4852ceccc341102383a57a285eca#diff-9faf5095380a14aa76d8d2d67ba2e69a9b6b49e6L91",
        "old_file": "homeassistant/components/device_tracker/config_entry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/device_tracker/config_entry.py",
        "new_code": "    def longitude(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/84cf76ba3688760fc311733a3f179865f1317c67#diff-a6a7a47a339648a090c9d26f050c9a4385c0f077L57",
        "old_file": "homeassistant/components/touchline/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/touchline/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/84cf76ba3688760fc311733a3f179865f1317c67#diff-a6a7a47a339648a090c9d26f050c9a4385c0f077L65",
        "old_file": "homeassistant/components/touchline/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/touchline/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bae7a45a509fe198af9b7c600a7dbe46488ab4c#diff-a8baf7182a0f0fbca4f09bcb7ad65e780423d914L82",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    def current_cover_tilt_position(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da05dfe70859f5bf7c6aa6c820bc6a37dc14ca7c#diff-7753b0ae92d5070378dc7a0b2a0c6d2e4ee924b4L37",
        "old_file": "homeassistant/util/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/util/__init__.py",
        "new_code": "def sanitize_filename(filename: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da05dfe70859f5bf7c6aa6c820bc6a37dc14ca7c#diff-7753b0ae92d5070378dc7a0b2a0c6d2e4ee924b4L42",
        "old_file": "homeassistant/util/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/util/__init__.py",
        "new_code": "def sanitize_path(path: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da05dfe70859f5bf7c6aa6c820bc6a37dc14ca7c#diff-7753b0ae92d5070378dc7a0b2a0c6d2e4ee924b4L47",
        "old_file": "homeassistant/util/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/util/__init__.py",
        "new_code": "def slugify(text: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da05dfe70859f5bf7c6aa6c820bc6a37dc14ca7c#diff-7753b0ae92d5070378dc7a0b2a0c6d2e4ee924b4L52",
        "old_file": "homeassistant/util/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/util/__init__.py",
        "new_code": "def repr_helper(inp: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL24",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def set_loop() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def validate_python() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def ensure_config_path(config_dir: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL107",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/__main__.py",
        "new_code": "async def ensure_config_file(hass: \"core.HomeAssistant\", config_dir: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def get_arguments() -> argparse.Namespace:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL193",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def daemonize() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL218",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 218,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def check_pid(pid_file: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL241",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 241,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def write_pid(pid_file: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL252",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 252,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def closefds_osx(min_fd: int, max_fd: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL270",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 270,
        "new_file": "homeassistant/__main__.py",
        "new_code": "def cmdline() -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL316",
        "old_file": "homeassistant/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 316,
        "new_file": "homeassistant/__main__.py",
        "new_code": "        def open_browser(_: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL34",
        "old_file": "homeassistant/auth/auth_store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/auth/auth_store.py",
        "new_code": "    def __init__(self, hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL45",
        "old_file": "homeassistant/auth/auth_store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/auth/auth_store.py",
        "new_code": "    async def async_get_groups(self) -> List[models.Group]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/auth/auth_store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/auth/auth_store.py",
        "new_code": "    async def async_get_group(self, group_id: str) -> Optional[models.Group]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/auth/auth_store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/auth/auth_store.py",
        "new_code": "    async def async_get_users(self) -> List[models.User]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/auth/auth_store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/auth/auth_store.py",
        "new_code": "    async def async_get_user(self, user_id: str) -> Optional[models.User]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, config: Dict[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL45",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    def id(self) -> str:  # pylint: disable=invalid-name"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    def type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    def input_schema(self) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL76",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    async def async_setup_user(self, user_id: str, setup_data: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    async def async_depose_user(self, user_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL84",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    async def async_is_user_setup(self, user_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL88",
        "old_file": "homeassistant/auth/mfa_modules/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/auth/mfa_modules/__init__.py",
        "new_code": "    async def async_validate(self, user_id: str, user_input: Dict[str, Any]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL34",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, config: Dict[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL40",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    def input_schema(self) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL45",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    def setup_schema(self) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL49",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    async def async_setup_flow(self, user_id: str) -> SetupFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    async def async_setup_user(self, user_id: str, setup_data: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    async def async_depose_user(self, user_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL79",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    async def async_is_user_setup(self, user_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/auth/mfa_modules/insecure_example.py",
        "new_code": "    async def async_validate(self, user_id: str, user_input: Dict[str, Any]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL48",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "def _generate_secret() -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "def _generate_random() -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "def _generate_otp(secret: str, count: int) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "def _verify_otp(secret: str, otp: str, count: int) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, config: Dict[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL108",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    def input_schema(self) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL112",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def _async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL128",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 128,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def _async_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL149",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    def aync_get_available_notify_services(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL162",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 162,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_setup_flow(self, user_id: str) -> SetupFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL171",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 171,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_setup_user(self, user_id: str, setup_data: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL184",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 184,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_depose_user(self, user_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL193",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_is_user_setup(self, user_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL201",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 201,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_validate(self, user_id: str, user_input: Dict[str, Any]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL219",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 219,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_initialize_login_mfa_step(self, user_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL243",
        "old_file": "homeassistant/auth/mfa_modules/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "homeassistant/auth/mfa_modules/notify.py",
        "new_code": "    async def async_notify_user(self, user_id: str, code: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/auth/models.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/auth/models.py",
        "new_code": "    def permissions(self) -> perm_mdl.AbstractPermissions:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL73",
        "old_file": "homeassistant/auth/models.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/auth/models.py",
        "new_code": "    def is_admin(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/auth/models.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/auth/models.py",
        "new_code": "    def invalidate_permission_cache(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL184",
        "old_file": "homeassistant/auth/providers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 184,
        "new_file": "homeassistant/auth/providers/__init__.py",
        "new_code": "    def __init__(self, auth_provider: AuthProvider) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/auth/providers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/auth/providers/__init__.py",
        "new_code": "    def id(self) -> Optional[str]:  # pylint: disable=invalid-name"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL59",
        "old_file": "homeassistant/auth/providers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/auth/providers/__init__.py",
        "new_code": "    def type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/auth/providers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/auth/providers/__init__.py",
        "new_code": "    def support_mfa(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL73",
        "old_file": "homeassistant/auth/providers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/auth/providers/__init__.py",
        "new_code": "    async def async_credentials(self) -> List[Credentials]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL87",
        "old_file": "homeassistant/auth/providers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/auth/providers/__init__.py",
        "new_code": "    def async_create_credentials(self, data: Dict[str, str]) -> Credentials:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL49",
        "old_file": "homeassistant/auth/providers/command_line.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/auth/providers/command_line.py",
        "new_code": "    def __init__(self, *args: Any, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL58",
        "old_file": "homeassistant/auth/providers/command_line.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/auth/providers/command_line.py",
        "new_code": "    async def async_login_flow(self, context: Optional[dict]) -> LoginFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/auth/providers/command_line.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/auth/providers/command_line.py",
        "new_code": "    async def async_validate_login(self, username: str, password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL25",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "def _disallow_id(conf: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def __init__(self, hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL63",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def normalize_username(self, username: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    async def async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL115",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def users(self) -> List[Dict[str, str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL119",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def validate_login(self, username: str, password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL145",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def hash_password(self, password: str, for_storage: bool = False) -> bytes:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL153",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 153,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def add_auth(self, username: str, password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL170",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def async_remove_auth(self, username: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL185",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 185,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    def change_password(self, username: str, new_password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL199",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    async def async_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL216",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 216,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    async def async_initialize(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL226",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 226,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    async def async_login_flow(self, context: Optional[Dict]) -> LoginFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL230",
        "old_file": "homeassistant/auth/providers/homeassistant.py",
        "old_line": "",
        "old_code": "",
        "new_line": 230,
        "new_file": "homeassistant/auth/providers/homeassistant.py",
        "new_code": "    async def async_validate_login(self, username: str, password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL37",
        "old_file": "homeassistant/auth/providers/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/auth/providers/insecure_example.py",
        "new_code": "    async def async_login_flow(self, context: Optional[Dict]) -> LoginFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/auth/providers/insecure_example.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/auth/providers/insecure_example.py",
        "new_code": "    def async_validate_login(self, username: str, password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL33",
        "old_file": "homeassistant/auth/providers/legacy_api_password.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/auth/providers/legacy_api_password.py",
        "new_code": "async def async_validate_password(hass: HomeAssistant, password: str) -> Optional[User]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/auth/providers/legacy_api_password.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/auth/providers/legacy_api_password.py",
        "new_code": "    def api_password(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/auth/providers/legacy_api_password.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/auth/providers/legacy_api_password.py",
        "new_code": "    async def async_login_flow(self, context: Optional[Dict]) -> LoginFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/auth/providers/legacy_api_password.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/auth/providers/legacy_api_password.py",
        "new_code": "    def async_validate_login(self, password: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/auth/providers/trusted_networks.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/auth/providers/trusted_networks.py",
        "new_code": "    def trusted_networks(self) -> List[IPNetwork]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL71",
        "old_file": "homeassistant/auth/providers/trusted_networks.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/auth/providers/trusted_networks.py",
        "new_code": "    def trusted_users(self) -> Dict[IPNetwork, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL76",
        "old_file": "homeassistant/auth/providers/trusted_networks.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/auth/providers/trusted_networks.py",
        "new_code": "    def support_mfa(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/auth/providers/trusted_networks.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/auth/providers/trusted_networks.py",
        "new_code": "    async def async_login_flow(self, context: Optional[Dict]) -> LoginFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL6",
        "old_file": "homeassistant/auth/util.py",
        "old_line": "",
        "old_code": "",
        "new_line": 6,
        "new_file": "homeassistant/auth/util.py",
        "new_code": "def generate_secret(entropy: int = 32) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL72",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "    async def add_url(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "    async def remove_url(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL82",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "    async def enable_url(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "    async def disable_url(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "    async def refresh(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL198",
        "old_file": "homeassistant/components/alexa/entities.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/components/alexa/entities.py",
        "new_code": "def async_get_entities(hass, config) -> List[AlexaEntity]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL182",
        "old_file": "homeassistant/components/amcrest/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 182,
        "new_file": "homeassistant/components/amcrest/camera.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/components/apple_tv/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/apple_tv/__init__.py",
        "new_code": "def ensure_list(value: Union[T, Sequence[T]]) -> Sequence[T]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/components/aprs/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/aprs/device_tracker.py",
        "new_code": "def make_filter(callsigns: list) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/aprs/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/aprs/device_tracker.py",
        "new_code": "def gps_accuracy(gps, posambiguity: int) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL144",
        "old_file": "homeassistant/components/august/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/august/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/august/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/august/camera.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/components/august/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/august/lock.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL188",
        "old_file": "homeassistant/components/auth/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 188,
        "new_file": "homeassistant/components/auth/__init__.py",
        "new_code": "def create_auth_code(hass, client_id: str, user: User) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL229",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    def hidden(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL234",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL238",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL275",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 275,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    async def async_turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL279",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 279,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL26",
        "old_file": "homeassistant/components/axis/axis_base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/axis/axis_base.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/components/axis/axis_base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/axis/axis_base.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL113",
        "old_file": "homeassistant/components/bh1750/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/bh1750/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "homeassistant/components/bh1750/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/components/bh1750/sensor.py",
        "new_code": "    def state(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL123",
        "old_file": "homeassistant/components/bh1750/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "homeassistant/components/bh1750/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL128",
        "old_file": "homeassistant/components/bh1750/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 128,
        "new_file": "homeassistant/components/bh1750/sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/components/blinkt/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/blinkt/light.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/components/bmw_connected_drive/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/bmw_connected_drive/__init__.py",
        "new_code": "    def _update_all(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/components/bmw_connected_drive/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/bmw_connected_drive/binary_sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL31",
        "old_file": "homeassistant/components/bmw_connected_drive/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/bmw_connected_drive/device_tracker.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL79",
        "old_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL92",
        "old_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL121",
        "old_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL131",
        "old_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/bmw_connected_drive/sensor.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL93",
        "old_file": "homeassistant/components/buienradar/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/buienradar/camera.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL97",
        "old_file": "homeassistant/components/buienradar/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/buienradar/camera.py",
        "new_code": "    def __needs_refresh(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL103",
        "old_file": "homeassistant/components/buienradar/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/buienradar/camera.py",
        "new_code": "    async def __retrieve_radar_image(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL134",
        "old_file": "homeassistant/components/buienradar/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 134,
        "new_file": "homeassistant/components/buienradar/camera.py",
        "new_code": "    async def async_camera_image(self) -> Optional[bytes]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL111",
        "old_file": "homeassistant/components/cast/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "homeassistant/components/cast/media_player.py",
        "new_code": "    def is_audio_group(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL116",
        "old_file": "homeassistant/components/cast/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/cast/media_player.py",
        "new_code": "    def is_information_complete(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL133",
        "old_file": "homeassistant/components/cast/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/cast/media_player.py",
        "new_code": "    def host_port(self) -> Tuple[str, int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL122",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL174",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL179",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def precision(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL186",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 186,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL259",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 259,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL264",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 264,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def current_humidity(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL269",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 269,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_humidity(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL274",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 274,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL282",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 282,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL290",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 290,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL298",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 298,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL303",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 303,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL308",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 308,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature_step(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL313",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 313,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL321",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 321,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL329",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 329,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL337",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 337,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL345",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 345,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def is_aux_heat(self) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL353",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 353,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def fan_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL361",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 361,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def fan_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL369",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 369,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def swing_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL377",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 377,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def swing_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL384",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 384,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL388",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 388,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL394",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 394,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_humidity(self, humidity: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL398",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 398,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_humidity(self, humidity: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL402",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 402,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL406",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 406,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL410",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 410,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL414",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 414,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL418",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 418,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL422",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 422,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL426",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 426,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL430",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 430,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL434",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 434,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def turn_aux_heat_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL438",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 438,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_aux_heat_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL442",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 442,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def turn_aux_heat_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL446",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 446,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_aux_heat_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL450",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 450,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL464",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 464,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL476",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 476,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL481",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 481,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL488",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 488,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL495",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 495,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def min_humidity(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL500",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 500,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def max_humidity(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL113",
        "old_file": "homeassistant/components/cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/cloud/__init__.py",
        "new_code": "def async_is_logged_in(hass) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/components/cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/cloud/__init__.py",
        "new_code": "def async_active_subscription(hass) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL126",
        "old_file": "homeassistant/components/cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 126,
        "new_file": "homeassistant/components/cloud/__init__.py",
        "new_code": "async def async_create_cloudhook(hass, webhook_id: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL136",
        "old_file": "homeassistant/components/cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/cloud/__init__.py",
        "new_code": "async def async_delete_cloudhook(hass, webhook_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL146",
        "old_file": "homeassistant/components/cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 146,
        "new_file": "homeassistant/components/cloud/__init__.py",
        "new_code": "def async_remote_ui_url(hass) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL219",
        "old_file": "homeassistant/components/cloud/alexa_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 219,
        "new_file": "homeassistant/components/cloud/alexa_config.py",
        "new_code": "    async def _sync_helper(self, to_update, to_remove) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL31",
        "old_file": "homeassistant/components/cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/cloud/binary_sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/components/cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/cloud/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL41",
        "old_file": "homeassistant/components/cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/cloud/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/cloud/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/cloud/binary_sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/cloud/binary_sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": "    def base_path(self) -> Path:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": "    def prefs(self) -> CloudPreferences:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": "    def loop(self) -> asyncio.BaseEventLoop:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": "    def websession(self) -> aiohttp.ClientSession:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL220",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    def cloud_user(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL225",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 225,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    def _has_local_trusted_network(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL241",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 241,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    def _has_local_trusted_proxies(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL7",
        "old_file": "homeassistant/components/cloud/utils.py",
        "old_line": "",
        "old_code": "",
        "new_line": 7,
        "new_file": "homeassistant/components/cloud/utils.py",
        "new_code": "def aiohttp_serialize_response(response: web.Response) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL31",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def __init__(self, hass, name, ccb: ComfoConnectBridge) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL101",
        "old_file": "homeassistant/components/comfoconnect/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/comfoconnect/sensor.py",
        "new_code": "    def __init__(self, hass, name, ccb: ComfoConnectBridge, sensor_type) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL285",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 285,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def toggle(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL369",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 369,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def toggle_tilt(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL133",
        "old_file": "homeassistant/components/daikin/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/daikin/__init__.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL27",
        "old_file": "homeassistant/components/deconz/deconz_device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "homeassistant/components/deconz/deconz_device.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL54",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def bridgeid(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL59",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def master(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL64",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def allow_clip_sensor(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def allow_deconz_groups(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL249",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 249,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL116",
        "old_file": "homeassistant/components/demo/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/demo/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL121",
        "old_file": "homeassistant/components/demo/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/demo/geo_location.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL131",
        "old_file": "homeassistant/components/demo/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/demo/geo_location.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL136",
        "old_file": "homeassistant/components/demo/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/demo/geo_location.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL141",
        "old_file": "homeassistant/components/demo/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "homeassistant/components/demo/geo_location.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL102",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def brightness(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL107",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def hs_color(self) -> tuple:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL112",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def color_temp(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL117",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def white_value(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL122",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def effect_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL127",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def effect(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL132",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL137",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 137,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL141",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL164",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 164,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/components/dlink/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/dlink/switch.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL436",
        "old_file": "homeassistant/components/dlna_dmr/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 436,
        "new_file": "homeassistant/components/dlna_dmr/media_player.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL443",
        "old_file": "homeassistant/components/dlna_dmr/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 443,
        "new_file": "homeassistant/components/dlna_dmr/media_player.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL216",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 216,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL228",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL245",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 245,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL252",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 252,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def oscillate(self, oscillating: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL296",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 296,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_night_mode(self, night_mode: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL311",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 311,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_auto_mode(self, auto_mode: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL322",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 322,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL343",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 343,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL348",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 348,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL409",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 409,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_dyson_speed(self, speed: str = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL444",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 444,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_angle(self, angle_low: int, angle_high: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL454",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 454,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_flow_direction_front(self, flow_direction_front: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL467",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 467,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def set_timer(self, timer) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL564",
        "old_file": "homeassistant/components/dyson/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 564,
        "new_file": "homeassistant/components/dyson/fan.py",
        "new_code": "    def dyson_speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/dyson/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/dyson/vacuum.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL129",
        "old_file": "homeassistant/components/dyson/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/dyson/vacuum.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/components/dyson/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/dyson/vacuum.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL336",
        "old_file": "homeassistant/components/ecobee/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 336,
        "new_file": "homeassistant/components/ecobee/climate.py",
        "new_code": "    def current_humidity(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL77",
        "old_file": "homeassistant/components/ecovacs/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/ecovacs/__init__.py",
        "new_code": "    def stop(event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/ecovacs/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/ecovacs/vacuum.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/ecovacs/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/ecovacs/vacuum.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL104",
        "old_file": "homeassistant/components/edp_redy/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/edp_redy/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL271",
        "old_file": "homeassistant/components/elkm1/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 271,
        "new_file": "homeassistant/components/elkm1/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL126",
        "old_file": "homeassistant/components/elkm1/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 126,
        "new_file": "homeassistant/components/elkm1/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, hass_config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "homeassistant/components/elkm1/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/elkm1/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL25",
        "old_file": "homeassistant/components/elkm1/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/components/elkm1/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/elv/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/elv/switch.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "def due_in_minutes(timestamp: datetime) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL144",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL148",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    def get_stop_info(self, stop_id: str) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL167",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 167,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL172",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL177",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 177,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL184",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 184,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL189",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL92",
        "old_file": "homeassistant/components/eq3btsmart/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/eq3btsmart/climate.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": "    async def on_stop(event: Event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL103",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": "    def async_on_state(state: EntityState) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL108",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": "    def async_on_service_call(service: HomeassistantServiceCall) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL31",
        "old_file": "homeassistant/components/esphome/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/esphome/binary_sensor.py",
        "new_code": "    def _static_info(self) -> BinarySensorInfo:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL35",
        "old_file": "homeassistant/components/esphome/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/esphome/binary_sensor.py",
        "new_code": "    def _state(self) -> Optional[BinarySensorState]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/components/esphome/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/esphome/binary_sensor.py",
        "new_code": "    def is_on(self) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/components/esphome/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/esphome/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/components/esphome/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/esphome/binary_sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def _static_info(self) -> ClimateInfo:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def _state(self) -> Optional[ClimateState]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def precision(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL84",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL89",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL102",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature_step(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL108",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL113",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL130",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def hvac_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL145",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL150",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL155",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL159",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 159,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL172",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL37",
        "old_file": "homeassistant/components/everlights/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/components/everlights/light.py",
        "new_code": "def color_rgb_to_int(red: int, green: int, blue: int) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/components/everlights/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/everlights/light.py",
        "new_code": "def color_int_to_rgb(value: int) -> Tuple[int, int, int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL88",
        "old_file": "homeassistant/components/everlights/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/everlights/light.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL93",
        "old_file": "homeassistant/components/everlights/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/everlights/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "def _local_dt_to_utc(dt_naive: datetime) -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL73",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "def _utc_to_local_dt(dt_aware: datetime) -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "def _handle_exception(err) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL122",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "def setup(hass: HomeAssistantType, hass_config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "    def __init__(self, hass, params) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL153",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 153,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "    def init_client(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL26",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "def setup_platform(hass, hass_config, add_entities, discovery_info=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "    def __init__(self, evo_broker, evo_device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "    def current_operation(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "    def operation_list(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL72",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "    def current_temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL76",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "    def set_operation_mode(self, operation_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL77",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "def is_on(hass, entity_id: str = None) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL127",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def set_direction(self, direction: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL152",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 152,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL166",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def oscillate(self, oscillating: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL188",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 188,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL193",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def current_direction(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL198",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL213",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 213,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL430",
        "old_file": "homeassistant/components/fibaro/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 430,
        "new_file": "homeassistant/components/fibaro/__init__.py",
        "new_code": "    def hidden(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL457",
        "old_file": "homeassistant/components/fibaro/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 457,
        "new_file": "homeassistant/components/fibaro/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL462",
        "old_file": "homeassistant/components/fibaro/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 462,
        "new_file": "homeassistant/components/fibaro/__init__.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL291",
        "old_file": "homeassistant/components/fibaro/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 291,
        "new_file": "homeassistant/components/fibaro/climate.py",
        "new_code": "    def set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL163",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def __init__(self, client: FinTsClient, account, name: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL172",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL179",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL193",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def state(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL198",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL203",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 203,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL211",
        "old_file": "homeassistant/components/fints/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 211,
        "new_file": "homeassistant/components/fints/sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/fleetgo/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/fleetgo/device_tracker.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL154",
        "old_file": "homeassistant/components/flexit/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 154,
        "new_file": "homeassistant/components/flexit/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL223",
        "old_file": "homeassistant/components/flux_led/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 223,
        "new_file": "homeassistant/components/flux_led/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/fortios/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/fortios/device_tracker.py",
        "new_code": "    def __init__(self, fgt) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL394",
        "old_file": "homeassistant/components/frontend/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 394,
        "new_file": "homeassistant/components/frontend/__init__.py",
        "new_code": "    def canonical(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL403",
        "old_file": "homeassistant/components/frontend/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 403,
        "new_file": "homeassistant/components/frontend/__init__.py",
        "new_code": "    def url_for(self, **kwargs: str) -> URL:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL423",
        "old_file": "homeassistant/components/frontend/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 423,
        "new_file": "homeassistant/components/frontend/__init__.py",
        "new_code": "    def add_prefix(self, prefix: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL433",
        "old_file": "homeassistant/components/frontend/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 433,
        "new_file": "homeassistant/components/frontend/__init__.py",
        "new_code": "    def freeze(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL437",
        "old_file": "homeassistant/components/frontend/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 437,
        "new_file": "homeassistant/components/frontend/__init__.py",
        "new_code": "    def raw_match(self, path: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL476",
        "old_file": "homeassistant/components/frontend/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 476,
        "new_file": "homeassistant/components/frontend/__init__.py",
        "new_code": "    def __len__(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/components/geniushub/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/geniushub/binary_sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    async def async_added_to_hass(self) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL79",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL100",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL110",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL115",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL125",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL130",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL135",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL144",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL150",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL154",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 154,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL101",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL89",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL177",
        "old_file": "homeassistant/components/geo_json_events/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 177,
        "new_file": "homeassistant/components/geo_json_events/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL182",
        "old_file": "homeassistant/components/geo_json_events/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 182,
        "new_file": "homeassistant/components/geo_json_events/geo_location.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL187",
        "old_file": "homeassistant/components/geo_json_events/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 187,
        "new_file": "homeassistant/components/geo_json_events/geo_location.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL192",
        "old_file": "homeassistant/components/geo_json_events/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "homeassistant/components/geo_json_events/geo_location.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL197",
        "old_file": "homeassistant/components/geo_json_events/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 197,
        "new_file": "homeassistant/components/geo_json_events/geo_location.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/geo_location/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/geo_location/__init__.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/components/geo_location/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/geo_location/__init__.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/components/geo_location/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/geo_location/__init__.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL71",
        "old_file": "homeassistant/components/geo_location/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/geo_location/__init__.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/geofency/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/geofency/__init__.py",
        "new_code": "def _address(value: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def should_expose(self, state) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def is_supported(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL110",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def might_2fa(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL241",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 241,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "def async_get_entities(hass, config) -> List[GoogleEntity]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL47",
        "old_file": "homeassistant/components/google_assistant/http.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/google_assistant/http.py",
        "new_code": "    def should_expose(self, state) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/components/google_assistant/http.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/google_assistant/http.py",
        "new_code": "    async def post(self, request: Request) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/components/google_maps/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/google_maps/device_tracker.py",
        "new_code": "    def __init__(self, hass, config: ConfigType, see) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/components/gpslogger/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/gpslogger/__init__.py",
        "new_code": "def _id(value: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL251",
        "old_file": "homeassistant/components/harmony/remote.py",
        "old_line": "",
        "old_code": "",
        "new_line": 251,
        "new_file": "homeassistant/components/harmony/remote.py",
        "new_code": "    def new_activity(self, activity_info: tuple) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "homeassistant/components/hassio/ingress.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/hassio/ingress.py",
        "new_code": "    def _create_url(self, token: str, path: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL358",
        "old_file": "homeassistant/components/hdmi_cec/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 358,
        "new_file": "homeassistant/components/hdmi_cec/__init__.py",
        "new_code": "    def __init__(self, device, logical) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/hdmi_cec/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/hdmi_cec/media_player.py",
        "new_code": "    def __init__(self, device, logical) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL151",
        "old_file": "homeassistant/components/hdmi_cec/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/hdmi_cec/media_player.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL28",
        "old_file": "homeassistant/components/hdmi_cec/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/hdmi_cec/switch.py",
        "new_code": "    def __init__(self, device, logical) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL33",
        "old_file": "homeassistant/components/hdmi_cec/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/hdmi_cec/switch.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "homeassistant/components/hdmi_cec/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/hdmi_cec/switch.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL52",
        "old_file": "homeassistant/components/hdmi_cec/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/hdmi_cec/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/components/hdmi_cec/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/hdmi_cec/switch.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL13",
        "old_file": "homeassistant/components/heos/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "homeassistant/components/heos/config_flow.py",
        "new_code": "def format_title(host: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL258",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 258,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL263",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 263,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def device_info(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL274",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 274,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL285",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 285,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def is_volume_muted(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL290",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 290,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_album_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL295",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 295,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_artist(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL300",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 300,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_content_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL305",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 305,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_content_type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL334",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 334,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_image_remotely_accessible(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL339",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 339,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_image_url(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL346",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 346,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def media_title(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL356",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 356,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL361",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 361,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def shuffle(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL366",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 366,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL371",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 371,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def source_list(self) -> Sequence[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL376",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 376,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL381",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 381,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL386",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 386,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL391",
        "old_file": "homeassistant/components/heos/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 391,
        "new_file": "homeassistant/components/heos/media_player.py",
        "new_code": "    def volume_level(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL102",
        "old_file": "homeassistant/components/hive/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/hive/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL168",
        "old_file": "homeassistant/components/hive/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/hive/climate.py",
        "new_code": "    def set_preset_mode(self, preset_mode) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL98",
        "old_file": "homeassistant/components/hive/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/hive/light.py",
        "new_code": "    def hs_color(self) -> tuple:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/components/homeassistant/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/homeassistant/__init__.py",
        "new_code": "async def async_setup(hass: ha.HomeAssistant, config: dict) -> Awaitable[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL147",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 147,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL151",
        "old_file": "homeassistant/components/homematic/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/homematic/climate.py",
        "new_code": "    def set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL224",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 224,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL21",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "def configured_haps(hass: HomeAssistant) -> Set[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL25",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def __init__(self, home: AsyncHome, device, post: Optional[str] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def icon(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL71",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, config_entry: ConfigEntry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL195",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 195,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL200",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 200,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL209",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 209,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL214",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 214,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL223",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 223,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL232",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 232,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL237",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 237,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def current_humidity(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL242",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL247",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 247,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL252",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 252,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL259",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 259,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL264",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 264,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL273",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL280",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 280,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL287",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 287,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL292",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 292,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL297",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 297,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def is_aux_heat(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL302",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 302,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def fan_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL307",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 307,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def fan_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL311",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 311,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def _set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL352",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 352,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL356",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 356,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL360",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def _turn_away_mode_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL390",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 390,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def _turn_away_mode_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL400",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 400,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL407",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 407,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def turn_aux_heat_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL411",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 411,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def turn_aux_heat_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL418",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 418,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def _retry(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL447",
        "old_file": "homeassistant/components/honeywell/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 447,
        "new_file": "homeassistant/components/honeywell/climate.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL158",
        "old_file": "homeassistant/components/http/ban.py",
        "old_line": "",
        "old_code": "",
        "new_line": 158,
        "new_file": "homeassistant/components/http/ban.py",
        "new_code": "    def __init__(self, ip_ban: str, banned_at: datetime = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/components/htu21d/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/htu21d/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL91",
        "old_file": "homeassistant/components/htu21d/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/htu21d/sensor.py",
        "new_code": "    def state(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL96",
        "old_file": "homeassistant/components/htu21d/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/htu21d/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def __attrs_post_init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def subscribe(self, path: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def unsubscribe(self, path: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL99",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def _update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL136",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "def setup(hass, config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL144",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL151",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL166",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL205",
        "old_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 205,
        "new_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL210",
        "old_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 210,
        "new_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL221",
        "old_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 221,
        "new_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL226",
        "old_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 226,
        "new_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL231",
        "old_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 231,
        "new_file": "homeassistant/components/ign_sismologia/geo_location.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL48",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL35",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL49",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL54",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL59",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL64",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL79",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL84",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL89",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL98",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL103",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL91",
        "old_file": "homeassistant/components/insteon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/insteon/__init__.py",
        "new_code": "def set_default_port(schema: Dict) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL601",
        "old_file": "homeassistant/components/insteon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 601,
        "new_file": "homeassistant/components/insteon/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL9",
        "old_file": "homeassistant/components/ipma/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 9,
        "new_file": "homeassistant/components/ipma/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: Config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL133",
        "old_file": "homeassistant/components/ipma/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/ipma/weather.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL167",
        "old_file": "homeassistant/components/isy994/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 167,
        "new_file": "homeassistant/components/isy994/__init__.py",
        "new_code": "def _check_for_node_def(hass: HomeAssistant, node, single_domain: str = None) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "def _detect_device_type(node) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL107",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL121",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL132",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def add_heartbeat_device(self, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL146",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 146,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def add_negative_node(self, child) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL165",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def _negative_node_control_handler(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL176",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def _positive_node_control_handler(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL200",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 200,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def on_update(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL217",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 217,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def value(self) -> object:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL234",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL249",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 249,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL276",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 276,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def _heartbeat_node_control_handler(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def current_cover_position(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def is_closed(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL58",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL64",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def open_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def close_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def __init__(self, name: str, node: object, actions: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL33",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def is_locked(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def lock(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def unlock(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL248",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 248,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def raw_unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL260",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 260,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL299",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 299,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def raw_units(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL308",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 308,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def state(self) -> object:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL32",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL41",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def __init__(self, name: str, node, actions) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/kira/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/kira/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/kira/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/kira/sensor.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL200",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 200,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL214",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 214,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL219",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 219,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL224",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 224,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL258",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 258,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL267",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 267,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def hvac_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL280",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 280,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def hvac_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL293",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 293,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL307",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 307,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL317",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 317,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL329",
        "old_file": "homeassistant/components/knx/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 329,
        "new_file": "homeassistant/components/knx/climate.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL523",
        "old_file": "homeassistant/components/konnected/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 523,
        "new_file": "homeassistant/components/konnected/__init__.py",
        "new_code": "    async def put(self, request: Request, device_id) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL487",
        "old_file": "homeassistant/components/konnected/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 487,
        "new_file": "homeassistant/components/konnected/__init__.py",
        "new_code": "    async def get(self, request: Request, device_id) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/konnected/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/konnected/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/components/konnected/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/konnected/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL59",
        "old_file": "homeassistant/components/konnected/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/konnected/switch.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL98",
        "old_file": "homeassistant/components/kwb/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/kwb/sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL32",
        "old_file": "homeassistant/components/locative/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/locative/__init__.py",
        "new_code": "def _id(value: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL37",
        "old_file": "homeassistant/components/locative/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/components/locative/__init__.py",
        "new_code": "def _validate_test_mode(obj: Dict) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/luftdaten/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/luftdaten/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL116",
        "old_file": "homeassistant/components/lw12wifi/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/lw12wifi/light.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL121",
        "old_file": "homeassistant/components/lw12wifi/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/lw12wifi/light.py",
        "new_code": "    def shoud_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL409",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 409,
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": "    def media_image_remotely_accessible(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL7",
        "old_file": "homeassistant/components/met/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 7,
        "new_file": "homeassistant/components/met/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: Config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL169",
        "old_file": "homeassistant/components/mill/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 169,
        "new_file": "homeassistant/components/mill/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL64",
        "old_file": "homeassistant/components/mobile_app/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/mobile_app/helpers.py",
        "new_code": "def _decrypt_payload(key: str, ciphertext: str) -> Dict[str, str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/mobile_app/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/mobile_app/helpers.py",
        "new_code": "def registration_context(registration: Dict) -> Context:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/mobile_app/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/mobile_app/helpers.py",
        "new_code": "def empty_okay_response(headers: Dict = None, status: int = 200) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "homeassistant/components/mobile_app/http_api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/mobile_app/http_api.py",
        "new_code": "    async def post(self, request: Request, data: Dict) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/components/mobile_app/websocket_api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/mobile_app/websocket_api.py",
        "new_code": "def register_websocket_handlers(hass: HomeAssistantType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL123",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "def valid_topic(value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL141",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "def valid_subscribe_topic(value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL168",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "def valid_publish_topic(value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL176",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "def validate_device_has_at_least_one_identifier(value: ConfigType) -> ConfigType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL349",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 349,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "def _build_publish_data(topic: Any, qos: int, retain: bool) -> ServiceDataType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL360",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "def publish(hass: HomeAssistantType, topic, payload, qos=None, retain=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL723",
        "old_file": "homeassistant/components/mqtt/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 723,
        "new_file": "homeassistant/components/mqtt/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL337",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 337,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL342",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 342,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL347",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 347,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL361",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 361,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL379",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 379,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL395",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 395,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL426",
        "old_file": "homeassistant/components/mqtt/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 426,
        "new_file": "homeassistant/components/mqtt/fan.py",
        "new_code": "    async def async_oscillate(self, oscillating: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/components/mystrom/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/mystrom/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def __init__(self, api_data) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL72",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL77",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def state(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL93",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL119",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL197",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 197,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def target_temperature_step(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL212",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 212,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL225",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 225,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL238",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL272",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 272,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL277",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 277,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL159",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 159,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def attribution(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL164",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 164,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL169",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 169,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL174",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def air_quality_index(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL179",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def carbon_monoxide(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL186",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 186,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def carbon_dioxide(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL193",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def nitrogen_oxide(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL200",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 200,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def nitrogen_monoxide(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL207",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 207,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def nitrogen_dioxide(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL214",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 214,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def ozone(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL221",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 221,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def particulate_matter_2_5(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL228",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def particulate_matter_10(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL235",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 235,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def particulate_matter_0_1(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL242",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def sulphur_dioxide(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL248",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 248,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def get_component_state(self, component_name: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL255",
        "old_file": "homeassistant/components/nilu/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 255,
        "new_file": "homeassistant/components/nilu/air_quality.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/norway_air/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/norway_air/air_quality.py",
        "new_code": "    def attribution(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/norway_air/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/norway_air/air_quality.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL93",
        "old_file": "homeassistant/components/norway_air/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/norway_air/air_quality.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL132",
        "old_file": "homeassistant/components/norway_air/air_quality.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/norway_air/air_quality.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL231",
        "old_file": "homeassistant/components/notion/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 231,
        "new_file": "homeassistant/components/notion/__init__.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL88",
        "old_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "new_code": "    def __init__(self, client, station_id: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL130",
        "old_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "new_code": "    def get_station_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL163",
        "old_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "new_code": "    def state(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL172",
        "old_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL181",
        "old_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 181,
        "new_file": "homeassistant/components/nsw_fuel_station/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL214",
        "old_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 214,
        "new_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL219",
        "old_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 219,
        "new_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL224",
        "old_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 224,
        "new_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL229",
        "old_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL234",
        "old_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL137",
        "old_file": "homeassistant/components/nuki/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 137,
        "new_file": "homeassistant/components/nuki/lock.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL77",
        "old_file": "homeassistant/components/openuv/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/openuv/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL99",
        "old_file": "homeassistant/components/openuv/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/openuv/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL114",
        "old_file": "homeassistant/components/panasonic_viera/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/panasonic_viera/media_player.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL249",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 249,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    def _async_schedule_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL254",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 254,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    def _data_to_save(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/piglow/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/piglow/light.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL136",
        "old_file": "homeassistant/components/pilight/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/pilight/__init__.py",
        "new_code": "    def __init__(self, hass, delay_seconds: float) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL63",
        "old_file": "homeassistant/components/plum_lightpad/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "homeassistant/components/plum_lightpad/light.py",
        "new_code": "    def brightness(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL68",
        "old_file": "homeassistant/components/plum_lightpad/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/plum_lightpad/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL212",
        "old_file": "homeassistant/components/ps4/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 212,
        "new_file": "homeassistant/components/ps4/media_player.py",
        "new_code": "    def _use_saved(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL202",
        "old_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 202,
        "new_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL207",
        "old_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 207,
        "new_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL212",
        "old_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 212,
        "new_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL217",
        "old_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 217,
        "new_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL222",
        "old_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 222,
        "new_file": "homeassistant/components/qld_bushfire/geo_location.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL455",
        "old_file": "homeassistant/components/rainmachine/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 455,
        "new_file": "homeassistant/components/rainmachine/__init__.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL460",
        "old_file": "homeassistant/components/rainmachine/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 460,
        "new_file": "homeassistant/components/rainmachine/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL63",
        "old_file": "homeassistant/components/rainmachine/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "homeassistant/components/rainmachine/binary_sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "homeassistant/components/rainmachine/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/rainmachine/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL59",
        "old_file": "homeassistant/components/rainmachine/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/rainmachine/sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/rainmachine/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/rainmachine/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/rainmachine/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/rainmachine/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/components/recollect_waste/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/recollect_waste/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/repetier/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/repetier/sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL163",
        "old_file": "homeassistant/components/roomba/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "homeassistant/components/roomba/vacuum.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL168",
        "old_file": "homeassistant/components/roomba/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/roomba/vacuum.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL199",
        "old_file": "homeassistant/components/samsungtv/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/samsungtv/media_player.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/sensehat/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/sensehat/light.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def __init__(self, sesame: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def is_locked(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def lock(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL74",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def unlock(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL89",
        "old_file": "homeassistant/components/sesame/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/sesame/lock.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL28",
        "old_file": "homeassistant/components/shell_command/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/shell_command/__init__.py",
        "new_code": "    async def async_service_handler(service: ServiceCall) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL206",
        "old_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 206,
        "new_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL33",
        "old_file": "homeassistant/components/smarthab/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/smarthab/__init__.py",
        "new_code": "def setup(hass, config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/smarthab/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/smarthab/cover.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/smarthab/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/smarthab/cover.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/components/smarthab/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/smarthab/cover.py",
        "new_code": "    def current_cover_position(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/smarthab/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/smarthab/cover.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL79",
        "old_file": "homeassistant/components/smarthab/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/smarthab/cover.py",
        "new_code": "    def is_closed(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL84",
        "old_file": "homeassistant/components/smarthab/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/smarthab/cover.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL212",
        "old_file": "homeassistant/components/smartthings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 212,
        "new_file": "homeassistant/components/smartthings/__init__.py",
        "new_code": "async def async_remove_entry(hass: HomeAssistantType, entry: ConfigEntry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL417",
        "old_file": "homeassistant/components/smartthings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 417,
        "new_file": "homeassistant/components/smartthings/__init__.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL433",
        "old_file": "homeassistant/components/smartthings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 433,
        "new_file": "homeassistant/components/smartthings/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL438",
        "old_file": "homeassistant/components/smartthings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 438,
        "new_file": "homeassistant/components/smartthings/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL443",
        "old_file": "homeassistant/components/smartthings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 443,
        "new_file": "homeassistant/components/smartthings/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/smartthings/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/smartthings/binary_sensor.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/components/smartthings/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/smartthings/binary_sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL72",
        "old_file": "homeassistant/components/smartthings/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/smartthings/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL110",
        "old_file": "homeassistant/components/smartthings/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/smartthings/climate.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL282",
        "old_file": "homeassistant/components/smartthings/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 282,
        "new_file": "homeassistant/components/smartthings/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL54",
        "old_file": "homeassistant/components/smartthings/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/smartthings/cover.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/components/smartthings/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/smartthings/fan.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL58",
        "old_file": "homeassistant/components/smartthings/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/smartthings/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/smartthings/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/smartthings/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL77",
        "old_file": "homeassistant/components/smartthings/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/smartthings/fan.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL87",
        "old_file": "homeassistant/components/smartthings/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/smartthings/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL92",
        "old_file": "homeassistant/components/smartthings/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/smartthings/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/components/smartthings/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/smartthings/light.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/smartthings/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/smartthings/light.py",
        "new_code": "    async def async_turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/components/smartthings/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/smartthings/light.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL188",
        "old_file": "homeassistant/components/smartthings/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 188,
        "new_file": "homeassistant/components/smartthings/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL209",
        "old_file": "homeassistant/components/smartthings/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 209,
        "new_file": "homeassistant/components/smartthings/light.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/components/smartthings/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/smartthings/lock.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL39",
        "old_file": "homeassistant/components/smartthings/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/smartthings/scene.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/components/smartthings/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/smartthings/scene.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL263",
        "old_file": "homeassistant/components/smartthings/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 263,
        "new_file": "homeassistant/components/smartthings/sensor.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL284",
        "old_file": "homeassistant/components/smartthings/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 284,
        "new_file": "homeassistant/components/smartthings/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL289",
        "old_file": "homeassistant/components/smartthings/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 289,
        "new_file": "homeassistant/components/smartthings/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/smartthings/smartapp.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/smartthings/smartapp.py",
        "new_code": "def validate_webhook_requirements(hass: HomeAssistantType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL99",
        "old_file": "homeassistant/components/smartthings/smartapp.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/smartthings/smartapp.py",
        "new_code": "def get_webhook_url(hass: HomeAssistantType) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL29",
        "old_file": "homeassistant/components/smartthings/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/components/smartthings/switch.py",
        "new_code": "def get_capabilities(capabilities: Sequence[str]) -> Optional[Sequence[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL40",
        "old_file": "homeassistant/components/smartthings/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/smartthings/switch.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL47",
        "old_file": "homeassistant/components/smartthings/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/smartthings/switch.py",
        "new_code": "    async def async_turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/smartthings/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/smartthings/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "homeassistant/components/smarty/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/smarty/binary_sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL76",
        "old_file": "homeassistant/components/smarty/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/components/smarty/binary_sensor.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/components/smarty/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/smarty/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/smarty/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/smarty/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL97",
        "old_file": "homeassistant/components/smarty/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/smarty/sensor.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL12",
        "old_file": "homeassistant/components/smhi/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 12,
        "new_file": "homeassistant/components/smhi/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: Config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL18",
        "old_file": "homeassistant/components/smhi/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "homeassistant/components/smhi/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL26",
        "old_file": "homeassistant/components/smhi/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/smhi/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistant, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL30",
        "old_file": "homeassistant/components/smhi/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/smhi/config_flow.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/smhi/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/smhi/config_flow.py",
        "new_code": "    async def _homeassistant_location_exists(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/components/smhi/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/smhi/config_flow.py",
        "new_code": "    def _name_in_configuration_exists(self, name: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL97",
        "old_file": "homeassistant/components/smhi/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/smhi/config_flow.py",
        "new_code": "    async def _check_location(self, longitude: str, latitude: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL68",
        "old_file": "homeassistant/components/spc/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/spc/binary_sensor.py",
        "new_code": "    def hidden(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def __init__(self, stream, timeout: int = 300) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def format(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def audio_codec(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def video_codec(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def segments(self) -> List[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def target_duration(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def get_segment(self, sequence: int = None) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL101",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    async def recv(self) -> Segment:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL115",
        "old_file": "homeassistant/components/stream/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/components/stream/core.py",
        "new_code": "    def put(self, segment: Segment) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL110",
        "old_file": "homeassistant/components/stream/hls.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/stream/hls.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL115",
        "old_file": "homeassistant/components/stream/hls.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/components/stream/hls.py",
        "new_code": "    def format(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/components/stream/hls.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/stream/hls.py",
        "new_code": "    def audio_codec(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL125",
        "old_file": "homeassistant/components/stream/hls.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "homeassistant/components/stream/hls.py",
        "new_code": "    def video_codec(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL45",
        "old_file": "homeassistant/components/stream/recorder.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/stream/recorder.py",
        "new_code": "    def __init__(self, stream, timeout: int = 30) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL52",
        "old_file": "homeassistant/components/stream/recorder.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/stream/recorder.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/components/stream/recorder.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/stream/recorder.py",
        "new_code": "    def format(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/components/stream/recorder.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/stream/recorder.py",
        "new_code": "    def audio_codec(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/components/stream/recorder.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/stream/recorder.py",
        "new_code": "    def video_codec(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL71",
        "old_file": "homeassistant/components/stream/recorder.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/stream/recorder.py",
        "new_code": "    def prepend(self, segments: List[Segment]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL120",
        "old_file": "homeassistant/components/supla/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/supla/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL128",
        "old_file": "homeassistant/components/supla/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 128,
        "new_file": "homeassistant/components/supla/__init__.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL102",
        "old_file": "homeassistant/components/swiss_hydrological_data/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/swiss_hydrological_data/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL34",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def __init__(self, mac, name) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL85",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/switchbot/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/switchbot/switch.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL27",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "def setup_platform(hass, config, add_entities, discovery_info=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def __init__(self, mac, name, flip_on_off) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL48",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL58",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL62",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL71",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/components/switchmate/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/switchmate/switch.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL114",
        "old_file": "homeassistant/components/tellduslive/entry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/tellduslive/entry.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL148",
        "old_file": "homeassistant/components/tellduslive/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/components/tellduslive/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL221",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 221,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL226",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 226,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL256",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 256,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL265",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 265,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    async def async_turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL270",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 270,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL285",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 285,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    async def async_oscillate(self, oscillating: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL302",
        "old_file": "homeassistant/components/template/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 302,
        "new_file": "homeassistant/components/template/fan.py",
        "new_code": "    async def async_set_direction(self, direction: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL198",
        "old_file": "homeassistant/components/template/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/components/template/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL254",
        "old_file": "homeassistant/components/template/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 254,
        "new_file": "homeassistant/components/template/vacuum.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL274",
        "old_file": "homeassistant/components/template/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 274,
        "new_file": "homeassistant/components/template/vacuum.py",
        "new_code": "    def fan_speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL119",
        "old_file": "homeassistant/components/tesla/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/components/tesla/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL49",
        "old_file": "homeassistant/components/tesla/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/tesla/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/components/tof/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/tof/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL91",
        "old_file": "homeassistant/components/tof/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/tof/sensor.py",
        "new_code": "    def state(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL96",
        "old_file": "homeassistant/components/tof/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/tof/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL51",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL160",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "    def __init__(self, toon: ToonData, name: str, icon: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL179",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL183",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 183,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL189",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL194",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 194,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "    def _schedule_immediate_update(self, display_name: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL204",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 204,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL64",
        "old_file": "homeassistant/components/toon/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/toon/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": "    def __init__(self, smartbulb: SmartBulb) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL95",
        "old_file": "homeassistant/components/tplink/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/tplink/switch.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL28",
        "old_file": "homeassistant/components/trackr/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/trackr/device_tracker.py",
        "new_code": "    def __init__(self, hass, config: dict, see) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/components/trackr/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/trackr/device_tracker.py",
        "new_code": "    def _update_info(self, now=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/components/tuya/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/tuya/fan.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL49",
        "old_file": "homeassistant/components/tuya/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/tuya/fan.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL56",
        "old_file": "homeassistant/components/tuya/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/tuya/fan.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/components/tuya/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/tuya/fan.py",
        "new_code": "    def oscillate(self, oscillating) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/components/tuya/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/tuya/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL91",
        "old_file": "homeassistant/components/tuya/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/tuya/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL233",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 233,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL238",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL243",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL114",
        "old_file": "homeassistant/components/upcloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/upcloud/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL114",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL119",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL124",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 124,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL129",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL134",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 134,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL192",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    def _is_overflowed(self, new_value) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL225",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 225,
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": "    async def _async_fetch_value(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL247",
        "old_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 247,
        "new_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL252",
        "old_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 252,
        "new_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL257",
        "old_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 257,
        "new_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "new_code": "    def distance(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL262",
        "old_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 262,
        "new_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "new_code": "    def latitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL267",
        "old_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 267,
        "new_file": "homeassistant/components/usgs_earthquakes_feed/geo_location.py",
        "new_code": "    def longitude(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL192",
        "old_file": "homeassistant/components/vallox/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "homeassistant/components/vallox/__init__.py",
        "new_code": "    async def async_set_profile(self, profile: str = \"Home\") -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL138",
        "old_file": "homeassistant/components/vallox/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 138,
        "new_file": "homeassistant/components/vallox/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL162",
        "old_file": "homeassistant/components/vallox/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 162,
        "new_file": "homeassistant/components/vallox/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL28",
        "old_file": "homeassistant/components/velbus/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/velbus/config_flow.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/velbus/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/velbus/config_flow.py",
        "new_code": "    def _prt_in_configuration_exists(self, prt: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL211",
        "old_file": "homeassistant/components/vera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 211,
        "new_file": "homeassistant/components/vera/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL54",
        "old_file": "homeassistant/components/vesync/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/vesync/common.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL155",
        "old_file": "homeassistant/components/vlc_telnet/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/components/vlc_telnet/media_player.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL90",
        "old_file": "homeassistant/components/websocket_api/auth.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/websocket_api/auth.py",
        "new_code": "    async def _async_finish_auth(self, user, refresh_token) -> ActiveConnection:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL224",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 224,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL229",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL234",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL293",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 293,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL300",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 300,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL304",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 304,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL308",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 308,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def set_humidity(self, humidity: float) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL321",
        "old_file": "homeassistant/components/wemo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 321,
        "new_file": "homeassistant/components/wemo/fan.py",
        "new_code": "    def reset_filter_life(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL223",
        "old_file": "homeassistant/components/wink/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 223,
        "new_file": "homeassistant/components/wink/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "homeassistant/components/wink/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/wink/fan.py",
        "new_code": "    def set_direction(self, direction: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL42",
        "old_file": "homeassistant/components/wink/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/wink/fan.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/wink/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/wink/fan.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/components/wink/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/wink/fan.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL81",
        "old_file": "homeassistant/components/wink/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/wink/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL98",
        "old_file": "homeassistant/components/wink/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/wink/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL71",
        "old_file": "homeassistant/components/wirelesstag/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/wirelesstag/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL1107",
        "old_file": "homeassistant/components/wunderground/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1107,
        "new_file": "homeassistant/components/wunderground/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL199",
        "old_file": "homeassistant/components/wwlln/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/wwlln/geo_location.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL266",
        "old_file": "homeassistant/components/xiaomi_aqara/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 266,
        "new_file": "homeassistant/components/xiaomi_aqara/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL46",
        "old_file": "homeassistant/components/xiaomi_aqara/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/xiaomi_aqara/lock.py",
        "new_code": "    def is_locked(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL52",
        "old_file": "homeassistant/components/xiaomi_aqara/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/xiaomi_aqara/lock.py",
        "new_code": "    def changed_by(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/components/xiaomi_aqara/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/xiaomi_aqara/lock.py",
        "new_code": "    def device_state_attributes(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL591",
        "old_file": "homeassistant/components/xiaomi_miio/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 591,
        "new_file": "homeassistant/components/xiaomi_miio/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL605",
        "old_file": "homeassistant/components/xiaomi_miio/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 605,
        "new_file": "homeassistant/components/xiaomi_miio/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL719",
        "old_file": "homeassistant/components/xiaomi_miio/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 719,
        "new_file": "homeassistant/components/xiaomi_miio/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL733",
        "old_file": "homeassistant/components/xiaomi_miio/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 733,
        "new_file": "homeassistant/components/xiaomi_miio/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL817",
        "old_file": "homeassistant/components/xiaomi_miio/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 817,
        "new_file": "homeassistant/components/xiaomi_miio/light.py",
        "new_code": "    def hs_color(self) -> tuple:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL340",
        "old_file": "homeassistant/components/xiaomi_miio/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 340,
        "new_file": "homeassistant/components/xiaomi_miio/vacuum.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL232",
        "old_file": "homeassistant/components/yeelight/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 232,
        "new_file": "homeassistant/components/yeelight/__init__.py",
        "new_code": "    def is_nightlight_enabled(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL240",
        "old_file": "homeassistant/components/yeelight/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 240,
        "new_file": "homeassistant/components/yeelight/__init__.py",
        "new_code": "    def is_nightlight_supported(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL287",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 287,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL292",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 292,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL302",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 302,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def color_temp(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL310",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 310,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL315",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 315,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL320",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 320,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def brightness(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL353",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 353,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def hs_color(self) -> tuple:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL363",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 363,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def _properties(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL416",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 416,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_music_mode(self, mode) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL424",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 424,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_brightness(self, brightness, duration) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL433",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 433,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_rgb(self, rgb, duration) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL442",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 442,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_colortemp(self, colortemp, duration) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL453",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 453,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_default(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL458",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 458,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_flash(self, flash) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL493",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 493,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def set_effect(self, effect) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL549",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 549,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL592",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 592,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL101",
        "old_file": "homeassistant/components/zeroconf/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/zeroconf/__init__.py",
        "new_code": "def handle_homekit(hass, info) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL124",
        "old_file": "homeassistant/components/zha/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 124,
        "new_file": "homeassistant/components/zha/api.py",
        "new_code": "    def async_cleanup() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL150",
        "old_file": "homeassistant/components/zha/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/components/zha/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL157",
        "old_file": "homeassistant/components/zha/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 157,
        "new_file": "homeassistant/components/zha/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL123",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL21",
        "old_file": "homeassistant/components/zha/core/channels/hvac.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "homeassistant/components/zha/core/channels/hvac.py",
        "new_code": "    async def async_set_speed(self, value) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def __init__(self, hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_create(self, device) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_get_or_create(self, device) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL61",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_create_or_update(self, device) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL68",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_delete(self, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL76",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_update(self, device) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL88",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    async def async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_schedule_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL109",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 109,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    async def async_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL114",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def _data_to_save(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL133",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "        async def _load_reg() -> ZhaDeviceStorage:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL127",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "async def async_get_registry(hass: HomeAssistantType) -> ZhaDeviceStorage:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL84",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL89",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL166",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL109",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 109,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL114",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL119",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL124",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 124,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL147",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 147,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL151",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/components/zha/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/zha/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL91",
        "old_file": "homeassistant/components/zha/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/zha/lock.py",
        "new_code": "    def is_locked(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL250",
        "old_file": "homeassistant/components/zha/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 250,
        "new_file": "homeassistant/components/zha/sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL260",
        "old_file": "homeassistant/components/zha/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 260,
        "new_file": "homeassistant/components/zha/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL11",
        "old_file": "homeassistant/components/zone/zone.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "homeassistant/components/zone/zone.py",
        "new_code": "def in_zone(zone, latitude, longitude, radius=0) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL369",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 369,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, hass_config: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL491",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 491,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_unload(self, entry_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL272",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 272,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_remove(self, hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL289",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 289,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_migrate(self, hass: HomeAssistant) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL337",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 337,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def add_update_listener(self, listener: Callable) -> Callable:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL381",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 381,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_domains(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL394",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 394,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_get_entry(self, entry_id: str) -> Optional[ConfigEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL402",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 402,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_entries(self, domain: Optional[str] = None) -> List[ConfigEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL435",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 435,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_initialize(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL464",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 464,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_setup(self, entry_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL503",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 503,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_reload(self, entry_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL641",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 641,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def _async_schedule_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL111",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "homeassistant/core.py",
        "new_code": "def split_entity_id(entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL116",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/core.py",
        "new_code": "def valid_entity_id(entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL124",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 124,
        "new_file": "homeassistant/core.py",
        "new_code": "def valid_state(state: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL129",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/core.py",
        "new_code": "def callback(func: CALLABLE_T) -> CALLABLE_T:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL135",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "homeassistant/core.py",
        "new_code": "def is_callback(func: Callable[..., Any]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL141",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "homeassistant/core.py",
        "new_code": "def async_loop_exception_handler(_: Any, context: Dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL161",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 161,
        "new_file": "homeassistant/core.py",
        "new_code": "    def __str__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL169",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 169,
        "new_file": "homeassistant/core.py",
        "new_code": "    def __init__(self, loop: Optional[asyncio.events.AbstractEventLoop] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL198",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/core.py",
        "new_code": "    def is_running(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL202",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 202,
        "new_file": "homeassistant/core.py",
        "new_code": "    def start(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL220",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "homeassistant/core.py",
        "new_code": "    async def async_run(self, *, attach_signals: bool = True) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL242",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/core.py",
        "new_code": "    async def async_start(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL279",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 279,
        "new_file": "homeassistant/core.py",
        "new_code": "    def add_job(self, target: Callable[..., None], *args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL26",
        "old_file": "homeassistant/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/exceptions.py",
        "new_code": "    def __init__(self, exception: jinja2.TemplateError) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/exceptions.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/exceptions.py",
        "new_code": "    def __str__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL11",
        "old_file": "homeassistant/helpers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "homeassistant/helpers/__init__.py",
        "new_code": "def config_per_platform(config: ConfigType, domain: str) -> Iterable[Tuple[Any, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL34",
        "old_file": "homeassistant/helpers/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/helpers/__init__.py",
        "new_code": "def extract_domain_configs(config: ConfigType, domain: str) -> Sequence[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def __init__(self, hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def async_get_area(self, area_id: str) -> Optional[AreaEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL48",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def async_list_areas(self) -> Iterable[AreaEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def async_create(self, name: str) -> AreaEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL69",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    async def async_delete(self, area_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL83",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def async_update(self, area_id: str, name: str) -> AreaEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL92",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def _async_update(self, area_id: str, name: str) -> AreaEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL111",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def _async_is_registered(self, name: str) -> Optional[AreaEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    async def async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL131",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def async_schedule_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL136",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "    def _data_to_save(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL148",
        "old_file": "homeassistant/helpers/area_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/helpers/area_registry.py",
        "new_code": "async def async_get_registry(hass: HomeAssistantType) -> AreaRegistry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL44",
        "old_file": "homeassistant/helpers/check_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/helpers/check_config.py",
        "new_code": "    def error_str(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/helpers/check_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/helpers/check_config.py",
        "new_code": "async def async_check_ha_config_file(hass: HomeAssistant) -> HomeAssistantConfig:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL133",
        "old_file": "homeassistant/helpers/config_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/helpers/config_entry_flow.py",
        "new_code": "async def webhook_async_remove_entry(hass, entry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL82",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def async_get(self, device_id: str) -> Optional[DeviceEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL337",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 337,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def async_clear_area_id(self, area_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL345",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 345,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "async def async_get_registry(hass: HomeAssistantType) -> DeviceRegistry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL368",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 368,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "def async_entries_for_area(registry: DeviceRegistry, area_id: str) -> List[DeviceEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL25",
        "old_file": "homeassistant/helpers/dispatcher.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/helpers/dispatcher.py",
        "new_code": "    def remove_dispatcher() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL89",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def async_get(self, entity_id: str) -> Optional[RegistryEntry]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL341",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 341,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "async def async_get_registry(hass: HomeAssistantType) -> EntityRegistry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL15",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 15,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "def _convert_filter(config: Dict[str, List[str]]) -> Callable[[str], bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL66",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "        def entity_filter_2(entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL76",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "        def entity_filter_3(entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL91",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "        def entity_filter_4a(entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "        def entity_filter_4b(entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL116",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "    def entity_filter_4c(entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL33",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "def async_register(hass: HomeAssistantType, handler: \"IntentHandler\") -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "def async_test_feature(state: State, feature: int, feature_name: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL135",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "    def async_can_handle(self, intent_obj: \"Intent\") -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL140",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "    def async_validate_slots(self, slots: _SlotsType) -> _SlotsType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL160",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "    def __repr__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL165",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "def _fuzzymatch(name: str, items: Iterable[T], key: Callable[[T], str]) -> Optional[T]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL240",
        "old_file": "homeassistant/helpers/intent.py",
        "old_line": "",
        "old_code": "",
        "new_line": 240,
        "new_file": "homeassistant/helpers/intent.py",
        "new_code": "    def __init__(self, intent: Optional[Intent] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL14",
        "old_file": "homeassistant/helpers/json.py",
        "old_line": "",
        "old_code": "",
        "new_line": 14,
        "new_file": "homeassistant/helpers/json.py",
        "new_code": "    def default(self, o: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def __init__(self, state: State, last_seen: datetime) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL48",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def as_dict(self) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def async_get_stored_states(self) -> List[StoredState]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL151",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    async def async_dump_states(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL186",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 186,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def async_restore_entity_added(self, entity_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL191",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def async_restore_entity_removed(self, entity_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL233",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 233,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    async def async_internal_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL242",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    async def async_internal_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL251",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 251,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    async def async_get_last_state(self) -> Optional[State]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def from_dict(cls, json_dict: Dict) -> \"StoredState\":"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL67",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    async def async_get_instance(cls, hass: HomeAssistant) -> \"RestoreStateData\":"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL109",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 109,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def __init__(self, hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL165",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def async_setup_dump(self, *args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL397",
        "old_file": "homeassistant/helpers/service.py",
        "old_line": "",
        "old_code": "",
        "new_line": 397,
        "new_file": "homeassistant/helpers/service.py",
        "new_code": "def verify_domain_control(hass: HomeAssistantType, domain: str) -> Callable:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL21",
        "old_file": "homeassistant/helpers/signal.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "homeassistant/helpers/signal.py",
        "new_code": "        def async_signal_handle(exit_code: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL16",
        "old_file": "homeassistant/helpers/signal.py",
        "old_line": "",
        "old_code": "",
        "new_line": 16,
        "new_file": "homeassistant/helpers/signal.py",
        "new_code": "def async_register_signal_handling(hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/helpers/signal.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/helpers/signal.py",
        "new_code": "        def async_signal_handle(exit_code: int, frame: FrameType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL99",
        "old_file": "homeassistant/helpers/state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/helpers/state.py",
        "new_code": "    def __init__(self, hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL105",
        "old_file": "homeassistant/helpers/state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/helpers/state.py",
        "new_code": "    def __enter__(self) -> List[State]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "homeassistant/helpers/storage.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/helpers/storage.py",
        "new_code": "    async def async_load(self) -> Union[Dict, List, None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL130",
        "old_file": "homeassistant/helpers/storage.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/helpers/storage.py",
        "new_code": "    async def async_save(self, data: Union[Dict, List]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL13",
        "old_file": "homeassistant/helpers/system_info.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "homeassistant/helpers/system_info.py",
        "new_code": "async def async_get_system_info(hass: HomeAssistantType) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL18",
        "old_file": "homeassistant/helpers/translation.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "homeassistant/helpers/translation.py",
        "new_code": "def recursive_flatten(prefix: Any, data: Dict) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL54",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/loader.py",
        "new_code": "def manifest_from_legacy_module(domain: str, module: ModuleType) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def get_sub_directories(paths: List) -> List:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL19",
        "old_file": "homeassistant/scripts/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 19,
        "new_file": "homeassistant/scripts/__init__.py",
        "new_code": "def run(args: List) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/scripts/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/scripts/__init__.py",
        "new_code": "def extract_config_dir(args=None) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL50",
        "old_file": "homeassistant/scripts/check_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/scripts/check_config.py",
        "new_code": "def run(script_args: List) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL26",
        "old_file": "homeassistant/setup.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/setup.py",
        "new_code": "def setup_component(hass: core.HomeAssistant, domain: str, config: Dict) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL31",
        "old_file": "homeassistant/util/async_.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/util/async_.py",
        "new_code": "    def asyncio_run(main: Awaitable[_T], *, debug: bool = False) -> _T:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "homeassistant/util/async_.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/util/async_.py",
        "new_code": "def _set_result_unless_cancelled(fut: Future, result: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL184",
        "old_file": "homeassistant/util/color.py",
        "old_line": "",
        "old_code": "",
        "new_line": 184,
        "new_file": "homeassistant/util/color.py",
        "new_code": "def color_name_to_rgb(color_name: str) -> Tuple[int, int, int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL10",
        "old_file": "homeassistant/util/decorator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "homeassistant/util/decorator.py",
        "new_code": "    def register(self, name: str) -> Callable[[CALLABLE_T], CALLABLE_T]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL20",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def convert(value: float, unit_1: str, unit_2: str) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL55",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def __miles_to_meters(miles: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def __feet_to_meters(feet: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL65",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def __kilometers_to_meters(kilometers: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def __meters_to_miles(meters: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL75",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def __meters_to_feet(meters: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL80",
        "old_file": "homeassistant/util/distance.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/util/distance.py",
        "new_code": "def __meters_to_kilometers(meters: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL36",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def set_default_time_zone(time_zone: dt.tzinfo) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL49",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def get_time_zone(time_zone_str: str) -> Optional[dt.tzinfo]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL60",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def utcnow() -> dt.datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def as_utc(dattim: dt.datetime) -> dt.datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL83",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def as_timestamp(dt_value: dt.datetime) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def as_local(dattim: dt.datetime) -> dt.datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL104",
        "old_file": "homeassistant/util/dt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/util/dt.py",
        "new_code": "def utc_from_timestamp(timestamp: float) -> dt.datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL17",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 17,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def __init__(self, text: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL22",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def filter(self, record: logging.LogRecord) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def close(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL57",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    async def async_close(self, blocking: bool = False) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL68",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def emit(self, record: Optional[logging.LogRecord]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL79",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def __repr__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL83",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def _process(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def createLock(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL98",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def acquire(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL102",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def release(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL107",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def level(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL112",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def formatter(self) -> Optional[logging.Formatter]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL122",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def name(self, name: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL132",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def log_exception(*args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL150",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "        async def async_wrapper(*args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL16",
        "old_file": "homeassistant/util/network.py",
        "old_line": "",
        "old_code": "",
        "new_line": 16,
        "new_file": "homeassistant/util/network.py",
        "new_code": "def is_local(address: Union[IPv4Address, IPv6Address]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL18",
        "old_file": "homeassistant/util/package.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "homeassistant/util/package.py",
        "new_code": "def is_virtual_env() -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL26",
        "old_file": "homeassistant/util/package.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/util/package.py",
        "new_code": "def is_docker_env() -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL31",
        "old_file": "homeassistant/util/package.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/util/package.py",
        "new_code": "def is_installed(package: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL29",
        "old_file": "homeassistant/util/pressure.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/util/pressure.py",
        "new_code": "def convert(value: float, unit_1: str, unit_2: str) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL7",
        "old_file": "homeassistant/util/ssl.py",
        "old_line": "",
        "old_code": "",
        "new_line": 7,
        "new_file": "homeassistant/util/ssl.py",
        "new_code": "def client_context() -> ssl.SSLContext:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL15",
        "old_file": "homeassistant/util/ssl.py",
        "old_line": "",
        "old_code": "",
        "new_line": 15,
        "new_file": "homeassistant/util/ssl.py",
        "new_code": "def server_context_modern() -> ssl.SSLContext:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL45",
        "old_file": "homeassistant/util/ssl.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/util/ssl.py",
        "new_code": "def server_context_intermediate() -> ssl.SSLContext:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL47",
        "old_file": "homeassistant/util/unit_system.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/util/unit_system.py",
        "new_code": "def is_valid_unit(unit: str, unit_type: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL19",
        "old_file": "homeassistant/util/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 19,
        "new_file": "homeassistant/util/volume.py",
        "new_code": "def __liter_to_gallon(liter: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL24",
        "old_file": "homeassistant/util/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "homeassistant/util/volume.py",
        "new_code": "def __gallon_to_liter(gallon: float) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL29",
        "old_file": "homeassistant/util/volume.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/util/volume.py",
        "new_code": "def convert(volume: float, from_unit: str, to_unit: str) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL11",
        "old_file": "homeassistant/util/yaml/dumper.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "homeassistant/util/yaml/dumper.py",
        "new_code": "def dump(_dict: dict) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL20",
        "old_file": "homeassistant/util/yaml/dumper.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "homeassistant/util/yaml/dumper.py",
        "new_code": "def save_yaml(path: str, data: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL11",
        "old_file": "script/hassfest/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "script/hassfest/__main__.py",
        "new_code": "def get_config() -> Config:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL9",
        "old_file": "script/hassfest/dependencies.py",
        "old_line": "",
        "old_code": "",
        "new_line": 9,
        "new_file": "script/hassfest/dependencies.py",
        "new_code": "def grep_dir(path: pathlib.Path, glob_pattern: str, search_pattern: str) -> Set[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL18",
        "old_file": "script/hassfest/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "script/hassfest/model.py",
        "new_code": "    def __str__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "script/hassfest/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "script/hassfest/model.py",
        "new_code": "    def domain(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "script/hassfest/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "script/hassfest/model.py",
        "new_code": "    def load_manifest(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "script/hassfest/services.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "script/hassfest/services.py",
        "new_code": "def grep_dir(path: pathlib.Path, glob_pattern: str, search_pattern: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL12",
        "old_file": "script/translations_download_split.py",
        "old_line": "",
        "old_code": "",
        "new_line": 12,
        "new_file": "script/translations_download_split.py",
        "new_code": "def load_json(filename: str) -> Union[List, Dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL13",
        "old_file": "script/translations_upload_merge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "script/translations_upload_merge.py",
        "new_code": "def load_json(filename: str) -> Union[List, Dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL13",
        "old_file": "tests/components/buienradar/test_camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "tests/components/buienradar/test_camera.py",
        "new_code": "def radar_map_url(dim: int = 512) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL86",
        "old_file": "tests/components/cast/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "tests/components/cast/test_media_player.py",
        "new_code": "    def discover_chromecast(service_name: str, info: ChromecastInfo) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL88",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def favorites_fixture() -> Dict[int, HeosSource]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL102",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def input_sources_fixture() -> Sequence[InputSource]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL112",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def dispatcher_fixture() -> Dispatcher:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL118",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def discovery_data_fixture() -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL135",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def quick_selects_fixture() -> Dict[int, str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL148",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def playlists_fixture() -> Sequence[HeosSource]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL157",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 157,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def change_data_fixture() -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL163",
        "old_file": "tests/components/heos/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "tests/components/heos/conftest.py",
        "new_code": "def change_data_mapped_ids_fixture() -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL306",
        "old_file": "tests/components/honeywell/test_climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 306,
        "new_file": "tests/components/honeywell/test_climate.py",
        "new_code": "    def test_set_hvac_mode(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/6919427e9462d05f402faa5f846f43e08347cebe#diff-a3c243075507e50dbfa0aadb841a2c9d46692c95L89",
        "old_file": "Lib/importlib/abc.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "Lib/importlib/abc.py",
        "new_code": "    def get_filename(self, fullname:str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL72",
        "old_file": "tests/components/seventeentrack/test_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "tests/components/seventeentrack/test_sensor.py",
        "new_code": "    def __init__(self, websession) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL97",
        "old_file": "tests/components/seventeentrack/test_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "tests/components/seventeentrack/test_sensor.py",
        "new_code": "    async def login(self, email: str, password: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL20",
        "old_file": "tests/components/shell_command/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "tests/components/shell_command/test_init.py",
        "new_code": "    def communicate() -> Tuple[bytes, bytes]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL13",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_homeassistant_location_exists() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL34",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_name_in_configuration_exists() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL64",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "def test_smhi_locations(hass) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL70",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_show_config_form() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL82",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_show_config_form_default_values() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL94",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_flow_with_home_location(hass) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL113",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_flow_show_form() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL152",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 152,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_flow_show_form_name_exists() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL181",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 181,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_flow_entry_created_from_user_input() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL214",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 214,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_flow_entry_created_user_input_faulty() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL249",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 249,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_check_location_correct() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL262",
        "old_file": "tests/components/smhi/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 262,
        "new_file": "tests/components/smhi/test_config_flow.py",
        "new_code": "async def test_check_location_faulty() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL35",
        "old_file": "tests/components/smhi/test_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "tests/components/smhi/test_weather.py",
        "new_code": "async def test_setup_hass(hass: HomeAssistant, aioclient_mock) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL83",
        "old_file": "tests/components/smhi/test_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "tests/components/smhi/test_weather.py",
        "new_code": "def test_properties_no_data(hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL103",
        "old_file": "tests/components/smhi/test_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "tests/components/smhi/test_weather.py",
        "new_code": "def test_properties_unknown_symbol() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL156",
        "old_file": "tests/components/smhi/test_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "tests/components/smhi/test_weather.py",
        "new_code": "async def test_refresh_weather_forecast_exceeds_retries(hass) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL177",
        "old_file": "tests/components/smhi/test_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 177,
        "new_file": "tests/components/smhi/test_weather.py",
        "new_code": "async def test_refresh_weather_forecast_timeout(hass) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL198",
        "old_file": "tests/components/smhi/test_weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "tests/components/smhi/test_weather.py",
        "new_code": "async def test_refresh_weather_forecast_exception() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL28",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL33",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def device_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL38",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def ip_addr(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL43",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def mac_addr(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL48",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL53",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL58",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def remaining_time(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL63",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def auto_off_set(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL68",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def power_consumption(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL73",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def electric_current(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL78",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def phone_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL83",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def last_data_update(self) -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL88",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "    def last_state_change(self) -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4de97abc3aa83188666336ce0a015a5bab75bc8f#diff-d4382d9685934c280dbcef560ef168d0c51b120bL422",
        "old_file": "tests/helpers/test_entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 422,
        "new_file": "tests/helpers/test_entity_component.py",
        "new_code": "    def async_loop_exception_handler(_, _2) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/b89ee8eae8a20d893644064552ea65cc5217c96c#diff-77725f62e1b03009203c8f1127a71902b6453d65L135",
        "old_file": "Lib/importlib/abc.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "Lib/importlib/abc.py",
        "new_code": "    def write_bytecode(self, fullname:str, bytecode:bytes) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c2556d90ea7629941a834a3fd969e41ba0bdcd1c#diff-20ec25548bb799691a032583a06375511ea9631eL65",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 65,
        "old_code": "    def __attrs_post_init__(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b0c79c271d7246acb5844a8e85e241d3d6535b68#diff-7069ed2afc168c2e8e90bba1ced0ba7107cb3109L100",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": 100,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b0c79c271d7246acb5844a8e85e241d3d6535b68#diff-7069ed2afc168c2e8e90bba1ced0ba7107cb3109L96",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dc5c1783dc76f01e7ab91eeea1eafd7286153e01#diff-4f948cf48ae1b5b127938c581bc1b3b4d5b1c549L34",
        "old_file": "homeassistant/components/traccar/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/traccar/__init__.py",
        "new_code": "def _id(value: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b79f1336be9dbaaadd1b4084d1d43699a6a6585f#diff-ce20355b591c25143f368615f72331e5f5e8a080L41",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": "def number(value: Any) -> Union[int, float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cf90e49b50a1f333d2222ca7f9fb347ea412920f#diff-331d9868790390c43b3958fccd33a6af218956d9L155",
        "old_file": "homeassistant/helpers/state.py",
        "old_line": 155,
        "old_code": "    async def worker(domain: str, data: List[State]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/helpers/state.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cf90e49b50a1f333d2222ca7f9fb347ea412920f#diff-331d9868790390c43b3958fccd33a6af218956d9L155",
        "old_file": "homeassistant/helpers/state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/helpers/state.py",
        "new_code": "    async def worker(domain: str, states_by_domain: List[State]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b738082dad7bb4097438c45714bd4fc079a772fc#diff-255c201eeaab8a3a6303f8bccbcb2f42091f50beL127",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": 127,
        "old_code": "    def set_speed(self, speed: str) -> None:",
        "new_line": 153,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def turn_on(self, speed: Optional[str] = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b738082dad7bb4097438c45714bd4fc079a772fc#diff-255c201eeaab8a3a6303f8bccbcb2f42091f50beL193",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": 193,
        "old_code": "    def current_direction(self) -> str:",
        "new_line": 194,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def current_direction(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b738082dad7bb4097438c45714bd4fc079a772fc#diff-255c201eeaab8a3a6303f8bccbcb2f42091f50beL77",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": 77,
        "old_code": "def is_on(hass, entity_id: str = None) -> bool:",
        "new_line": 78,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "def is_on(hass, entity_id: Optional[str] = None) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b738082dad7bb4097438c45714bd4fc079a772fc#diff-255c201eeaab8a3a6303f8bccbcb2f42091f50beL152",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": 152,
        "old_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:",
        "new_line": 153,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "    def turn_on(self, speed: Optional[str] = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b738082dad7bb4097438c45714bd4fc079a772fc#diff-255c201eeaab8a3a6303f8bccbcb2f42091f50beL158",
        "old_file": "homeassistant/components/http/ban.py",
        "old_line": 158,
        "old_code": "    def __init__(self, ip_ban: str, banned_at: datetime = None) -> None:",
        "new_line": 162,
        "new_file": "homeassistant/components/http/ban.py",
        "new_code": "    def __init__(self, ip_ban: str, banned_at: Optional[datetime] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L206",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 206,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def set_humidity(self, humidity: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L541",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 541,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def is_aux_heat(self) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L548",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 548,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def turn_aux_heat_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L552",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 552,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def turn_aux_heat_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L557",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 557,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def swing_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L565",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 565,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def swing_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5f0334d2084f2ab5cd7210adeb5776c06890559c#diff-f2c72dc5e989df79b0278b2cf3b14b85b3119b70L572",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 572,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa508b5106d0fd650dba8de1c7373f2ee6abe786#diff-92d1547761953ae258d12fca74a9930dd3cba640L534",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 534,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def turn_on(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa508b5106d0fd650dba8de1c7373f2ee6abe786#diff-92d1547761953ae258d12fca74a9930dd3cba640L545",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 545,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def turn_off(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa508b5106d0fd650dba8de1c7373f2ee6abe786#diff-92d1547761953ae258d12fca74a9930dd3cba640L556",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 556,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def toggle(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa508b5106d0fd650dba8de1c7373f2ee6abe786#diff-92d1547761953ae258d12fca74a9930dd3cba640L165",
        "old_file": "homeassistant/helpers/service.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "homeassistant/helpers/service.py",
        "new_code": "async def _load_services_file(hass: HomeAssistantType, domain: str) -> JSON_TYPE:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b66c11706c1d76c23671953d90c95030b08e22b#diff-797f7a68aaa2f11c042870131fa5602d3abaf203L93",
        "old_file": "homeassistant/helpers/config_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/helpers/config_entry_flow.py",
        "new_code": "        def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a2589f56e1ac87023123dfb98dffc968073c6ca5#diff-ea9c614d2044334ec1fc28bc17b4a11399059f54L376",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 376,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, hass_config: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL118",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL123",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL127",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL132",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL52",
        "old_file": "homeassistant/components/geniushub/binary_sensor.py",
        "old_line": 52,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL26",
        "old_file": "homeassistant/components/geniushub/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/geniushub/binary_sensor.py",
        "new_code": "    def __init__(self, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL37",
        "old_file": "homeassistant/components/geniushub/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/components/geniushub/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL42",
        "old_file": "homeassistant/components/geniushub/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/geniushub/binary_sensor.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL59",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 59,
        "old_code": "    async def async_added_to_hass(self) -> Awaitable[None]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL64",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 64,
        "old_code": "    def _refresh(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL79",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 79,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL94",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 94,
        "old_code": "    def target_temperature(self) -> Optional[float]:",
        "new_line": 79,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def target_temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL47",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def __init__(self, zone) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL96",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": 96,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL32",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def __init__(self, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL40",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL67",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL72",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL77",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL83",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL117",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    async def async_update(self) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL85",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 85,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL56",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def __init__(self, boiler) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL64",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL69",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL78",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL83",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def target_temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL88",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL93",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL98",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL103",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL108",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def operation_list(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL113",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    def current_operation(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL117",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    async def async_set_operation_mode(self, operation_mode) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33c35a6c3c3675a16dae509c3df821ba1b1c3930#diff-5e99b109e18a44f2cc6711524244c10d793c21ffL121",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> Awaitable[None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5c91a6cd48cfcb57c64333b6368e6406f8cd8d78#diff-6f90229fecd47cc79a638ddcffd74ec7e0598b52L316",
        "old_file": "homeassistant/__main__.py",
        "old_line": 316,
        "old_code": "        def open_browser(_: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/__main__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5c91a6cd48cfcb57c64333b6368e6406f8cd8d78#diff-6f90229fecd47cc79a638ddcffd74ec7e0598b52L279",
        "old_file": "homeassistant/core.py",
        "old_line": 279,
        "old_code": "    def add_job(self, target: Callable[..., None], *args: Any) -> None:",
        "new_line": 279,
        "new_file": "homeassistant/core.py",
        "new_code": "    def add_job(self, target: Callable[..., Any], *args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f704a8e90e7986cb9281fcd6d83a0b9b9e0f26d8#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L381",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 381,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, hass_config: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f704a8e90e7986cb9281fcd6d83a0b9b9e0f26d8#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L781",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 781,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_setup(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f704a8e90e7986cb9281fcd6d83a0b9b9e0f26d8#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L849",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 849,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "async def support_entry_unload(hass: HomeAssistant, domain: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f704a8e90e7986cb9281fcd6d83a0b9b9e0f26d8#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L283",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 283,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_remove(self, hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f704a8e90e7986cb9281fcd6d83a0b9b9e0f26d8#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L394",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 394,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_domains(self) -> List[str]:"
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L13",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 13,
        "old_code": "    def load_module(self, fullname:str) -> types.ModuleType:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L23",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 23,
        "old_code": "    def find_module(self, fullname:str, path:[str]=None) -> Loader:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L42",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 42,
        "old_code": "    def get_data(self, path:str) -> bytes:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L58",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 58,
        "old_code": "    def is_package(self, fullname:str) -> bool:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L64",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 64,
        "old_code": "    def get_code(self, fullname:str) -> types.CodeType:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L70",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 70,
        "old_code": "    def get_source(self, fullname:str) -> str:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L89",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 89,
        "old_code": "    def get_filename(self, fullname:str) -> str:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L106",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 106,
        "old_code": "    def source_path(self, fullname:str) -> object:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L123",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 123,
        "old_code": "    def source_mtime(self, fullname:str) -> int:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L129",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 129,
        "old_code": "    def bytecode_path(self, fullname:str) -> object:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/f23e3744412ac8943bddaace3dc0e85522518319#diff-8627d412b4f14b9793d017850f8f66a90c932c49L135",
        "old_file": "Lib/importlib/abc.py",
        "old_line": 135,
        "old_code": "    def write_bytecode(self, fullname:str, bytecode:bytes) -> bool:",
        "new_line": "",
        "new_file": "Lib/importlib/abc.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65cf5a6ef5cf877666e24fb365978b6577e6d81e#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L381",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 381,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, hass_config: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65cf5a6ef5cf877666e24fb365978b6577e6d81e#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L781",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 781,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_setup(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65cf5a6ef5cf877666e24fb365978b6577e6d81e#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L849",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 849,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "async def support_entry_unload(hass: HomeAssistant, domain: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65cf5a6ef5cf877666e24fb365978b6577e6d81e#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L283",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 283,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_remove(self, hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65cf5a6ef5cf877666e24fb365978b6577e6d81e#diff-c445a9d148903ae3a06dba1f54e1c4511efef7c0L394",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 394,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_domains(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/944b544b2eb79c9165ee2d24b74696a571a066e6#diff-8e8540df26a8f01fd43d7a540edc7a39377779e3L181",
        "old_file": "homeassistant/components/homekit_controller/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 181,
        "new_file": "homeassistant/components/homekit_controller/sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL122",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 122,
        "old_code": "def setup(hass: HomeAssistantType, hass_config: ConfigType) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL257",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 257,
        "old_code": "    def update(self, *args, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL115",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL391",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 391,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "    async def _call_client_api(self, api_function) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL412",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 412,
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL26",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": 26,
        "old_code": "def setup_platform(hass, hass_config, add_entities, discovery_info=None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f91dd4f5f859ed6aafc7b78d41cdfcdb34347418#diff-2603d270c8fe54a1b03abbefbfe610f66984890fL76",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": 76,
        "old_code": "    def set_operation_mode(self, operation_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4661f2a6df2e353b104c42277bd9d7ae779fdc20#diff-84aca57224adf91da76979b97999ebf8ef066bc5L58",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 58,
        "old_code": "def _local_dt_to_utc(dt_naive: datetime) -> datetime:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4661f2a6df2e353b104c42277bd9d7ae779fdc20#diff-84aca57224adf91da76979b97999ebf8ef066bc5L65",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 65,
        "old_code": "def _utc_to_local_dt(dt_aware: datetime) -> datetime:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4661f2a6df2e353b104c42277bd9d7ae779fdc20#diff-84aca57224adf91da76979b97999ebf8ef066bc5L72",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 72,
        "old_code": "def _handle_exception(err) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4661f2a6df2e353b104c42277bd9d7ae779fdc20#diff-84aca57224adf91da76979b97999ebf8ef066bc5L115",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 115,
        "old_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4661f2a6df2e353b104c42277bd9d7ae779fdc20#diff-84aca57224adf91da76979b97999ebf8ef066bc5L137",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 137,
        "old_code": "    def __init__(self, hass, params) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4661f2a6df2e353b104c42277bd9d7ae779fdc20#diff-84aca57224adf91da76979b97999ebf8ef066bc5L149",
        "old_file": "homeassistant/components/evohome/__init__.py",
        "old_line": 149,
        "old_code": "    async def init_client(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/518d2c31bb2b68d4842cd24aa15b2ba7e412851e#diff-5c2896169d007f48095f7934cbf6a241b4c4e726L64",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 64,
        "old_code": "    def allow_clip_sensor(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/518d2c31bb2b68d4842cd24aa15b2ba7e412851e#diff-5c2896169d007f48095f7934cbf6a241b4c4e726L69",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 69,
        "old_code": "    def allow_deconz_groups(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/518d2c31bb2b68d4842cd24aa15b2ba7e412851e#diff-5c2896169d007f48095f7934cbf6a241b4c4e726L70",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def option_allow_clip_sensor(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/518d2c31bb2b68d4842cd24aa15b2ba7e412851e#diff-5c2896169d007f48095f7934cbf6a241b4c4e726L77",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def option_allow_deconz_groups(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c847cc20fc17b374370a4fd3e8f4425a30ac56c1#diff-b4b7c23cf621549b783a73102498e996eb9108f6L292",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": 292,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c847cc20fc17b374370a4fd3e8f4425a30ac56c1#diff-b4b7c23cf621549b783a73102498e996eb9108f6L305",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 305,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c847cc20fc17b374370a4fd3e8f4425a30ac56c1#diff-b4b7c23cf621549b783a73102498e996eb9108f6L328",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 328,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c847cc20fc17b374370a4fd3e8f4425a30ac56c1#diff-b4b7c23cf621549b783a73102498e996eb9108f6L323",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 323,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f167914951c93f26f9f4305380150166215cccbd#diff-3bc5df33cec2c0b91480a44b4e7a5ca9bec9a2a7L55",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": 55,
        "old_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f167914951c93f26f9f4305380150166215cccbd#diff-3bc5df33cec2c0b91480a44b4e7a5ca9bec9a2a7L136",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f167914951c93f26f9f4305380150166215cccbd#diff-3bc5df33cec2c0b91480a44b4e7a5ca9bec9a2a7L141",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    def _update_callback(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f167914951c93f26f9f4305380150166215cccbd#diff-3bc5df33cec2c0b91480a44b4e7a5ca9bec9a2a7L145",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f167914951c93f26f9f4305380150166215cccbd#diff-3bc5df33cec2c0b91480a44b4e7a5ca9bec9a2a7L59",
        "old_file": "homeassistant/components/iaqualink/climate.py",
        "old_line": 59,
        "old_code": "    async def async_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/iaqualink/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ff136a19d9864e3d72c4d0774f65ba5170f1f236#diff-a730e8887ef06bbce8dd654689dd0c919b0fa219L116",
        "old_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "new_code": "    def __init__(self, home: AsyncHome) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ff136a19d9864e3d72c4d0774f65ba5170f1f236#diff-a730e8887ef06bbce8dd654689dd0c919b0fa219L174",
        "old_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "new_code": "    def state(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7468cc21bed278e8abc79c8ad28ed1e251806d81#diff-3713a0baf4e29aaa126de406003b1ef6dfc2c24eL111",
        "old_file": "homeassistant/components/cast/media_player.py",
        "old_line": 111,
        "old_code": "    def is_audio_group(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/cast/media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7468cc21bed278e8abc79c8ad28ed1e251806d81#diff-3713a0baf4e29aaa126de406003b1ef6dfc2c24eL116",
        "old_file": "homeassistant/components/cast/media_player.py",
        "old_line": 116,
        "old_code": "    def is_information_complete(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/cast/media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7468cc21bed278e8abc79c8ad28ed1e251806d81#diff-3713a0baf4e29aaa126de406003b1ef6dfc2c24eL133",
        "old_file": "homeassistant/components/cast/media_player.py",
        "old_line": 133,
        "old_code": "    def host_port(self) -> Tuple[str, int]:",
        "new_line": "",
        "new_file": "homeassistant/components/cast/media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c680c07c659e76712dc810bc50e8b11ad0a94df5#diff-8747bedbe47dac3b853d262628d472d9e055a89fL310",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 310,
        "old_code": "    def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f3fa073045a39845e638aacf48e658d1f04e4801#diff-cf43074a023a74a91698d32ed34ebc6bc1f122e2L60",
        "old_file": "homeassistant/components/upc_connect/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/upc_connect/device_tracker.py",
        "new_code": "    async def async_scan_devices(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f3fa073045a39845e638aacf48e658d1f04e4801#diff-cf43074a023a74a91698d32ed34ebc6bc1f122e2L69",
        "old_file": "homeassistant/components/upc_connect/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/upc_connect/device_tracker.py",
        "new_code": "    async def async_get_device_name(self, device: str) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/25ef4a156f8584b7bd69d71d4ec9efcb5533f916#diff-230bb6af673f587cbd50a2deabb93ed3afbfcbd7L50",
        "old_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "new_code": "def is_bluetooth_device(device) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/25ef4a156f8584b7bd69d71d4ec9efcb5533f916#diff-230bb6af673f587cbd50a2deabb93ed3afbfcbd7L55",
        "old_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "new_code": "def discover_devices(device_id: int) -> List[Tuple[str, str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/25ef4a156f8584b7bd69d71d4ec9efcb5533f916#diff-230bb6af673f587cbd50a2deabb93ed3afbfcbd7L68",
        "old_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "new_code": "def see_device(see, mac: str, device_name: str, rssi=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/25ef4a156f8584b7bd69d71d4ec9efcb5533f916#diff-230bb6af673f587cbd50a2deabb93ed3afbfcbd7L81",
        "old_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "new_code": "def get_tracking_devices(hass: HomeAssistantType) -> Tuple[Set[str], Set[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2f6d567657cbfa564080679a6336331c77416318#diff-9db6a3461b9e88722f72b0018d6926e7c3e49990L105",
        "old_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "new_code": "def lookup_name(mac: str) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2f6d567657cbfa564080679a6336331c77416318#diff-9db6a3461b9e88722f72b0018d6926e7c3e49990L81",
        "old_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "old_line": 81,
        "old_code": "def get_tracking_devices(hass: HomeAssistantType) -> Tuple[Set[str], Set[str]]:",
        "new_line": "",
        "new_file": "homeassistant/components/bluetooth_tracker/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a71cd6e90e54c2411dc04a689a7c7a3f170899ee#diff-89b5897a0a3e3f0b29e6229f31ce2be148073639L210",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 210,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL66",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def __init__(self, home: AsyncHome, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL130",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL71",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL76",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL81",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL86",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def humidity(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL91",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def wind_speed(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL116",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def wind_bearing(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL96",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def attribution(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24f1ff0aefef3695bf5318a69c1a08820d00dce0#diff-b319a61fd65d0604b8a365a2b6a95ca6dc83c7faL101",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def condition(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/770eeaf82f4800127e977f980f5438d0fa8edbc9#diff-3262cad4b3718897aaec6210474e382cd9b4ba7fL170",
        "old_file": "homeassistant/components/prometheus/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "homeassistant/components/prometheus/__init__.py",
        "new_code": "    def _sanitize_metric_name(metric: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/120c8bad502a25ea5b2fcd4a7b98a6bb32a63958#diff-3262cad4b3718897aaec6210474e382cd9b4ba7fL170",
        "old_file": "homeassistant/components/prometheus/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "homeassistant/components/prometheus/__init__.py",
        "new_code": "    def _sanitize_metric_name(metric: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L285",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 285,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    async def async_turn_on(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L289",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 289,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "    async def async_turn_off(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L267",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 267,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def open_cover(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L278",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 278,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def close_cover(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L327",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 327,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def open_cover_tilt(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L338",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 338,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def close_cover_tilt(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L289",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 289,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def toggle(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L373",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 373,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def toggle_tilt(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L168",
        "old_file": "homeassistant/components/http/ban.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/http/ban.py",
        "new_code": "async def async_load_ip_bans_config(hass: HomeAssistant, path: str) -> List[IpBan]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L191",
        "old_file": "homeassistant/components/http/ban.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "homeassistant/components/http/ban.py",
        "new_code": "def update_ip_bans_config(path: str, ip_ban: IpBan) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L47",
        "old_file": "homeassistant/components/media_player/reproduce_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/media_player/reproduce_state.py",
        "new_code": "    async def call_service(service: str, keys: Iterable) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L106",
        "old_file": "homeassistant/components/switch/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/switch/light.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/54242cd65c1d69d88ec366f545313cf003e9cbbb#diff-2f3aab96f0269142532878d6c241c89b0a9bc188L65",
        "old_file": "homeassistant/scripts/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/scripts/__init__.py",
        "new_code": "def extract_config_dir(args: Optional[Sequence[Text]] = None) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e394be73374574b11e1a7111165dbc577755b245#diff-05a564a188a3096127be62a80aef4c04cb6b7c39L271",
        "old_file": "homeassistant/components/mqtt/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 271,
        "new_file": "homeassistant/components/mqtt/binary_sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L26",
        "old_file": "script/scaffold/__main__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "script/scaffold/__main__.py",
        "new_code": "def get_arguments() -> argparse.Namespace:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L22",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def integration_dir(self) -> Path:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L27",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def tests_dir(self) -> Path:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L32",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def manifest_path(self) -> Path:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L36",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def manifest(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L40",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def update_manifest(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L48",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def strings_path(self) -> Path:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L52",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def strings(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a4a3e17cc820d28520c47d478b19182527547a2#diff-576a4773a53648f2dec82729f3e8f216941fa421L58",
        "old_file": "script/scaffold/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "script/scaffold/model.py",
        "new_code": "    def update_strings(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/161c8aada6fa5b7b6341a583c0cc8a7ea982f563#diff-1915acc10442b491701e927449b3780170c1142eL231",
        "old_file": "homeassistant/components/template/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 231,
        "new_file": "homeassistant/components/template/sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L140",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": 140,
        "old_code": "    def state(self) -> str:",
        "new_line": 140,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def state(self) -> Union[None, str, int, float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L145",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L153",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 153,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L161",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 161,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def device_info(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L174",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def unit_of_measurement(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L179",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def icon(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L184",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 184,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def entity_picture(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L218",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 218,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def context_recent_time(self) -> timedelta:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L223",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 223,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L238",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def async_set_context(self, context: Context) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f9ccb54342fdd723c769724da0f1e9ea98894a1#diff-cc6c3f66791c05c5927f81e224039e4ab1b1d7c2L543",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 543,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def __repr__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cd976b65ae2dba92556da0211563972f34c99645#diff-6a4db560acf43b49606a15f80e966f416028f166L209",
        "old_file": "homeassistant/components/template/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 209,
        "new_file": "homeassistant/components/template/switch.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f6995b8d17ca116d994e123b19180af77d9c1eb4#diff-7a87fa58616f359242dd35384a1d96a4a6ccc604L104",
        "old_file": "homeassistant/components/ecobee/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/ecobee/__init__.py",
        "new_code": "    async def refresh(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e57e7e844921e06fb629357dbe2a638989c2db24#diff-a3d6b1a602bda0cb01670bfb8cebfd8bba35f1d1L431",
        "old_file": "homeassistant/config.py",
        "old_line": 431,
        "old_code": "def _format_config_error(ex: vol.Invalid, domain: str, config: Dict) -> str:",
        "new_line": 431,
        "new_file": "homeassistant/config.py",
        "new_code": "def _format_config_error(ex: Exception, domain: str, config: Dict) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/80bc15e24b5c5665aa26ece36630dc6d6badc9de#diff-c366e75f7c70dc73814fe35a5b43301ffe43b9a1L198",
        "old_file": "homeassistant/components/alexa/entities.py",
        "old_line": 198,
        "old_code": "def async_get_entities(hass, config) -> List[AlexaEntity]:",
        "new_line": "",
        "new_file": "homeassistant/components/alexa/entities.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc3f5163f13e202889260db477e7173a6cfaa34c#diff-65ed7050530873ac7cd87eb7cccbeacdbe8a5e1aL102",
        "old_file": "homeassistant/components/hive/climate.py",
        "old_line": 102,
        "old_code": "    def hvac_mode(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/hive/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc3f5163f13e202889260db477e7173a6cfaa34c#diff-65ed7050530873ac7cd87eb7cccbeacdbe8a5e1aL168",
        "old_file": "homeassistant/components/hive/climate.py",
        "old_line": 168,
        "old_code": "    def set_preset_mode(self, preset_mode) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/hive/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ac634d71f4cc75946012e51f955c6f5292da2aee#diff-3a1bf0c298c91c21fef668aa99865f1282234938L43",
        "old_file": "homeassistant/util/async_.py",
        "old_line": 43,
        "old_code": "def _set_result_unless_cancelled(fut: Future, result: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/async_.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d773198a12f399cb9d89795d27fa4c5023c8734#diff-85083d87cfb68e0536275893adf892f47968316bL350",
        "old_file": "homeassistant/components/template/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 350,
        "new_file": "homeassistant/components/template/cover.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ed82ec5d8e5293746dd288827da21afc942d835b#diff-7e9d047a40d3303e398f95c20ec56bb162256332L225",
        "old_file": "homeassistant/components/template/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 225,
        "new_file": "homeassistant/components/template/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/11c9bab07810074ee60b21e055fd3cd05a6ed787#diff-01823a4663a0439b249ec9e2b0e11ebf622122f4L293",
        "old_file": "homeassistant/components/template/vacuum.py",
        "old_line": "",
        "old_code": "",
        "new_line": 293,
        "new_file": "homeassistant/components/template/vacuum.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/61a7d8e3d26c19288f9b55af2bcf63fe907c2906#diff-2dd8aedf29ff08d048186cef3a6d25f28ba634b0L97",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/61a7d8e3d26c19288f9b55af2bcf63fe907c2906#diff-2dd8aedf29ff08d048186cef3a6d25f28ba634b0L105",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    async def async_remove_from_registries(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f55235aa2f6801b3b1e2a08ef2971df7bcb0c93#diff-57b93f13ca3ecc2547a7419e20c7aa02030f420fL94",
        "old_file": "homeassistant/components/esphome/cover.py",
        "old_line": 94,
        "old_code": "    def current_cover_position(self) -> Optional[float]:",
        "new_line": 94,
        "new_file": "homeassistant/components/esphome/cover.py",
        "new_code": "    def current_cover_position(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f259ff17d525cd945eb965440691b11a92ccb2b0#diff-331083986905c700f879b5de35a6e727d0e2b54fL150",
        "old_file": "homeassistant/components/group/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/components/group/__init__.py",
        "new_code": "def expand_entity_ids(hass: HomeAssistantType, entity_ids: Iterable[Any]) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f259ff17d525cd945eb965440691b11a92ccb2b0#diff-331083986905c700f879b5de35a6e727d0e2b54fL360",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": "    def access_token(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f259ff17d525cd945eb965440691b11a92ccb2b0#diff-331083986905c700f879b5de35a6e727d0e2b54fL27",
        "old_file": "homeassistant/components/zone/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "homeassistant/components/zone/config_flow.py",
        "new_code": "def configured_zones(hass: HomeAssistantType) -> Set[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f259ff17d525cd945eb965440691b11a92ccb2b0#diff-331083986905c700f879b5de35a6e727d0e2b54fL18",
        "old_file": "homeassistant/components/zone/zone.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "homeassistant/components/zone/zone.py",
        "new_code": "def in_zone(zone: State, latitude: float, longitude: float, radius: float = 0) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL24",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def __init__(self, client, heater) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL31",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL36",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL40",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL45",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL50",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL55",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL30",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def __init__(self, client, heater, room) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL43",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL52",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL48",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def __init__(self, client, heater, name) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL59",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL64",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL68",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL73",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL78",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def state(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL83",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL88",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL120",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL32",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def __init__(self, client, heater) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL40",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL45",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL50",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL55",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL60",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def current_temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL69",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL74",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL79",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL84",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL89",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    def current_operation(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fa92d0e6d8a8539975012b9e7c2010fd0251011d#diff-a27b447f94ca0d6815c4280a87dd4562c1cdcfbcL96",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L269",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 269,
        "old_code": "    async def async_set_temperature(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L133",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 133,
        "old_code": "    async def _set_zone_mode(self, op_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L205",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 205,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L229",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 229,
        "old_code": "    def current_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L374",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 374,
        "old_code": "    def device_state_attributes(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L267",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 267,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L192",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L200",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 200,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L64",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": 64,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L79",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": 79,
        "old_code": "    def current_temperature(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a1997ee891be5ed5b5c2d85b6eb738fdf9bc0e00#diff-3fd4613e42a9413d7f742c94ae5665b472ae7ef1L107",
        "old_file": "homeassistant/components/evohome/water_heater.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/evohome/water_heater.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4a1f2809bdbcd74dd1bf6476467f474912ed041#diff-957507f003a90850764f3f92459feeb99982ba68L156",
        "old_file": "homeassistant/components/template/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "homeassistant/components/template/lock.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL118",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 118,
        "old_code": "    async def async_added_to_hass(self) -> Awaitable[None]:",
        "new_line": 150,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL73",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL106",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def __init__(self, hass, client, hub_uid) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL113",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def hub_uid(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL118",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    async def async_update(self, now, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL129",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def make_debug_log_entries(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL159",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 159,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL187",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 187,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL164",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 164,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL237",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 237,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL242",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def target_temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL247",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 247,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL252",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 252,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL257",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 257,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL262",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 262,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL266",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 266,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL42",
        "old_file": "homeassistant/components/geniushub/binary_sensor.py",
        "old_line": 42,
        "old_code": "    def device_state_attributes(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL58",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 58,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL63",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 63,
        "old_code": "    def device_state_attributes(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL74",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 74,
        "old_code": "    def current_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL79",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 79,
        "old_code": "    def target_temperature(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL84",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 84,
        "old_code": "    def min_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL89",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 89,
        "old_code": "    def max_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL94",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 94,
        "old_code": "    def temperature_unit(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL99",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 99,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL123",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 123,
        "old_code": "    async def async_set_temperature(self, **kwargs) -> Awaitable[None]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL129",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 129,
        "old_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> Awaitable[None]:",
        "new_line": 83,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL133",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": 133,
        "old_code": "    async def async_set_preset_mode(self, preset_mode: str) -> Awaitable[None]:",
        "new_line": 87,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL83",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": 83,
        "old_code": "    def device_state_attributes(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL117",
        "old_file": "homeassistant/components/geniushub/sensor.py",
        "old_line": 117,
        "old_code": "    async def async_update(self) -> Awaitable[None]:",
        "new_line": 111,
        "new_file": "homeassistant/components/geniushub/sensor.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL64",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 64,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL69",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 69,
        "old_code": "    def device_state_attributes(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL78",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 78,
        "old_code": "    def current_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL83",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 83,
        "old_code": "    def target_temperature(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL88",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 88,
        "old_code": "    def min_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL93",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 93,
        "old_code": "    def max_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL98",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 98,
        "old_code": "    def temperature_unit(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL103",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 103,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL117",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 117,
        "old_code": "    async def async_set_operation_mode(self, operation_mode) -> Awaitable[None]:",
        "new_line": 73,
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": "    async def async_set_operation_mode(self, operation_mode) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c78b3a44391a79f65522a03c7dddafe785a4922d#diff-fb2f79d3098a74decf3aafa9ccde4255ba969fadL121",
        "old_file": "homeassistant/components/geniushub/water_heater.py",
        "old_line": 121,
        "old_code": "    async def async_set_temperature(self, **kwargs) -> Awaitable[None]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65ce3b49c18a4a1887393619271d970645084284#diff-4e45f485f2c6d1f18a869ddc2f5d7288c96f095cL216",
        "old_file": "homeassistant/components/device_automation/toggle_entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 216,
        "new_file": "homeassistant/components/device_automation/toggle_entity.py",
        "new_code": "async def async_get_trigger_capabilities(hass: HomeAssistant, trigger: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65ce3b49c18a4a1887393619271d970645084284#diff-4e45f485f2c6d1f18a869ddc2f5d7288c96f095cL35",
        "old_file": "homeassistant/components/light/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/light/device_trigger.py",
        "new_code": "async def async_get_trigger_capabilities(hass: HomeAssistant, trigger: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65ce3b49c18a4a1887393619271d970645084284#diff-4e45f485f2c6d1f18a869ddc2f5d7288c96f095cL30",
        "old_file": "homeassistant/components/light/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/light/device_trigger.py",
        "new_code": "async def async_get_triggers(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65ce3b49c18a4a1887393619271d970645084284#diff-4e45f485f2c6d1f18a869ddc2f5d7288c96f095cL35",
        "old_file": "homeassistant/components/switch/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/switch/device_trigger.py",
        "new_code": "async def async_get_trigger_capabilities(hass: HomeAssistant, trigger: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65ce3b49c18a4a1887393619271d970645084284#diff-4e45f485f2c6d1f18a869ddc2f5d7288c96f095cL30",
        "old_file": "homeassistant/components/switch/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/switch/device_trigger.py",
        "new_code": "async def async_get_triggers(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f184bf4d8506c47db0860c2497900c5c44c17233#diff-d39e2745abf084ceb5f78aaae682addc76240676L121",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    async def _async_request_sync_devices(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L254",
        "old_file": "homeassistant/components/binary_sensor/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 254,
        "new_file": "homeassistant/components/binary_sensor/device_condition.py",
        "new_code": "async def async_get_condition_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L196",
        "old_file": "homeassistant/components/binary_sensor/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 196,
        "new_file": "homeassistant/components/binary_sensor/device_condition.py",
        "new_code": "async def async_get_conditions(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L219",
        "old_file": "homeassistant/components/device_automation/toggle_entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 219,
        "new_file": "homeassistant/components/device_automation/toggle_entity.py",
        "new_code": "async def async_get_condition_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L216",
        "old_file": "homeassistant/components/device_automation/toggle_entity.py",
        "old_line": 216,
        "old_code": "async def async_get_trigger_capabilities(hass: HomeAssistant, trigger: dict) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/device_automation/toggle_entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L32",
        "old_file": "homeassistant/components/light/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/light/device_condition.py",
        "new_code": "async def async_get_condition_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L27",
        "old_file": "homeassistant/components/light/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "homeassistant/components/light/device_condition.py",
        "new_code": "async def async_get_conditions(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L30",
        "old_file": "homeassistant/components/light/device_trigger.py",
        "old_line": 30,
        "old_code": "async def async_get_triggers(hass: HomeAssistant, device_id: str) -> List[dict]:",
        "new_line": "",
        "new_file": "homeassistant/components/light/device_trigger.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L35",
        "old_file": "homeassistant/components/light/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/light/device_trigger.py",
        "new_code": "async def async_get_trigger_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L32",
        "old_file": "homeassistant/components/switch/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/switch/device_condition.py",
        "new_code": "async def async_get_condition_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L27",
        "old_file": "homeassistant/components/switch/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "homeassistant/components/switch/device_condition.py",
        "new_code": "async def async_get_conditions(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L30",
        "old_file": "homeassistant/components/switch/device_trigger.py",
        "old_line": 30,
        "old_code": "async def async_get_triggers(hass: HomeAssistant, device_id: str) -> List[dict]:",
        "new_line": "",
        "new_file": "homeassistant/components/switch/device_trigger.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cda7692f2449590b6bbb275fb094cef7b76f7095#diff-54eaa41b4c611d38423e2b05fcb0d635883c5281L35",
        "old_file": "homeassistant/components/switch/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/switch/device_trigger.py",
        "new_code": "async def async_get_trigger_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/98eaecf61dfd4a18a2b76401d56228666647981f#diff-80b6fa9ae6c674f8aeadbff331ab766f286cd2d8L399",
        "old_file": "homeassistant/components/ecobee/climate.py",
        "old_line": 399,
        "old_code": "    def current_humidity(self) -> Optional[int]:",
        "new_line": "",
        "new_file": "homeassistant/components/ecobee/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0be1269b2007c2cdf98c79a1007b3e9f7de01435#diff-92676f324658a52194b53425b7897d55a6efebdcL140",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0be1269b2007c2cdf98c79a1007b3e9f7de01435#diff-92676f324658a52194b53425b7897d55a6efebdcL145",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/feb1986459f5c123471d2ab66a7190bead94f81e#diff-278a8e45620b2d67c2a1a39405042e011a7f80d9L250",
        "old_file": "homeassistant/components/todoist/calendar.py",
        "old_line": "",
        "old_code": "",
        "new_line": 250,
        "new_file": "homeassistant/components/todoist/calendar.py",
        "new_code": "def _parse_due_date(data: dict) -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c72ac87c73dc0ea8ce2c1f279c640872c12dbaac#diff-55daa99a662406b2910cfdc8c4f93ea94fb9779bL60",
        "old_file": "script/scaffold/templates/device_condition/integration/device_condition.py",
        "old_line": 60,
        "old_code": "    def test_is_on(hass: HomeAssistant, variables: TemplateVarsType) -> bool:",
        "new_line": "",
        "new_file": "script/scaffold/templates/device_condition/integration/device_condition.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c72ac87c73dc0ea8ce2c1f279c640872c12dbaac#diff-55daa99a662406b2910cfdc8c4f93ea94fb9779bL77",
        "old_file": "script/scaffold/templates/device_condition/integration/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "script/scaffold/templates/device_condition/integration/device_condition.py",
        "new_code": "    def test_is_state(hass: HomeAssistant, variables: TemplateVarsType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/071476343c10cdf8fe4a448082021eca3df7c8d7#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 111,
        "old_code": "    def nokia_measures_response(self) -> nokia.NokiaMeasures:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/071476343c10cdf8fe4a448082021eca3df7c8d7#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 116,
        "old_code": "    def nokia_sleep_response(self) -> nokia.NokiaSleep:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/071476343c10cdf8fe4a448082021eca3df7c8d7#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 121,
        "old_code": "    def nokia_sleep_summary_response(self) -> nokia.NokiaSleepSummary:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/071476343c10cdf8fe4a448082021eca3df7c8d7#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_measures_response(self) -> withings.WithingsMeasures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/071476343c10cdf8fe4a448082021eca3df7c8d7#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_response(self) -> withings.WithingsSleep:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/071476343c10cdf8fe4a448082021eca3df7c8d7#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_summary_response(self) -> withings.WithingsSleepSummary:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c4165418149986f3316b06072a368dd34cf1c577#diff-278a8e45620b2d67c2a1a39405042e011a7f80d9L250",
        "old_file": "homeassistant/components/todoist/calendar.py",
        "old_line": "",
        "old_code": "",
        "new_line": 250,
        "new_file": "homeassistant/components/todoist/calendar.py",
        "new_code": "def _parse_due_date(data: dict) -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a57642833b78ee64763ef12787a80cf543b36ffb#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 111,
        "old_code": "    def nokia_measures_response(self) -> nokia.NokiaMeasures:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a57642833b78ee64763ef12787a80cf543b36ffb#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 116,
        "old_code": "    def nokia_sleep_response(self) -> nokia.NokiaSleep:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a57642833b78ee64763ef12787a80cf543b36ffb#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 121,
        "old_code": "    def nokia_sleep_summary_response(self) -> nokia.NokiaSleepSummary:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a57642833b78ee64763ef12787a80cf543b36ffb#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_measures_response(self) -> withings.WithingsMeasures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a57642833b78ee64763ef12787a80cf543b36ffb#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_response(self) -> withings.WithingsSleep:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a57642833b78ee64763ef12787a80cf543b36ffb#diff-4bb17ca129186681bfa3ef122f74dd5d10fb2376L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_summary_response(self) -> withings.WithingsSleepSummary:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c188ecf79b4b0a335ee55fae5a02704fb7f29ddc#diff-fff611ca9eb11a427f3bc69744ec9f5f7e141668L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 111,
        "old_code": "    def withings_measures_response(self) -> withings.WithingsMeasures:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c188ecf79b4b0a335ee55fae5a02704fb7f29ddc#diff-fff611ca9eb11a427f3bc69744ec9f5f7e141668L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 116,
        "old_code": "    def withings_sleep_response(self) -> withings.WithingsSleep:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c188ecf79b4b0a335ee55fae5a02704fb7f29ddc#diff-fff611ca9eb11a427f3bc69744ec9f5f7e141668L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 121,
        "old_code": "    def withings_sleep_summary_response(self) -> withings.WithingsSleepSummary:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c188ecf79b4b0a335ee55fae5a02704fb7f29ddc#diff-fff611ca9eb11a427f3bc69744ec9f5f7e141668L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def nokia_measures_response(self) -> nokia.NokiaMeasures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c188ecf79b4b0a335ee55fae5a02704fb7f29ddc#diff-fff611ca9eb11a427f3bc69744ec9f5f7e141668L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def nokia_sleep_response(self) -> nokia.NokiaSleep:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c188ecf79b4b0a335ee55fae5a02704fb7f29ddc#diff-fff611ca9eb11a427f3bc69744ec9f5f7e141668L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def nokia_sleep_summary_response(self) -> nokia.NokiaSleepSummary:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65372da2418a56eb026ed24f746a06ff81611af1#diff-103efb4875f5805aa8b05ea274251223137bf48fL111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 111,
        "old_code": "    def withings_measures_response(self) -> withings.WithingsMeasures:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65372da2418a56eb026ed24f746a06ff81611af1#diff-103efb4875f5805aa8b05ea274251223137bf48fL116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 116,
        "old_code": "    def withings_sleep_response(self) -> withings.WithingsSleep:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65372da2418a56eb026ed24f746a06ff81611af1#diff-103efb4875f5805aa8b05ea274251223137bf48fL121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 121,
        "old_code": "    def withings_sleep_summary_response(self) -> withings.WithingsSleepSummary:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65372da2418a56eb026ed24f746a06ff81611af1#diff-103efb4875f5805aa8b05ea274251223137bf48fL111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def nokia_measures_response(self) -> nokia.NokiaMeasures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65372da2418a56eb026ed24f746a06ff81611af1#diff-103efb4875f5805aa8b05ea274251223137bf48fL116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def nokia_sleep_response(self) -> nokia.NokiaSleep:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/65372da2418a56eb026ed24f746a06ff81611af1#diff-103efb4875f5805aa8b05ea274251223137bf48fL121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def nokia_sleep_summary_response(self) -> nokia.NokiaSleepSummary:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/77490a3246b98f9f34c296e50d8277b8b57b38a7#diff-3b6444234f22a939f118cca457be7ea603a129f1L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 111,
        "old_code": "    def nokia_measures_response(self) -> nokia.NokiaMeasures:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/77490a3246b98f9f34c296e50d8277b8b57b38a7#diff-3b6444234f22a939f118cca457be7ea603a129f1L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 116,
        "old_code": "    def nokia_sleep_response(self) -> nokia.NokiaSleep:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/77490a3246b98f9f34c296e50d8277b8b57b38a7#diff-3b6444234f22a939f118cca457be7ea603a129f1L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 121,
        "old_code": "    def nokia_sleep_summary_response(self) -> nokia.NokiaSleepSummary:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/77490a3246b98f9f34c296e50d8277b8b57b38a7#diff-3b6444234f22a939f118cca457be7ea603a129f1L111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_measures_response(self) -> withings.WithingsMeasures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/77490a3246b98f9f34c296e50d8277b8b57b38a7#diff-3b6444234f22a939f118cca457be7ea603a129f1L116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_response(self) -> withings.WithingsSleep:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/77490a3246b98f9f34c296e50d8277b8b57b38a7#diff-3b6444234f22a939f118cca457be7ea603a129f1L121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_summary_response(self) -> withings.WithingsSleepSummary:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL51",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 51,
        "old_code": "    def __init__(self, home: AsyncHome, security_zones) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL51",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, security_zones) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL252",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": 252,
        "old_code": "    def __init__(self, home: AsyncHome, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL252",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 252,
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL57",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": 57,
        "old_code": "    def __init__(self, home: AsyncHome, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL57",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL55",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": 55,
        "old_code": "    def __init__(self, home: AsyncHome, device, post: Optional[str] = None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL55",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device, post: Optional[str] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL72",
        "old_file": "homeassistant/components/homematicip_cloud/light.py",
        "old_line": 72,
        "old_code": "    def __init__(self, home: AsyncHome, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL72",
        "old_file": "homeassistant/components/homematicip_cloud/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/homematicip_cloud/light.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL116",
        "old_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "old_line": 116,
        "old_code": "    def __init__(self, home: AsyncHome) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL116",
        "old_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/homematicip_cloud/sensor.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL73",
        "old_file": "homeassistant/components/homematicip_cloud/switch.py",
        "old_line": 73,
        "old_code": "    def __init__(self, home: AsyncHome, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL73",
        "old_file": "homeassistant/components/homematicip_cloud/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/homematicip_cloud/switch.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL66",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": 66,
        "old_code": "    def __init__(self, home: AsyncHome, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bbf26130246a3532e5634eda4a6a38ef46a02c1#diff-90969e30057648cc4044e46da8343f83fb7ec0ecL66",
        "old_file": "homeassistant/components/homematicip_cloud/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/homematicip_cloud/weather.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device) -> None:"
    },
    {
        "url": "https://github.com/scikit-learn/scikit-learn/commit/cd81de1ccc9773af119dc290c25cef34029a7c47#diff-5f9b6b21e15dc5ae3f6f845f23507782ccd88aaeL87",
        "old_file": "maint_tools/test_docstrings.py",
        "old_line": 87,
        "old_code": "def repr_errors(res, estimator=None, method: Optional[str] = None) -> str:",
        "new_line": "",
        "new_file": "maint_tools/test_docstrings.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbe366933f6be943887d365ec7128498054a7316#diff-6d86262457098b9e1092120ab53a60b2eee1e5c7L32",
        "old_file": "script/scaffold/templates/device_condition/integration/device_condition.py",
        "old_line": 32,
        "old_code": "async def async_get_conditions(hass: HomeAssistant, device_id: str) -> List[str]:",
        "new_line": 32,
        "new_file": "script/scaffold/templates/device_condition/integration/device_condition.py",
        "new_code": "async def async_get_conditions(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/863cf9823b8972b8d480959b62e8ee3dedd95d0d#diff-d6be746678e310ba5a60497f4a84b0ac1a48387aL111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 111,
        "old_code": "    def nokia_measures_response(self) -> nokia.NokiaMeasures:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/863cf9823b8972b8d480959b62e8ee3dedd95d0d#diff-d6be746678e310ba5a60497f4a84b0ac1a48387aL116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 116,
        "old_code": "    def nokia_sleep_response(self) -> nokia.NokiaSleep:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/863cf9823b8972b8d480959b62e8ee3dedd95d0d#diff-d6be746678e310ba5a60497f4a84b0ac1a48387aL121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": 121,
        "old_code": "    def nokia_sleep_summary_response(self) -> nokia.NokiaSleepSummary:",
        "new_line": "",
        "new_file": "tests/components/withings/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/863cf9823b8972b8d480959b62e8ee3dedd95d0d#diff-d6be746678e310ba5a60497f4a84b0ac1a48387aL111",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_measures_response(self) -> withings.WithingsMeasures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/863cf9823b8972b8d480959b62e8ee3dedd95d0d#diff-d6be746678e310ba5a60497f4a84b0ac1a48387aL116",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_response(self) -> withings.WithingsSleep:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/863cf9823b8972b8d480959b62e8ee3dedd95d0d#diff-d6be746678e310ba5a60497f4a84b0ac1a48387aL121",
        "old_file": "tests/components/withings/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "tests/components/withings/conftest.py",
        "new_code": "    def withings_sleep_summary_response(self) -> withings.WithingsSleepSummary:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a79a9809f492e8ff594f9ef3b2d9fdc046a0f081#diff-1f63fbb6748b99c5a5c84648229281f1721fc120L500",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": 500,
        "old_code": "    async def _on_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a79a9809f492e8ff594f9ef3b2d9fdc046a0f081#diff-1f63fbb6748b99c5a5c84648229281f1721fc120L502",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 502,
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": "    async def _on_state_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a79a9809f492e8ff594f9ef3b2d9fdc046a0f081#diff-1f63fbb6748b99c5a5c84648229281f1721fc120L506",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 506,
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": "    async def _on_device_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a79a9809f492e8ff594f9ef3b2d9fdc046a0f081#diff-1f63fbb6748b99c5a5c84648229281f1721fc120L50",
        "old_file": "homeassistant/components/esphome/camera.py",
        "old_line": 50,
        "old_code": "    async def _on_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/camera.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a79a9809f492e8ff594f9ef3b2d9fdc046a0f081#diff-1f63fbb6748b99c5a5c84648229281f1721fc120L50",
        "old_file": "homeassistant/components/esphome/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/esphome/camera.py",
        "new_code": "    async def _on_state_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3231e22ddf2fdd65a36028bec5f87d8e7032118b#diff-d492ecda1049c0a98f947333efcad6aad409aa0bL90",
        "old_file": "homeassistant/auth/__init__.py",
        "old_line": 90,
        "old_code": "    def support_legacy(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/auth/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ec788211619c10a0513eee3ea8f90db4a6d43fad#diff-8f9702b11040ba82e99987e13bc2ed21b4d2ad70L5",
        "old_file": "homeassistant/components/airly/__init__.py",
        "old_line": 5,
        "old_code": "async def async_setup(hass: HomeAssistant, config: Config) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/airly/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b6c26cb363adf9630607948643f4af4f612d3329#diff-c20777dbe2357d73e3b1336e044138e7f6f41b6aL19",
        "old_file": "homeassistant/components/somfy/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 19,
        "new_file": "homeassistant/components/somfy/config_flow.py",
        "new_code": "    def logger(self) -> logging.Logger:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb48898687504e2d439b0d4c14cb2a3a0ffcf7c2#diff-80725d56168928575ed75997b366c37293d1475fL60",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device: AsyncHeatingGroup) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/381d423fecd95f2b901f3ca1fa277746e7756c76#diff-e1cb457c44297b1e0991ce2840f3de941bf02bbcL182",
        "old_file": "homeassistant/components/group/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 182,
        "new_file": "homeassistant/components/group/cover.py",
        "new_code": "    def current_cover_position(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/381d423fecd95f2b901f3ca1fa277746e7756c76#diff-e1cb457c44297b1e0991ce2840f3de941bf02bbcL679",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 679,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def __init_subclass__(cls, domain: Optional[str] = None, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL65",
        "old_file": "homeassistant/components/incomfort/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/incomfort/__init__.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL70",
        "old_file": "homeassistant/components/incomfort/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/incomfort/__init__.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL75",
        "old_file": "homeassistant/components/incomfort/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/incomfort/__init__.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL83",
        "old_file": "homeassistant/components/incomfort/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/incomfort/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL88",
        "old_file": "homeassistant/components/incomfort/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/incomfort/__init__.py",
        "new_code": "    def _refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL92",
        "old_file": "homeassistant/components/incomfort/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/incomfort/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL31",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": 31,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL36",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": 36,
        "old_code": "    def _refresh(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL40",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": 40,
        "old_code": "    def unique_id(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL45",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": 45,
        "old_code": "    def name(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL60",
        "old_file": "homeassistant/components/incomfort/binary_sensor.py",
        "old_line": 60,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL38",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": 38,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL43",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": 43,
        "old_code": "    def _refresh(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL47",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": 47,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL52",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": 52,
        "old_code": "    def unique_id(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL57",
        "old_file": "homeassistant/components/incomfort/climate.py",
        "old_line": 57,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL59",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": 59,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL64",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": 64,
        "old_code": "    def _refresh(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL68",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": 68,
        "old_code": "    def unique_id(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL73",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": 73,
        "old_code": "    def name(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL93",
        "old_file": "homeassistant/components/incomfort/sensor.py",
        "old_line": 93,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL40",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": 40,
        "old_code": "    def unique_id(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8356d92f04b9c53943f7c7b4f04d01e11dd20ec9#diff-eca16518b55d581c67426916ab1bf3b0e696e2ecL45",
        "old_file": "homeassistant/components/incomfort/water_heater.py",
        "old_line": 45,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/incomfort/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/09f9875ccf8c7c48208c7ccaf148a90000d2e51f#diff-b7d9898a87e3dad62474cee1218dd80e7637ed73L59",
        "old_file": "homeassistant/components/glances/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/glances/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: Config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/269c8f1d1477053f4aec683f2850cf34b5a7a012#diff-2bd5ea0a3c91089c1fe2bb3fb83021600610f176L75",
        "old_file": "homeassistant/components/geniushub/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/geniushub/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ba10d5d604e425a2ba17fcbf0d1d360ef8dd5bd8#diff-6adcb2d01446debab5f089973a5ed7293e2c2ffaL61",
        "old_file": "homeassistant/components/esphome/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/esphome/sensor.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/70ddab2f3cb21bc431a46ddc4c1ac0254553f17c#diff-8fba6a85f2114db9d684e91f9b50f25ca50d35a6L165",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def async_setup_dump(self, *args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0c50f4794b96fe2aec0b5e8b8914ae5a99a1091#diff-568bf2e59e2860d627316ad941e1aa51fd04537bL235",
        "old_file": "tests/components/zha/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 235,
        "new_file": "tests/components/zha/common.py",
        "new_code": "def make_zcl_header(command_id: int, global_command: bool = True) -> zcl_f.ZCLHeader:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/efae75103ac124f5391c435328999ac171c13702#diff-58857f109b7b82a61027e86ade072127440ea7e9L101",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 101,
        "old_code": "async def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:",
        "new_line": 100,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/efae75103ac124f5391c435328999ac171c13702#diff-58857f109b7b82a61027e86ade072127440ea7e9L21",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": 21,
        "old_code": "def configured_haps(hass: HomeAssistant) -> Set[str]:",
        "new_line": 22,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "def configured_haps(hass: HomeAssistantType) -> Set[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/efae75103ac124f5391c435328999ac171c13702#diff-58857f109b7b82a61027e86ade072127440ea7e9L38",
        "old_file": "tests/components/homematicip_cloud/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "tests/components/homematicip_cloud/conftest.py",
        "new_code": "def hmip_config_entry_fixture() -> config_entries.ConfigEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/efae75103ac124f5391c435328999ac171c13702#diff-58857f109b7b82a61027e86ade072127440ea7e9L60",
        "old_file": "tests/components/homematicip_cloud/conftest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "tests/components/homematicip_cloud/conftest.py",
        "new_code": "def default_mock_home_fixture(mock_connection) -> AsyncHome:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L90",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 90,
        "old_code": "    def subscribe(self, path: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L94",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 94,
        "old_code": "    def unsubscribe(self, path: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L99",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 99,
        "old_code": "    def update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L103",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 103,
        "old_code": "    def _update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L140",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 140,
        "old_code": "def setup(hass, config) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L121",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def device_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L133",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L168",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def cleanup(self, *_) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L245",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 245,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def get_connection() -> Connection:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L259",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 259,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def signal_update() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L294",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 294,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def _update_router(*_: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L38",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": 38,
        "old_code": "    def scan_devices(self) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L49",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": 49,
        "old_code": "    def get_device_name(self, device: str) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L54",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": 54,
        "old_code": "    def get_extra_attributes(self, device: str) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L54",
        "old_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/huawei_lte/device_tracker.py",
        "new_code": "    async def _async_maybe_add_new_entities(url: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L41",
        "old_file": "homeassistant/components/huawei_lte/notify.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/huawei_lte/notify.py",
        "new_code": "    def send_message(self, message: str = \"\", **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L176",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": 176,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L181",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": 181,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L189",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": "    def _entity_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L193",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": "    def _device_unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fc09702cc33036b46d2b1566eebdabd6696bbd9e#diff-ef7e69d3b080cc0ddcac681365f5f8c70f337875L220",
        "old_file": "homeassistant/components/huawei_lte/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "homeassistant/components/huawei_lte/sensor.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL39",
        "old_file": "homeassistant/components/withings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/withings/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL62",
        "old_file": "homeassistant/components/withings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/withings/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL108",
        "old_file": "homeassistant/components/withings/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "homeassistant/components/withings/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL60",
        "old_file": "homeassistant/components/withings/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/withings/common.py",
        "new_code": "    def time(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL65",
        "old_file": "homeassistant/components/withings/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/withings/common.py",
        "new_code": "    def interval(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL70",
        "old_file": "homeassistant/components/withings/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/withings/common.py",
        "new_code": "    def data(self) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL74",
        "old_file": "homeassistant/components/withings/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/withings/common.py",
        "new_code": "    def is_expired(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL55",
        "old_file": "homeassistant/components/withings/config_flow.py",
        "old_line": 55,
        "old_code": "    def async_profile_config_entry(self, profile: str) -> Optional[ConfigEntry]:",
        "new_line": "",
        "new_file": "homeassistant/components/withings/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL23",
        "old_file": "homeassistant/components/withings/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "homeassistant/components/withings/config_flow.py",
        "new_code": "    def logger(self) -> logging.Logger:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL28",
        "old_file": "homeassistant/components/withings/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/withings/config_flow.py",
        "new_code": "    def extra_authorize_data(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL40",
        "old_file": "homeassistant/components/withings/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/withings/config_flow.py",
        "new_code": "    async def async_oauth_create_entry(self, data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL45",
        "old_file": "homeassistant/components/withings/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/withings/config_flow.py",
        "new_code": "    async def async_step_profile(self, data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL60",
        "old_file": "homeassistant/components/withings/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/withings/config_flow.py",
        "new_code": "    async def async_step_finish(self, data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL29",
        "old_file": "tests/components/withings/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "tests/components/withings/common.py",
        "new_code": "def get_entity_id(measure, profile) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL16",
        "old_file": "tests/components/withings/test_common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 16,
        "new_file": "tests/components/withings/test_common.py",
        "new_code": "def withings_api_fixture() -> WithingsApi:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL25",
        "old_file": "tests/components/withings/test_common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "tests/components/withings/test_common.py",
        "new_code": "def data_manager_fixture(hass, withings_api: WithingsApi) -> WithingsDataManager:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL30",
        "old_file": "tests/components/withings/test_common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "tests/components/withings/test_common.py",
        "new_code": "def test_print_service() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL59",
        "old_file": "tests/components/withings/test_common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "tests/components/withings/test_common.py",
        "new_code": "async def test_data_manager_call(data_manager: WithingsDataManager) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL36",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "def config_schema_validate(withings_config) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL43",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "def config_schema_assert_fail(withings_config) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL52",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "def test_config_schema_basic_config() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL63",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "def test_config_schema_client_id() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL87",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "def test_config_schema_client_secret() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL108",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "def test_config_schema_profiles() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/15bedd8f2797515eb086c61e9fd31e7afc096403#diff-33caad1c95bdafbcd244231736bd88e709e088ebL150",
        "old_file": "tests/components/withings/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "tests/components/withings/test_init.py",
        "new_code": "async def test_async_setup_no_config(hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7fee44b8c598e5e2b5e5950f5a3bf1078d36cd94#diff-3aa6d0eb4a6555179cdbd6175be2dab69d023acfL145",
        "old_file": "homeassistant/components/cover/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/cover/device_condition.py",
        "new_code": "async def async_get_condition_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7fee44b8c598e5e2b5e5950f5a3bf1078d36cd94#diff-3aa6d0eb4a6555179cdbd6175be2dab69d023acfL197",
        "old_file": "homeassistant/components/cover/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 197,
        "new_file": "homeassistant/components/cover/device_condition.py",
        "new_code": "    def template_if(hass: HomeAssistant, variables: TemplateVarsType = None) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7fee44b8c598e5e2b5e5950f5a3bf1078d36cd94#diff-3aa6d0eb4a6555179cdbd6175be2dab69d023acfL66",
        "old_file": "homeassistant/components/cover/device_condition.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/cover/device_condition.py",
        "new_code": "async def async_get_conditions(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f88ead597a8da0212d1f34e80b5f9ef1ee1b940a#diff-60cb91b415aa9b94a4b691e972733f5722b15410L797",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 797,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def async_setup(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f88ead597a8da0212d1f34e80b5f9ef1ee1b940a#diff-60cb91b415aa9b94a4b691e972733f5722b15410L360",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def as_dict(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f88ead597a8da0212d1f34e80b5f9ef1ee1b940a#diff-60cb91b415aa9b94a4b691e972733f5722b15410L421",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 421,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_remove(self, entry_id: str) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f88ead597a8da0212d1f34e80b5f9ef1ee1b940a#diff-60cb91b415aa9b94a4b691e972733f5722b15410L70",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def _domain_default(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f88ead597a8da0212d1f34e80b5f9ef1ee1b940a#diff-60cb91b415aa9b94a4b691e972733f5722b15410L75",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def disabled(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f88ead597a8da0212d1f34e80b5f9ef1ee1b940a#diff-60cb91b415aa9b94a4b691e972733f5722b15410L93",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def async_is_registered(self, entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0ef99934b70c7c8f27bacf9dc985e12a9705dab5#diff-deb6806fa47c734b5987046a904da5c50dbb5c43L215",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 215,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0ef99934b70c7c8f27bacf9dc985e12a9705dab5#diff-deb6806fa47c734b5987046a904da5c50dbb5c43L220",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0ef99934b70c7c8f27bacf9dc985e12a9705dab5#diff-deb6806fa47c734b5987046a904da5c50dbb5c43L225",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 225,
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/24c29f922752bc734b19a7bf10a66be996bea870#diff-eea3928a60f7c086f203aaa1057d29137bb6e6c3L5",
        "old_file": "script/scaffold/docs.py",
        "old_line": 5,
        "old_code": "def print_relevant_docs(template: str, info: Info) -> None:",
        "new_line": "",
        "new_file": "script/scaffold/docs.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L236",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 236,
        "old_code": "    def current_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L241",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 241,
        "old_code": "    def target_temperature(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L246",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 246,
        "old_code": "    def min_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L251",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 251,
        "old_code": "    def max_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L256",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 256,
        "old_code": "    def temperature_unit(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L261",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 261,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L265",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": 265,
        "old_code": "    async def async_set_temperature(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L105",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 105,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def __init__(self, hass, client, hub_uid) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L244",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 244,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L249",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 249,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def target_temperature(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L254",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 254,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L259",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 259,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L264",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 264,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L269",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 269,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5b85456759142c5942c5cd95770acf96be0fcd52#diff-9b0caaeed8d22b66f1fe3a37d7c7b0e837963c53L273",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L42",
        "old_file": "homeassistant/components/demo/stt.py",
        "old_line": 42,
        "old_code": "    def supported_bitrates(self) -> List[AudioBitrates]:",
        "new_line": "",
        "new_file": "homeassistant/components/demo/stt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L47",
        "old_file": "homeassistant/components/demo/stt.py",
        "old_line": 47,
        "old_code": "    def supported_samplerates(self) -> List[AudioSamplerates]:",
        "new_line": "",
        "new_file": "homeassistant/components/demo/stt.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L42",
        "old_file": "homeassistant/components/demo/stt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/demo/stt.py",
        "new_code": "    def supported_bit_rates(self) -> List[AudioBitRates]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L47",
        "old_file": "homeassistant/components/demo/stt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/demo/stt.py",
        "new_code": "    def supported_sample_rates(self) -> List[AudioSampleRates]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L114",
        "old_file": "homeassistant/components/stt/__init__.py",
        "old_line": 114,
        "old_code": "    def supported_bitrates(self) -> List[AudioBitrates]:",
        "new_line": "",
        "new_file": "homeassistant/components/stt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L119",
        "old_file": "homeassistant/components/stt/__init__.py",
        "old_line": 119,
        "old_code": "    def supported_samplerates(self) -> List[AudioSamplerates]:",
        "new_line": "",
        "new_file": "homeassistant/components/stt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L114",
        "old_file": "homeassistant/components/stt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/stt/__init__.py",
        "new_code": "    def supported_bit_rates(self) -> List[AudioBitRates]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83a9f4ddb83ed5f428f124da1d2e1c4ebbf3793b#diff-063cf0337ce533eb34c9eabc97bad60b30564243L119",
        "old_file": "homeassistant/components/stt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/components/stt/__init__.py",
        "new_code": "    def supported_sample_rates(self) -> List[AudioSampleRates]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/005a1b2713c92d312fa8c267e25cf4882f5a4a95#diff-36fb1c7a5c258a749c729cec71f575e21212437eL53",
        "old_file": "homeassistant/components/demo/stt.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/demo/stt.py",
        "new_code": "    def supported_channels(self) -> List[AudioChannels]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/005a1b2713c92d312fa8c267e25cf4882f5a4a95#diff-36fb1c7a5c258a749c729cec71f575e21212437eL136",
        "old_file": "homeassistant/components/stt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/stt/__init__.py",
        "new_code": "    def supported_channels(self) -> List[AudioChannels]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d9edd425325d39d1a34cfeb56c3c7f46f4d0da85#diff-95a067eff18341e1f9e4c7d7e1372ef1ce1e873fL28",
        "old_file": "homeassistant/components/somfy/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/somfy/api.py",
        "new_code": "    def refresh_tokens(self,) -> Dict[str, Union[str, int]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9d3d35ad793724a39909de4aabc872bd9845d847#diff-1fcec9b391f9cc4214762d25d99f77c50f1a661cL294",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 294,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    def _has_radiator_thermostat(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f56f4e7e940a6c90f4e5877a551b73712037d91#diff-a2e1ac7d527a7353492a8f774f5bb7ce46ccde32L140",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def device_connections(self) -> Set[Tuple[str, str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f56f4e7e940a6c90f4e5877a551b73712037d91#diff-a2e1ac7d527a7353492a8f774f5bb7ce46ccde32L442",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 442,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/28c6837f00b32fcf60df2fd0d1536aaf92f39b58#diff-3e549f55d07996af8ba0895d15f57630a80dc1abL53",
        "old_file": "homeassistant/components/conversation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/conversation/__init__.py",
        "new_code": "async def get_agent(hass: core.HomeAssistant) -> AbstractConversationAgent:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/179a2eb187882098b42051ad2b7a5ace779ae730#diff-cffe1678fba4937c1dbe215919d87a3a698b3addL206",
        "old_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "old_line": 206,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e8348221d488da6086c9db756a1c5f78db21061f#diff-6423b986d272e86634a752b3ca07df403ed24df3L297",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 297,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    def _has_switch(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/48fd95c7dbfa0b870dc5f18e315801c6174981cf#diff-0a52f67a90413182e64b3c7bce14b9c031c274aeL341",
        "old_file": "homeassistant/components/here_travel_time/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 341,
        "new_file": "homeassistant/components/here_travel_time/sensor.py",
        "new_code": "    def _entity_state_is_valid_coordinate_set(state: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/60e7440ec188b1e82e76dcb533820d857ccd3d10#diff-ace149d73c198a71e47accd434ebb2cbda02a6c1L93",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 93,
        "old_code": "    def _internal_alarm_zone_state(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/60e7440ec188b1e82e76dcb533820d857ccd3d10#diff-ace149d73c198a71e47accd434ebb2cbda02a6c1L97",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 97,
        "old_code": "    def _external_alarm_zone_state(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/60e7440ec188b1e82e76dcb533820d857ccd3d10#diff-ace149d73c198a71e47accd434ebb2cbda02a6c1L152",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 152,
        "old_code": "def _get_zone_alarm_state(security_zone) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cd335bd434e79f22090ff027068675268b977df1#diff-0cc983480f3ced86ecb9f934ffa55877ff034943L65",
        "old_file": "homeassistant/components/repetier/sensor.py",
        "old_line": 65,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/repetier/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d6e99db38e04a80bb596e38e4e0375fa3351f1de#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L39",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def __init__(self, name, ccb: ComfoConnectBridge) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d6e99db38e04a80bb596e38e4e0375fa3351f1de#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L60",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d6e99db38e04a80bb596e38e4e0375fa3351f1de#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L101",
        "old_file": "homeassistant/components/comfoconnect/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/comfoconnect/sensor.py",
        "new_code": "    def __init__(self, name, ccb: ComfoConnectBridge, sensor_type) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d6e99db38e04a80bb596e38e4e0375fa3351f1de#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L132",
        "old_file": "homeassistant/components/comfoconnect/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/comfoconnect/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0c48b8ec52d384f8ac2e1088b1dacfe776418250#diff-811b43bf4cb25cc238b0b229bd55148ec91d3f31L267",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 267,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0c48b8ec52d384f8ac2e1088b1dacfe776418250#diff-811b43bf4cb25cc238b0b229bd55148ec91d3f31L273",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/94675ca5a79e56359849ef9aaab85de54c0c6d29#diff-5d06208fc629671b97699215942160b0d4fbcd6dL91",
        "old_file": "homeassistant/components/heatmiser/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/heatmiser/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/94675ca5a79e56359849ef9aaab85de54c0c6d29#diff-5d06208fc629671b97699215942160b0d4fbcd6dL99",
        "old_file": "homeassistant/components/heatmiser/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/heatmiser/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/94675ca5a79e56359849ef9aaab85de54c0c6d29#diff-5d06208fc629671b97699215942160b0d4fbcd6dL51",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "tests/components/climate/test_init.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/94675ca5a79e56359849ef9aaab85de54c0c6d29#diff-5d06208fc629671b97699215942160b0d4fbcd6dL59",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "tests/components/climate/test_init.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b927f40f00e4348184c66ee29c711d0ccc348798#diff-6dcc8f93e3dbfda9ff63369d140c338af69e60f5L228",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL140",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _async_activate_eco_mode_with_duration(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL160",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _async_activate_eco_mode_with_period(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL180",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 180,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _async_activate_vacation(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL201",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 201,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _async_deactivate_eco_mode(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL220",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _async_deactivate_vacation(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL239",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 239,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _set_active_climate_profile(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL262",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 262,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    async def _async_dump_hap_config(service) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL292",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 292,
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": "    def _get_home(hapid: str) -> Optional[AsyncHome]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL202",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": 202,
        "old_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> Awaitable[None]:",
        "new_line": 204,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL212",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": 212,
        "old_code": "    async def async_set_preset_mode(self, preset_mode: str) -> Awaitable[None]:",
        "new_line": 214,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL37",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL41",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "    async def async_step_user(self, user_input=None) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL45",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "    async def async_step_init(self, user_input=None) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL72",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "    async def async_step_link(self, user_input=None) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL94",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": "    async def async_step_import(self, import_info) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL82",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL99",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL106",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def _async_device_changed(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL155",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def _async_device_removed(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL196",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 196,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL25",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def __init__(self, hass, config) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL31",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    async def async_setup(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL41",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    async def async_checkbutton(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL111",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 111,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def async_update(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL144",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def async_create_entity(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL149",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    async def async_create_entity_lazy(self, is_device=True) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL155",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    async def get_state(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL160",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def get_state_finished(self, future) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL170",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def set_all_to_unavailable(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL176",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def update_all(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL181",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 181,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    async def async_connect(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1043712c542ff18a78f2a10fe09cf276736c64bc#diff-af138c1b3f7748225d7310960e54b72d244e13beL213",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 213,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    async def async_reset(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L59",
        "old_file": "homeassistant/components/abode/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/abode/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L191",
        "old_file": "homeassistant/components/alarm_control_panel/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "homeassistant/components/alarm_control_panel/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L131",
        "old_file": "homeassistant/components/alarmdecoder/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/alarmdecoder/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L103",
        "old_file": "homeassistant/components/alarmdotcom/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/alarmdotcom/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L100",
        "old_file": "homeassistant/components/arlo/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "homeassistant/components/arlo/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L57",
        "old_file": "homeassistant/components/blink/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/blink/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L68",
        "old_file": "homeassistant/components/canary/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/canary/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L93",
        "old_file": "homeassistant/components/concord232/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/concord232/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L87",
        "old_file": "homeassistant/components/egardia/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/egardia/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L152",
        "old_file": "homeassistant/components/elkm1/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 152,
        "new_file": "homeassistant/components/elkm1/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L151",
        "old_file": "homeassistant/components/envisalink/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/envisalink/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L97",
        "old_file": "homeassistant/components/homekit_controller/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/homekit_controller/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L85",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L99",
        "old_file": "homeassistant/components/ialarm/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/ialarm/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L136",
        "old_file": "homeassistant/components/ifttt/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/ifttt/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L59",
        "old_file": "homeassistant/components/lupusec/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/lupusec/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L245",
        "old_file": "homeassistant/components/manual/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 245,
        "new_file": "homeassistant/components/manual/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L285",
        "old_file": "homeassistant/components/manual_mqtt/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 285,
        "new_file": "homeassistant/components/manual_mqtt/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L232",
        "old_file": "homeassistant/components/mqtt/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 232,
        "new_file": "homeassistant/components/mqtt/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L71",
        "old_file": "homeassistant/components/ness_alarm/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/ness_alarm/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L87",
        "old_file": "homeassistant/components/nx584/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/nx584/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L93",
        "old_file": "homeassistant/components/point/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/point/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L139",
        "old_file": "homeassistant/components/satel_integra/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 139,
        "new_file": "homeassistant/components/satel_integra/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L102",
        "old_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L89",
        "old_file": "homeassistant/components/spc/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/spc/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L64",
        "old_file": "homeassistant/components/totalconnect/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/totalconnect/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L72",
        "old_file": "homeassistant/components/verisure/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/verisure/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L60",
        "old_file": "homeassistant/components/wink/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/wink/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L91",
        "old_file": "homeassistant/components/yale_smart_alarm/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/yale_smart_alarm/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1fde0d18ed25e90b35ecaa14f589761b31dae85a#diff-aa7f7f517dd884207cad76b3ad7b6496dcf12f52L74",
        "old_file": "tests/testing_config/custom_components/test/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "tests/testing_config/custom_components/test/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f5c01cc30da96b5e03ab07b0811dbb42bffc93e2#diff-9a2e8b2ea92c05981f2c019891afdef7b7d77da9L486",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 486,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f5c01cc30da96b5e03ab07b0811dbb42bffc93e2#diff-9a2e8b2ea92c05981f2c019891afdef7b7d77da9L491",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 491,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c76f768a823f659f78be0cd58b26ffe008736068#diff-dcd3681a002ffeab112715e041071f0a3fb21e37L53",
        "old_file": "homeassistant/components/conversation/__init__.py",
        "old_line": 53,
        "old_code": "async def get_agent(hass: core.HomeAssistant) -> AbstractConversationAgent:",
        "new_line": "",
        "new_file": "homeassistant/components/conversation/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c76f768a823f659f78be0cd58b26ffe008736068#diff-dcd3681a002ffeab112715e041071f0a3fb21e37L179",
        "old_file": "homeassistant/components/conversation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "homeassistant/components/conversation/__init__.py",
        "new_code": "async def _get_agent(hass: core.HomeAssistant) -> AbstractConversationAgent:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c1163283ffb57381a6d8d64cd620c4e256e09e0d#diff-c715e4f712a5bc0d11869587964169ec904e788bL146",
        "old_file": "homeassistant/components/homematicip_cloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 146,
        "new_file": "homeassistant/components/homematicip_cloud/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a37260faa99001b80b88c84ecd28f6470b83dd73#diff-291848a3e89baa7c7c6949ba15248c05ea236a9cL23",
        "old_file": "homeassistant/helpers/icon.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "homeassistant/helpers/icon.py",
        "new_code": "def icon_for_signal_level(signal_level: Optional[int] = None) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/738b3363d912c980ab9f074196ad022eba10483a#diff-e6d980030bf0bc49cd01729d2d5274cc9c3e3111L136",
        "old_file": "homeassistant/components/upcloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/upcloud/__init__.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL96",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": 96,
        "old_code": "    def google_config(self) -> google_config.CloudGoogleConfig:",
        "new_line": "",
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL106",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": 106,
        "old_code": "    async def async_initialize(self, cloud) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL94",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": "    async def get_google_config(self) -> google_config.CloudGoogleConfig:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL107",
        "old_file": "homeassistant/components/cloud/client.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/cloud/client.py",
        "new_code": "    async def logged_in(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL243",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": 243,
        "old_code": "    def cloud_user(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL257",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 257,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    async def get_cloud_user(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b847d55077ffa529e46f19256f6d720c12ff6e5e#diff-34a91d744381951690f741d9692fb3de40829d2bL270",
        "old_file": "homeassistant/components/cloud/prefs.py",
        "old_line": "",
        "old_code": "",
        "new_line": 270,
        "new_file": "homeassistant/components/cloud/prefs.py",
        "new_code": "    async def _load_cloud_user(self) -> Optional[User]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6126d059353e7b2663f72f2d4a73e95eaafeef04#diff-b80f8e15bee097f81ab6b03e98ae08b54ca3f72bL205",
        "old_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 205,
        "new_file": "homeassistant/components/nsw_rural_fire_service_feed/geo_location.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9771826ed6d7351f0410703e3edc128229418ec9#diff-49200887363dd8be7ffabfcfc516b18394bd1bfaL148",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def capability_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/76aaf8b560027dbacef6aaf205126076a6e747ff#diff-d09d515f4afa496a8066dbdda6fff483e3a5822fL114",
        "old_file": "homeassistant/components/wled/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/wled/light.py",
        "new_code": "    def white_value(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/02d9ed5e36257490726a75c8440b4a2b61bc7fe4#diff-d0396b2be2a3ac7fcfefc94fb2f29ce912f106daL18",
        "old_file": "tests/components/fan/common.py",
        "old_line": 18,
        "old_code": "async def async_turn_on(hass, entity_id: str = None, speed: str = None) -> None:",
        "new_line": "",
        "new_file": "tests/components/fan/common.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fe5f30ba7887db0c2a9a53b3b28591dfcae75a79#diff-0cc983480f3ced86ecb9f934ffa55877ff034943L65",
        "old_file": "homeassistant/components/repetier/sensor.py",
        "old_line": 65,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/repetier/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5ff24ecf77733c3bfa12c0b83629ae512762c0d8#diff-ace149d73c198a71e47accd434ebb2cbda02a6c1L93",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 93,
        "old_code": "    def _internal_alarm_zone_state(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5ff24ecf77733c3bfa12c0b83629ae512762c0d8#diff-ace149d73c198a71e47accd434ebb2cbda02a6c1L97",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 97,
        "old_code": "    def _external_alarm_zone_state(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5ff24ecf77733c3bfa12c0b83629ae512762c0d8#diff-ace149d73c198a71e47accd434ebb2cbda02a6c1L152",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 152,
        "old_code": "def _get_zone_alarm_state(security_zone) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c6343c9e88ce55b719b544cb647a488849086be3#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L39",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def __init__(self, name, ccb: ComfoConnectBridge) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c6343c9e88ce55b719b544cb647a488849086be3#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L60",
        "old_file": "homeassistant/components/comfoconnect/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/comfoconnect/fan.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c6343c9e88ce55b719b544cb647a488849086be3#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L101",
        "old_file": "homeassistant/components/comfoconnect/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/comfoconnect/sensor.py",
        "new_code": "    def __init__(self, name, ccb: ComfoConnectBridge, sensor_type) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c6343c9e88ce55b719b544cb647a488849086be3#diff-54ab52732aa0dd7bf742e2afe3a6ba0bc02fbf95L132",
        "old_file": "homeassistant/components/comfoconnect/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/comfoconnect/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L45",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def __init__(self, hass, config_entry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L80",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    async def async_update_device_registry(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L93",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    async def async_setup(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L127",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    async def async_new_address(hass, entry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L140",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def signal_reachable(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L145",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def async_connection_status_callback(self, available) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L151",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def signal_options_update(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L156",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    async def async_options_updated(hass, entry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L164",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 164,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def async_signal_new_device(self, device_type) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L169",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 169,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def async_add_device_callback(self, device_type, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/57a3f7d5c8ad3dc71b6c29767bd625096767e7d5#diff-f9ffbc1cfffe1526a163361787e07219ca9197d3L178",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 178,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def shutdown(self, event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c804f8f9613dcb654019d76a0a42615508f1a979#diff-20ee15c2c78c7053fb80a2014b697ae41c039c76L122",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "def icon_for_icloud_device(icloud_device: IcloudDevice) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/27244e29c40bfa2093028199e7a33af4a7068053#diff-350f7fb6a6ae1e9119a6737d123cade633a43a90L208",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 208,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/27244e29c40bfa2093028199e7a33af4a7068053#diff-350f7fb6a6ae1e9119a6737d123cade633a43a90L54",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/loader.py",
        "new_code": "def manifest_from_legacy_module(domain: str, module: ModuleType) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/27244e29c40bfa2093028199e7a33af4a7068053#diff-350f7fb6a6ae1e9119a6737d123cade633a43a90L218",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 218,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def dependencies(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/27244e29c40bfa2093028199e7a33af4a7068053#diff-350f7fb6a6ae1e9119a6737d123cade633a43a90L223",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 223,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def after_dependencies(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/27244e29c40bfa2093028199e7a33af4a7068053#diff-350f7fb6a6ae1e9119a6737d123cade633a43a90L228",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def requirements(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/27244e29c40bfa2093028199e7a33af4a7068053#diff-350f7fb6a6ae1e9119a6737d123cade633a43a90L233",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 233,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def config_flow(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/899f6cf1a34d3ba274460b2612948cf5a8df7828#diff-9d9d59ec64d51ca9f908fc232b10997fa0e35916L160",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 160,
        "old_code": "    def update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/899f6cf1a34d3ba274460b2612948cf5a8df7828#diff-9d9d59ec64d51ca9f908fc232b10997fa0e35916L160",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def _get_data(self, key: str, func: Callable[[None], Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/899f6cf1a34d3ba274460b2612948cf5a8df7828#diff-9d9d59ec64d51ca9f908fc232b10997fa0e35916L515",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": 515,
        "old_code": "    async def _async_maybe_update(self, url: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/66d2f5f61de6a9c2cfed63efe686b3eaeef74fe9#diff-cf03998769c7b176919e405f701f6c6c6622039aL378",
        "old_file": "homeassistant/components/withings/sensor.py",
        "old_line": 378,
        "old_code": "    async def async_update_sleep_state(self, data: SleepGetResponse) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/withings/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L56",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L61",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L81",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L86",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def battery_level(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L91",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def source_type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L96",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L101",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/820780996a30768c33d94d0218892ac27d222f10#diff-d1a12ac128415865706618458bfdc57992122c37L106",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": "    def device_info(self) -> Dict[str, any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfafa77016cc260d53702c7d3d9323b183c29e88#diff-98a4777753f0d326bcbe95056399aa989049af36L484",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": 484,
        "old_code": "    def target_temperature_low(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfafa77016cc260d53702c7d3d9323b183c29e88#diff-98a4777753f0d326bcbe95056399aa989049af36L489",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": 489,
        "old_code": "    def target_temperature_high(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfafa77016cc260d53702c7d3d9323b183c29e88#diff-98a4777753f0d326bcbe95056399aa989049af36L195",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 195,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def _mode(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfafa77016cc260d53702c7d3d9323b183c29e88#diff-98a4777753f0d326bcbe95056399aa989049af36L199",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def _current_mode_setpoints(self) -> Tuple:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfafa77016cc260d53702c7d3d9323b183c29e88#diff-98a4777753f0d326bcbe95056399aa989049af36L491",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 491,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfafa77016cc260d53702c7d3d9323b183c29e88#diff-98a4777753f0d326bcbe95056399aa989049af36L496",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 496,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/445fd15f769f966cb7df0d0ed0c4cfbe59a7852e#diff-46bed21d21dd1f03b8fa92dda393d71404f2709dL19",
        "old_file": "homeassistant/util/async_.py",
        "old_line": 19,
        "old_code": "    def asyncio_run(main: Awaitable[_T], *, debug: bool = False) -> _T:",
        "new_line": "",
        "new_file": "homeassistant/util/async_.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9e51a18845bde3baa873dcd37c3e1b0a8476473e#diff-28aed317cfe7fddccc4fc83f7e749ab155f5f63aL11",
        "old_file": "script/hassfest/dependencies.py",
        "old_line": 11,
        "old_code": "def grep_dir(path: pathlib.Path, glob_pattern: str, search_pattern: str) -> Set[str]:",
        "new_line": "",
        "new_file": "script/hassfest/dependencies.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/575eb48febe9a5eeff424faa82209d96bce15eef#diff-1ee78b7171842379e35028f4e87677daa34e128fL257",
        "old_file": "homeassistant/components/yeelight/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 257,
        "new_file": "homeassistant/components/yeelight/__init__.py",
        "new_code": "    def is_color_flow_enabled(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/58b5833d64cd66401d313206595ce582125f8f9f#diff-82496aa42cef1a0afca243d386774dbcae0beee6L744",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 744,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/58b5833d64cd66401d313206595ce582125f8f9f#diff-82496aa42cef1a0afca243d386774dbcae0beee6L759",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 759,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def _abort_if_unique_id_configured(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/58b5833d64cd66401d313206595ce582125f8f9f#diff-82496aa42cef1a0afca243d386774dbcae0beee6L795",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 795,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def _async_current_ids(self) -> Set[Optional[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0439d6964c7adf56ae32e019de08d64541631b04#diff-a51a5e688ab982b94c206398c89ee0624a0560bfL238",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def documentation(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0439d6964c7adf56ae32e019de08d64541631b04#diff-a51a5e688ab982b94c206398c89ee0624a0560bfL95",
        "old_file": "homeassistant/setup.py",
        "old_line": 95,
        "old_code": "    def log_error(msg: str, link: bool = True) -> None:",
        "new_line": 95,
        "new_file": "homeassistant/setup.py",
        "new_code": "    def log_error(msg: str, link: Optional[str] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/115aa2e49c97afeb9f77e7271fdd104a2261a482#diff-6d2b3f31fa4db3f616b4359139a969d78b5d546fL273",
        "old_file": "homeassistant/components/zwave/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/zwave/cover.py",
        "new_code": "    def current_cover_tilt_position(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9c7caaa142962a11eb06ff0fc7110c22e0bc5ff3#diff-3cd83063418d8b0afb44007ae87bdf9f678c2412L818",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 818,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_step_ignore(self, user_input: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9c7caaa142962a11eb06ff0fc7110c22e0bc5ff3#diff-3cd83063418d8b0afb44007ae87bdf9f678c2412L799",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 799,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def _async_current_ids(self, include_ignore: bool = True) -> Set[Optional[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d06cec0e0b8c31269e0602b97548fef0cb4f96a#diff-f4c2dc21e5095ca5d8a0573bc2733510278cd8bcL486",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": 486,
        "old_code": "    def target_temperature_low(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d06cec0e0b8c31269e0602b97548fef0cb4f96a#diff-f4c2dc21e5095ca5d8a0573bc2733510278cd8bcL491",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": 491,
        "old_code": "    def target_temperature_high(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d06cec0e0b8c31269e0602b97548fef0cb4f96a#diff-f4c2dc21e5095ca5d8a0573bc2733510278cd8bcL195",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 195,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def _mode(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d06cec0e0b8c31269e0602b97548fef0cb4f96a#diff-f4c2dc21e5095ca5d8a0573bc2733510278cd8bcL199",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def _current_mode_setpoints(self) -> Tuple:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d06cec0e0b8c31269e0602b97548fef0cb4f96a#diff-f4c2dc21e5095ca5d8a0573bc2733510278cd8bcL491",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 491,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d06cec0e0b8c31269e0602b97548fef0cb4f96a#diff-f4c2dc21e5095ca5d8a0573bc2733510278cd8bcL496",
        "old_file": "homeassistant/components/zwave/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 496,
        "new_file": "homeassistant/components/zwave/climate.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9e5de1a106b934100c98aac1764f8a7a4b713fd5#diff-2b66e9d3cf020fe2500a561a3e48b78a141e43d0L121",
        "old_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "old_line": 121,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/simplisafe/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/52818bdb891387e4b9eaa30ec0540e532c7cb78e#diff-f9f86acb1035ff2c4c05aa261e06ec6b1a14c0f8L22",
        "old_file": "script/hassfest/dependencies.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "script/hassfest/dependencies.py",
        "new_code": "    def collect(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/52818bdb891387e4b9eaa30ec0540e532c7cb78e#diff-f9f86acb1035ff2c4c05aa261e06ec6b1a14c0f8L141",
        "old_file": "script/hassfest/dependencies.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "script/hassfest/dependencies.py",
        "new_code": "def calc_allowed_references(integration: Integration) -> Set[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L210",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 210,
        "old_code": "    def set_humidity(self, humidity: int) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L569",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 569,
        "old_code": "    def is_aux_heat(self) -> Optional[bool]:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L576",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 576,
        "old_code": "    def turn_aux_heat_on(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L580",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 580,
        "old_code": "    def turn_aux_heat_off(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L585",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 585,
        "old_code": "    def swing_mode(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L593",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 593,
        "old_code": "    def swing_modes(self) -> Optional[List[str]]:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L600",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 600,
        "old_code": "    def set_swing_mode(self, swing_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L203",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 203,
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04b5d6c6976333d88877a2760874febc2052041d#diff-f20308af736d678be4a0f6aaa47f7d06b81cc727L148",
        "old_file": "homeassistant/components/tado/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/components/tado/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L51",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "def format_mac(mac: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L263",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 263,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def async_remove_device(self, device_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L301",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 301,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def async_schedule_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L306",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 306,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def _data_to_save(self) -> Dict[str, List[Dict[str, Any]]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L330",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 330,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def async_clear_config_entry(self, config_entry_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L48",
        "old_file": "homeassistant/helpers/discovery.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/helpers/discovery.py",
        "new_code": "    def discovery_event_listener(event: core.Event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L33",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "async def async_update_entity(hass: HomeAssistant, entity_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L162",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 162,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    async def async_unload_entry(self, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L269",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 269,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    async def _async_reset(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/660468079310ec7432e890436b314526fdd4ab7b#diff-9176a170b028b6a3f5fc5958779b20263befe109L287",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 287,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    async def async_remove_entity(self, entity_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0fc92928a4544a3f4d3021f7a0923e7b950c4e84#diff-7701b8d5412bf9e80f335d153f923d799e17ea38L78",
        "old_file": "homeassistant/components/modbus/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/modbus/binary_sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0fc92928a4544a3f4d3021f7a0923e7b950c4e84#diff-7701b8d5412bf9e80f335d153f923d799e17ea38L211",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 211,
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b41480ae466a99c977e138d335e552107e9865ac#diff-516ce47782817309f71b314420cb8ad02a92bf5fL852",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 852,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    async def async_step_unignore(self, user_input: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fb3bb8220b99ad0b3a7ad23accf7c7a31478c52f#diff-ab86b9812b3e28b38e81516ef7762083c5869200L216",
        "old_file": "homeassistant/components/zha/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 216,
        "new_file": "homeassistant/components/zha/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8e3dfbd5c98fe9d9644bc82734cab4177e236578#diff-d1c8facefcc72f0cf4e754bb39b7047512411200L112",
        "old_file": "homeassistant/components/zha/core/channels/homeautomation.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/components/zha/core/channels/homeautomation.py",
        "new_code": "    def divisor(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8e3dfbd5c98fe9d9644bc82734cab4177e236578#diff-d1c8facefcc72f0cf4e754bb39b7047512411200L117",
        "old_file": "homeassistant/components/zha/core/channels/homeautomation.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/zha/core/channels/homeautomation.py",
        "new_code": "    def multiplier(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8e3dfbd5c98fe9d9644bc82734cab4177e236578#diff-d1c8facefcc72f0cf4e754bb39b7047512411200L220",
        "old_file": "homeassistant/components/zha/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 220,
        "new_file": "homeassistant/components/zha/sensor.py",
        "new_code": "    def formatter(self, value) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83768be8147139b43b5f43665f17a6f1ed301a94#diff-734d6f25426c82805b2261cd73d4320026bb5984L176",
        "old_file": "homeassistant/components/zha/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "homeassistant/components/zha/binary_sensor.py",
        "new_code": "    async def get_device_class(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/868eb3c735c2136cf81a5f18a19cd08a7d0522a0#diff-f116e00cff76a992b37d47d4fb28911b3d9a31d1L75",
        "old_file": "homeassistant/helpers/device_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/helpers/device_registry.py",
        "new_code": "    def __init__(self, hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/868eb3c735c2136cf81a5f18a19cd08a7d0522a0#diff-f116e00cff76a992b37d47d4fb28911b3d9a31d1L14",
        "old_file": "homeassistant/helpers/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 14,
        "new_file": "homeassistant/helpers/logging.py",
        "new_code": "    def __init__(self, fmt: Any, args: Any, kwargs: Mapping[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/868eb3c735c2136cf81a5f18a19cd08a7d0522a0#diff-f116e00cff76a992b37d47d4fb28911b3d9a31d1L20",
        "old_file": "homeassistant/helpers/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "homeassistant/helpers/logging.py",
        "new_code": "    def __str__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/868eb3c735c2136cf81a5f18a19cd08a7d0522a0#diff-f116e00cff76a992b37d47d4fb28911b3d9a31d1L34",
        "old_file": "homeassistant/helpers/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/helpers/logging.py",
        "new_code": "    def log(self, level: int, msg: Any, *args: Any, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3aa2ae170010cb5d9bcfdbed4f68a0a4072a99ce#diff-7bd95138ddff4e6d436488f920e2ecc7611b3298L150",
        "old_file": "homeassistant/components/tesla/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/components/tesla/__init__.py",
        "new_code": "async def async_unload_entry(hass, config_entry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3aa2ae170010cb5d9bcfdbed4f68a0a4072a99ce#diff-7bd95138ddff4e6d436488f920e2ecc7611b3298L53",
        "old_file": "homeassistant/components/tesla/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/tesla/device_tracker.py",
        "new_code": "    def latitude(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3aa2ae170010cb5d9bcfdbed4f68a0a4072a99ce#diff-7bd95138ddff4e6d436488f920e2ecc7611b3298L58",
        "old_file": "homeassistant/components/tesla/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/tesla/device_tracker.py",
        "new_code": "    def longitude(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/50a87bbe18b9128a3e8ed861d9e2e42e9248bdea#diff-1e0a59922e5f1c488dd8db9f4f17e96d1484c2a8L221",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 221,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "    def logout(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/658ec309aa65241b564c3983f61b339151d56b45#diff-5dc90a78b8a32d1edecf9845f88fbeb5f8403129L59",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    def current_cover_position(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/658ec309aa65241b564c3983f61b339151d56b45#diff-5dc90a78b8a32d1edecf9845f88fbeb5f8403129L71",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    def is_closed(self) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/658ec309aa65241b564c3983f61b339151d56b45#diff-5dc90a78b8a32d1edecf9845f88fbeb5f8403129L77",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    async def async_open_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/658ec309aa65241b564c3983f61b339151d56b45#diff-5dc90a78b8a32d1edecf9845f88fbeb5f8403129L81",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    async def async_close_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/658ec309aa65241b564c3983f61b339151d56b45#diff-5dc90a78b8a32d1edecf9845f88fbeb5f8403129L85",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    async def async_stop_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/36585558a5b37b21924c749ae1c8470de7c1c04c#diff-dcfd8c4b8abeeffcd7f80c532d12a763834cc1e3L101",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fccb13b76257cc894fcbd219cdba0885f64579d3#diff-7e0b6066a38fc0511e790d27f55269a252979caeL72",
        "old_file": "homeassistant/components/homekit_controller/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "homeassistant/components/homekit_controller/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d0c9a42b81db24f447c62f4bb5ac59668990b688#diff-11a4681c2834ca7264b4cce05398bb5a7d7a08fdL32",
        "old_file": "homeassistant/components/workday/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/workday/binary_sensor.py",
        "new_code": "def valid_country(value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bb14a083f0a6004737df15162d9e922eef545e5b#diff-15577f3869ffa949184055b17227d847ca331e7dL465",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 465,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def cleanup_restored_states(event: Event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bb14a083f0a6004737df15162d9e922eef545e5b#diff-15577f3869ffa949184055b17227d847ca331e7dL483",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 483,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def _write_unavailable_states(_: Event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a3061bda60c9136859224d55cd194d61a0b0a37c#diff-3d061e8d473cc2f48cc0cc33cb9432f4cce050b9L232",
        "old_file": "homeassistant/components/zha/core/registries.py",
        "old_line": 232,
        "old_code": "    def _strict_matched(self, zha_device, chnls: dict, rule: MatchRule) -> bool:",
        "new_line": 274,
        "new_file": "homeassistant/components/zha/core/registries.py",
        "new_code": "    def _matched(zha_device, chnls: dict, rule: MatchRule) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L249",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": 249,
        "old_code": "    def _async_schedule_save(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L254",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": 254,
        "old_code": "    def _data_to_save(self) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L127",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    async def _process_create_data(self, data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L139",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 139,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    def _get_suggested_id(self, info: dict) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L143",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 143,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    async def _update_data(self, data: dict, update_data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L40",
        "old_file": "homeassistant/components/websocket_api/connection.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/websocket_api/connection.py",
        "new_code": "    def send_result(self, msg_id: int, result: Optional[Any] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L52",
        "old_file": "homeassistant/components/websocket_api/connection.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/websocket_api/connection.py",
        "new_code": "    def send_error(self, msg_id: int, code: str, message: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9aba30a6e8212c28261ec24489001bd14c345de#diff-cda9b96244e853416be81b9cdb5cdb3ff2d56d38L476",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 476,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    async def async_remove(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3b14d9f3754ae3e31b1a3698a06b58b7498502d2#diff-5ab81094a751ccd05fbdc93d9de737adbd8b0987L141",
        "old_file": "homeassistant/components/elgato/config_flow.py",
        "old_line": 141,
        "old_code": "    async def _device_already_configured(self, info: Info) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/elgato/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6c89b6c5a2229a1000cd539a6c025380541e17f7#diff-79abaa9f45832317b826e119a6ca30e4b99422bbL782",
        "old_file": "homeassistant/components/zha/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 782,
        "new_file": "homeassistant/components/zha/api.py",
        "new_code": "def is_cluster_binding(value: Any) -> ClusterBinding:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/95cd0a2c686805ce357489a23135ec7930ebb5e5#diff-4ad2a5607dbbb1de7c003550415c928244cc4a7dL149",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    async def async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/95cd0a2c686805ce357489a23135ec7930ebb5e5#diff-4ad2a5607dbbb1de7c003550415c928244cc4a7dL156",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    async def _entity_registry_updated(self, event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/95cd0a2c686805ce357489a23135ec7930ebb5e5#diff-4ad2a5607dbbb1de7c003550415c928244cc4a7dL226",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 226,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "async def filter_yaml_data(hass: HomeAssistantType, persons: List[dict]) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0971c681af87a861d7eaee7c06d1a62545629fe7#diff-96179eadc69c58b923e280300a41c2fb5573b9e6L257",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 257,
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0971c681af87a861d7eaee7c06d1a62545629fe7#diff-96179eadc69c58b923e280300a41c2fb5573b9e6L144",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0971c681af87a861d7eaee7c06d1a62545629fe7#diff-96179eadc69c58b923e280300a41c2fb5573b9e6L149",
        "old_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/components/homematicip_cloud/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6740249befc07f7dc683ad634e05b1dc94f49093#diff-8e552064f653ca2b51563ddffa3ec2e3334ed92fL65",
        "old_file": "homeassistant/components/input_boolean/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/input_boolean/__init__.py",
        "new_code": "    async def _process_create_data(self, data: typing.Dict) -> typing.Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6740249befc07f7dc683ad634e05b1dc94f49093#diff-8e552064f653ca2b51563ddffa3ec2e3334ed92fL70",
        "old_file": "homeassistant/components/input_boolean/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/input_boolean/__init__.py",
        "new_code": "    def _get_suggested_id(self, info: typing.Dict) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6740249befc07f7dc683ad634e05b1dc94f49093#diff-8e552064f653ca2b51563ddffa3ec2e3334ed92fL74",
        "old_file": "homeassistant/components/input_boolean/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/input_boolean/__init__.py",
        "new_code": "    async def _update_data(self, data: dict, update_data: typing.Dict) -> typing.Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b27e05fc8d02e992a17050baf8b8684418b71719#diff-6f362562101df8b18bcee75b2787f234d0235f76L175",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def capability_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e18426051bcf1a9f73e36e1fb86694c38fcc44e7#diff-e8a3a0b1487e603a0d063909a48d622bab8262c8L243",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def quality_scale(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9aa02e35a74f7dee47dd2e8557963e9b644c7e81#diff-92610652dd60d81ce183bde724b15319dc86b5ceL61",
        "old_file": "homeassistant/components/fan/__init__.py",
        "old_line": 61,
        "old_code": "def is_on(hass, entity_id: Optional[str] = None) -> bool:",
        "new_line": 57,
        "new_file": "homeassistant/components/fan/__init__.py",
        "new_code": "def is_on(hass, entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d25aa1f1830f1d3fad42dde3f9bdfae2ad98b7f2#diff-f026ebfcc6f93187cb48d0b6f117c3aa3d00d0fcL22",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "def validate_auth(config: ConfigType) -> ConfigType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3348f4f6d186238881dfadb0082f6b63175f919c#diff-636b49943331022f157a44ed9c8d22e569f05bc4L187",
        "old_file": "homeassistant/components/group/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 187,
        "new_file": "homeassistant/components/group/__init__.py",
        "new_code": "def groups_with_entity(hass: HomeAssistantType, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3348f4f6d186238881dfadb0082f6b63175f919c#diff-636b49943331022f157a44ed9c8d22e569f05bc4L126",
        "old_file": "homeassistant/components/group/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 126,
        "new_file": "homeassistant/components/group/__init__.py",
        "new_code": "def expand_entity_ids(hass: HomeAssistantType, entity_ids: Iterable[Any]) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3348f4f6d186238881dfadb0082f6b63175f919c#diff-636b49943331022f157a44ed9c8d22e569f05bc4L113",
        "old_file": "homeassistant/components/homeassistant/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/homeassistant/scene.py",
        "new_code": "def scenes_with_entity(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3348f4f6d186238881dfadb0082f6b63175f919c#diff-636b49943331022f157a44ed9c8d22e569f05bc4L130",
        "old_file": "homeassistant/components/homeassistant/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/homeassistant/scene.py",
        "new_code": "def entities_in_scene(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e793ed9ab0b8857ba0aa88a7e7bfb8accd7761b2#diff-4defbb8212bd19fcbc64f200877f23ce179468d0L133",
        "old_file": "homeassistant/components/netatmo/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/netatmo/camera.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/519c1fa2dad3deef8793d35dcc4da1c4554ab049#diff-25c061f86e45fd9b78b43b275e91644640b75d90L90",
        "old_file": "homeassistant/components/icloud/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/icloud/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L228",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": "    def do_update_retry(self, update_state: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L256",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 256,
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": "    def get_light_features_retry(self) -> LightFeatures:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L295",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 295,
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": "    def get_light_state_retry(self, light_features: LightFeatures) -> LightState:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L82",
        "old_file": "tests/components/tplink/test_light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "tests/components/tplink/test_light.py",
        "new_code": "    def set_light_state(state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L46",
        "old_file": "tests/components/tplink/test_light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "tests/components/tplink/test_light.py",
        "new_code": "def light_mock_data_fixture() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L155",
        "old_file": "tests/components/tplink/test_light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "tests/components/tplink/test_light.py",
        "new_code": "async def update_entity(hass: HomeAssistant, entity_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b0dc0aca204deff542e2d396076ee6ec7113be#diff-0c9b3d0a16ff0c679d4f67db4d5172525b056b23L163",
        "old_file": "tests/components/tplink/test_light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "tests/components/tplink/test_light.py",
        "new_code": "async def test_light(hass: HomeAssistant, light_mock_data: LightMockData) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/96c11bc6d7ca21b2eb6372725ab41b2aaa95a0ed#diff-52e48e9f34d083d628137aeb4511ceae51534357L69",
        "old_file": "homeassistant/components/spc/binary_sensor.py",
        "old_line": 69,
        "old_code": "    def hidden(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/spc/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ce13fb8d73fe90ebb1a847af5543db1e78193953#diff-394dcadee5f9ac563578a2674b65c20cd6dfc62aL470",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": 470,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ce13fb8d73fe90ebb1a847af5543db1e78193953#diff-394dcadee5f9ac563578a2674b65c20cd6dfc62aL475",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 475,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ce13fb8d73fe90ebb1a847af5543db1e78193953#diff-394dcadee5f9ac563578a2674b65c20cd6dfc62aL498",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 498,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7143ed7ceb3011ada6f8c8b850dc753f6ca74df5#diff-0a05888743b3bd62ff4ddf84d8c24db87b4ddda4L429",
        "old_file": "homeassistant/components/fibaro/__init__.py",
        "old_line": 429,
        "old_code": "    def hidden(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/fibaro/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f50714d7e99abe771a1cb634c01d5cb7950f861b#diff-39cd75cecfcd90215ba65c18cd6bf5fcd5a372b9L26",
        "old_file": "script/scaffold/templates/config_flow/integration/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "script/scaffold/templates/config_flow/integration/config_flow.py",
        "new_code": "    async def authenticate(self, username, password) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5fdc60e067318b8fb605eaeb9858f4e1cc21237b#diff-a71b2d83dcef2e94914f0f7325ff41c9a82440e4L81",
        "old_file": "homeassistant/__main__.py",
        "old_line": 81,
        "old_code": "async def ensure_config_file(hass: \"core.HomeAssistant\", config_dir: str) -> str:",
        "new_line": "",
        "new_file": "homeassistant/__main__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5fdc60e067318b8fb605eaeb9858f4e1cc21237b#diff-a71b2d83dcef2e94914f0f7325ff41c9a82440e4L48",
        "old_file": "homeassistant/__main__.py",
        "old_line": 48,
        "old_code": "def ensure_config_path(config_dir: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/__main__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9f62b5892936da9f826d7b697535e8c96a37d2da#diff-b70497a64b2a170fb679cd3e1d7f935ec0d3442fL273",
        "old_file": "homeassistant/components/zwave/cover.py",
        "old_line": 273,
        "old_code": "    def current_cover_tilt_position(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/zwave/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ac771addc16c85d7b6329924eda1832d4e945449#diff-135579e0671869377441110ff1b3ee1c9e27ee70L57",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ac771addc16c85d7b6329924eda1832d4e945449#diff-135579e0671869377441110ff1b3ee1c9e27ee70L70",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ac771addc16c85d7b6329924eda1832d4e945449#diff-135579e0671869377441110ff1b3ee1c9e27ee70L79",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ac771addc16c85d7b6329924eda1832d4e945449#diff-135579e0671869377441110ff1b3ee1c9e27ee70L23",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "def validate_auth(config: ConfigType) -> ConfigType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1e82813c3b20141d9c1df81a2bafd18d2899de52#diff-24e41ab9e63c42dcfe7e78e9c43e5c3e6c5267c5L205",
        "old_file": "homeassistant/components/ring/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 205,
        "new_file": "homeassistant/components/ring/__init__.py",
        "new_code": "    async def async_refresh_all(self, _now: Optional[int] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1c70435df69d861b5fc6694f6ab0701e676f7b10#diff-b70497a64b2a170fb679cd3e1d7f935ec0d3442fL273",
        "old_file": "homeassistant/components/zwave/cover.py",
        "old_line": 273,
        "old_code": "    def current_cover_tilt_position(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/zwave/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3fd14ca3cf846a55bc171ca9b81f400790f81f63#diff-24e41ab9e63c42dcfe7e78e9c43e5c3e6c5267c5L205",
        "old_file": "homeassistant/components/ring/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 205,
        "new_file": "homeassistant/components/ring/__init__.py",
        "new_code": "    async def async_refresh_all(self, _now: Optional[int] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/31996120dd19541499d868f8f97c1ecb0a7dd8aa#diff-1640920741bde244c0f06391360cdf101724c7feL238",
        "old_file": "homeassistant/components/zha/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/components/zha/sensor.py",
        "new_code": "    def formatter(self, value) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8630a076a7a9a61796921ca6c04933c1981f27ff#diff-4440d054361646fbff188076dbfcca79c1f3afd9L30",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": 30,
        "old_code": "def update_schema_defaults(input_dict: Dict[str, Any]) -> vol.Schema:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8630a076a7a9a61796921ca6c04933c1981f27ff#diff-4440d054361646fbff188076dbfcca79c1f3afd9L31",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "def _config_flow_schema(input_dict: Dict[str, Any]) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8630a076a7a9a61796921ca6c04933c1981f27ff#diff-4440d054361646fbff188076dbfcca79c1f3afd9L141",
        "old_file": "tests/components/vizio/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "tests/components/vizio/test_config_flow.py",
        "new_code": "async def test_options_flow(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8630a076a7a9a61796921ca6c04933c1981f27ff#diff-4440d054361646fbff188076dbfcca79c1f3afd9L88",
        "old_file": "tests/components/vizio/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "tests/components/vizio/test_config_flow.py",
        "new_code": "async def test_user_flow_minimum_fields(hass: HomeAssistantType, vizio_connect) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bfa8cb760f41a820672371f261a9191dcb04589a#diff-82430746e4d307bfc20a4a1c5d48d0c417e11c8bL133",
        "old_file": "homeassistant/components/geniushub/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/geniushub/__init__.py",
        "new_code": "    async def set_zone_mode(call) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a037c1d7884e9913d1fbd47f13356ba70407fa60#diff-93f7eff9029a83464f7a757eb2fe2c445f51f943L137",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 137,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    async def async_tcs_svc_request(self, service: dict, data: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a037c1d7884e9913d1fbd47f13356ba70407fa60#diff-93f7eff9029a83464f7a757eb2fe2c445f51f943L192",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    async def async_zone_svc_request(self, service: dict, data: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a037c1d7884e9913d1fbd47f13356ba70407fa60#diff-93f7eff9029a83464f7a757eb2fe2c445f51f943L122",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 122,
        "old_code": "    async def _set_tcs_mode(self, op_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a037c1d7884e9913d1fbd47f13356ba70407fa60#diff-93f7eff9029a83464f7a757eb2fe2c445f51f943L159",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 159,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    async def _set_tcs_mode(self, mode: str, until: Optional[dt] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ecef0f6e937fa9b6d6cc5494042a275941644c62#diff-a27653716ba0b3d7ecd9a1b9208bb2adb8149cf4L122",
        "old_file": "homeassistant/components/ring/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/ring/sensor.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L137",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 137,
        "old_code": "    async def async_tcs_svc_request(self, service: dict, data: dict) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L159",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 159,
        "old_code": "    async def _set_tcs_mode(self, mode: str, until: Optional[dt] = None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L131",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 131,
        "old_code": "    def __init__(self, evo_broker, evo_device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L164",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 164,
        "old_code": "    def hvac_modes(self) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L245",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 245,
        "old_code": "    def preset_mode(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L285",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 285,
        "old_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L311",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 311,
        "old_code": "    async def async_set_preset_mode(self, preset_mode: Optional[str]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L333",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 333,
        "old_code": "    async def async_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L325",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 325,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    async def async_tcs_svc_request(self, service: dict, data: dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a40a5a754b75741c9c449fd2cdabdf1a2ca7edca#diff-2458e9900c9f975e23a36e2873360930e43272e0L347",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 347,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    async def _set_tcs_mode(self, mode: str, until: Optional[dt] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/662c12715e42f56cc918c19ed250cae01e12e1f0#diff-d81d7e02ed1957480582a1b82eaa7303bc82a6a8L297",
        "old_file": "homeassistant/components/openuv/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 297,
        "new_file": "homeassistant/components/openuv/__init__.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/db76b91ffa90fb6d90a48bf09f1288eadaf44fd2#diff-c17a144a2f662ae035eb2f011adb217cf5166417L155",
        "old_file": "homeassistant/components/wled/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/components/wled/__init__.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0fba9e44edd76818afb9691ca9732fd59546a334#diff-d02a006debf287d3381a75a783bd84afd9f46decL26",
        "old_file": "homeassistant/components/zone/config_flow.py",
        "old_line": 26,
        "old_code": "def configured_zones(hass: HomeAssistantType) -> Set[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/zone/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0fba9e44edd76818afb9691ca9732fd59546a334#diff-d02a006debf287d3381a75a783bd84afd9f46decL287",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 287,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    def async_write_ha_state(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0fba9e44edd76818afb9691ca9732fd59546a334#diff-d02a006debf287d3381a75a783bd84afd9f46decL95",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    def get_entity(self, entity_id: str) -> Optional[entity.Entity]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0fba9e44edd76818afb9691ca9732fd59546a334#diff-d02a006debf287d3381a75a783bd84afd9f46decL251",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 251,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    async def async_prepare_reload(self, *, skip_reset: bool = False) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/192b6566353b1c81d73a90b446d7d821a6ad5929#diff-ba6d3f2bb1e364fb766637e9ed3b99ea9d7e81deL53",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": 53,
        "old_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/192b6566353b1c81d73a90b446d7d821a6ad5929#diff-ba6d3f2bb1e364fb766637e9ed3b99ea9d7e81deL53",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/192b6566353b1c81d73a90b446d7d821a6ad5929#diff-ba6d3f2bb1e364fb766637e9ed3b99ea9d7e81deL33",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": 33,
        "old_code": "def _config_flow_schema(input_dict: Dict[str, Any]) -> vol.Schema:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/192b6566353b1c81d73a90b446d7d821a6ad5929#diff-ba6d3f2bb1e364fb766637e9ed3b99ea9d7e81deL33",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "def _get_config_flow_schema(input_dict: Dict[str, Any] = None) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/192b6566353b1c81d73a90b446d7d821a6ad5929#diff-ba6d3f2bb1e364fb766637e9ed3b99ea9d7e81deL90",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "    def async_get_options_flow(config_entry: ConfigEntry) -> VizioOptionsConfigFlow:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b743f9b8f61228bdd1e4d0bde6c28fa89458f5de#diff-4cb028591727033149f1a592617ac317f25b6feeL820",
        "old_file": "homeassistant/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 820,
        "new_file": "homeassistant/config_entries.py",
        "new_code": "    def _abort_if_unique_id_configured(self, updates: Dict[Any, Any] = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/47b708974d060bfe098f420d991b7acbb136c414#diff-05b07aa3faf302bbab4cd1f22362eba7cc936698L166",
        "old_file": "homeassistant/components/adguard/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/adguard/__init__.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6ff572d1ddc6faae4c48aa2fb66ce8a3e6e2f117#diff-4a4390ab0739f1bc87b09c8959193847c2bbc0deL13",
        "old_file": "tests/components/buienradar/test_camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 13,
        "new_file": "tests/components/buienradar/test_camera.py",
        "new_code": "def radar_map_url(dim: int = 512, country_code: str = \"NL\") -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e4b9adc3d0239a20a17033d0e89360c8021e67a#diff-efd82fceb900ead129515af7eee421f9fd93a8b9L41",
        "old_file": "homeassistant/components/spotify/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/spotify/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e4b9adc3d0239a20a17033d0e89360c8021e67a#diff-efd82fceb900ead129515af7eee421f9fd93a8b9L62",
        "old_file": "homeassistant/components/spotify/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/spotify/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e4b9adc3d0239a20a17033d0e89360c8021e67a#diff-efd82fceb900ead129515af7eee421f9fd93a8b9L87",
        "old_file": "homeassistant/components/spotify/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/spotify/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/98bac43228ed920e4eb516aaabf050065a6a5106#diff-6bb3d01e4459c73cb33ffb87682c13cff2e4b0b5L29",
        "old_file": "script/hassfest/__main__.py",
        "old_line": 29,
        "old_code": "def get_config() -> Config:",
        "new_line": "",
        "new_file": "script/hassfest/__main__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c0bc4bb550b8bb9a48903aadce878736897c3aec#diff-9511bb2b292f44699478469c3213830c3324375dL248",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 248,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def logo(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c0bc4bb550b8bb9a48903aadce878736897c3aec#diff-9511bb2b292f44699478469c3213830c3324375dL253",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 253,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def icon(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/98ac84349c022aa27d05c0f2f6338681fd39d5f5#diff-5e6988cf4e1d0d01ad0cf0439d006690845d588bL256",
        "old_file": "homeassistant/components/huawei_lte/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 256,
        "new_file": "homeassistant/components/huawei_lte/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c481a48e3a85b6bed55b5898a66502f0ea3d732d#diff-61a46ddb2ae0e46e361eea86863d826b9b87d90aL88",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c481a48e3a85b6bed55b5898a66502f0ea3d732d#diff-61a46ddb2ae0e46e361eea86863d826b9b87d90aL132",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "    def play_sound(service: ServiceDataType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c481a48e3a85b6bed55b5898a66502f0ea3d732d#diff-61a46ddb2ae0e46e361eea86863d826b9b87d90aL141",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 141,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "    def display_message(service: ServiceDataType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c481a48e3a85b6bed55b5898a66502f0ea3d732d#diff-61a46ddb2ae0e46e361eea86863d826b9b87d90aL152",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 152,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "    def lost_device(service: ServiceDataType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c481a48e3a85b6bed55b5898a66502f0ea3d732d#diff-61a46ddb2ae0e46e361eea86863d826b9b87d90aL163",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "    def update_account(service: ServiceDataType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c481a48e3a85b6bed55b5898a66502f0ea3d732d#diff-61a46ddb2ae0e46e361eea86863d826b9b87d90aL173",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 173,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "    def _get_account(account_identifier: str) -> any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1b3c4ed4b3250e4c8fcf6bebab4c36fc5bf0da7c#diff-43980c9ca1d7a73757a318fd1ea6720613f182c5L22",
        "old_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "old_line": 22,
        "old_code": "def configured_haps(hass: HomeAssistantType) -> Set[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/52c1bc9c26f7d936e2dcc3c1c70ce98172af31ba#diff-0af916e9e5c1fd89cb0798c17f7f5a5e7db72897L23",
        "old_file": "script/hassfest/manifest.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "script/hassfest/manifest.py",
        "new_code": "def documentation_url(value: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a73a1a44894cab64bd8e6ae2eaf61eeff6adb2ff#diff-95478cc0d068d383d8e144c8ca48474f31a386e0L34",
        "old_file": "homeassistant/components/linky/config_flow.py",
        "old_line": 34,
        "old_code": "    def _configuration_exists(self, username: str) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/linky/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L123",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def automations_with_entity(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L140",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def entities_in_automation(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L156",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def automations_with_device(hass: HomeAssistant, device_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L173",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 173,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def devices_in_automation(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L75",
        "old_file": "homeassistant/components/script/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/script/__init__.py",
        "new_code": "def scripts_with_entity(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L92",
        "old_file": "homeassistant/components/script/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/script/__init__.py",
        "new_code": "def entities_in_script(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L108",
        "old_file": "homeassistant/components/script/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 108,
        "new_file": "homeassistant/components/script/__init__.py",
        "new_code": "def scripts_with_device(hass: HomeAssistant, device_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/424e15c7a75d1457a30ae7d3c79d3d92c3ed16c5#diff-40a543a1b243beea60085f3bf64db89ecaff7a11L125",
        "old_file": "homeassistant/components/script/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "homeassistant/components/script/__init__.py",
        "new_code": "def devices_in_script(hass: HomeAssistant, entity_id: str) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5a46adfebf6a4cd6073b8f11ec12c7fa554ef643#diff-1640920741bde244c0f06391360cdf101724c7feL238",
        "old_file": "homeassistant/components/zha/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 238,
        "new_file": "homeassistant/components/zha/sensor.py",
        "new_code": "    def formatter(self, value) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dead2fe57655f91c3c1d35102e4abe01f5ac7f51#diff-755aceda05d97d735b7dcddad0fee8d8d7329310L122",
        "old_file": "homeassistant/components/ring/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/ring/sensor.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7ff30fe29d2cc4e3af74cc7ffc01677ddc6f0ea6#diff-fb99812fb1f0d84d921a1d04a28540f8d059a3a5L123",
        "old_file": "homeassistant/components/insteon/__init__.py",
        "old_line": 123,
        "old_code": "def set_default_port(schema: Dict) -> Dict:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7ff30fe29d2cc4e3af74cc7ffc01677ddc6f0ea6#diff-fb99812fb1f0d84d921a1d04a28540f8d059a3a5L596",
        "old_file": "homeassistant/components/insteon/__init__.py",
        "old_line": 596,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9432054066c0e603f00ee9be3ee9602c1929d145#diff-89bc147975c9499c85824215037d2fdb65b3c2c7L92",
        "old_file": "homeassistant/components/mikrotik/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/mikrotik/device_tracker.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9432054066c0e603f00ee9be3ee9602c1929d145#diff-89bc147975c9499c85824215037d2fdb65b3c2c7L97",
        "old_file": "homeassistant/components/mikrotik/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/mikrotik/device_tracker.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9432054066c0e603f00ee9be3ee9602c1929d145#diff-89bc147975c9499c85824215037d2fdb65b3c2c7L102",
        "old_file": "homeassistant/components/mikrotik/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/mikrotik/device_tracker.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L171",
        "old_file": "homeassistant/components/unifi/controller.py",
        "old_line": "",
        "old_code": "",
        "new_line": 171,
        "new_file": "homeassistant/components/unifi/controller.py",
        "new_code": "    def signal_reachable(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L298",
        "old_file": "homeassistant/components/unifi/controller.py",
        "old_line": "",
        "old_code": "",
        "new_line": 298,
        "new_file": "homeassistant/components/unifi/controller.py",
        "new_code": "    def reconnect(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L303",
        "old_file": "homeassistant/components/unifi/controller.py",
        "old_line": "",
        "old_code": "",
        "new_line": 303,
        "new_file": "homeassistant/components/unifi/controller.py",
        "new_code": "    async def async_reconnect(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L314",
        "old_file": "homeassistant/components/unifi/controller.py",
        "old_line": "",
        "old_code": "",
        "new_line": 314,
        "new_file": "homeassistant/components/unifi/controller.py",
        "new_code": "    def shutdown(self, event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L203",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": 203,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L213",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": 213,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L222",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 222,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/958a867c1189a00b1afe3fbfa73ae4d9007939cf#diff-980c687b6392c4d96b9d773d635f24d5cbc5a957L124",
        "old_file": "homeassistant/components/unifi/sensor.py",
        "old_line": 124,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c67f53dc43d46c69ecb7e78a28c812bb17e9c156#diff-2f451c596fa8eb851eaf355ac17cbe72e71fe404L98",
        "old_file": "homeassistant/helpers/update_coordinator.py",
        "old_line": 98,
        "old_code": "    async def _async_do_refresh(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/helpers/update_coordinator.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/55aa341daba2bac150e8e4924c5b5c8fdd94c4e5#diff-54379a22460df85be928e899f22115e1f0b9f712L97",
        "old_file": "homeassistant/components/essent/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/essent/sensor.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/261041550131e9b0aca1d0ebc685fb8c72dbe352#diff-fc1a1e799cffb5a44cee9d46456587e43fd19779L442",
        "old_file": "homeassistant/components/simplisafe/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 442,
        "new_file": "homeassistant/components/simplisafe/__init__.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03642d902902a981caffea4f461f3d2f789df369#diff-fc9b00ec8d2c531d63d0fb4b6a3ee12a6435b1a2L228",
        "old_file": "homeassistant/components/homematicip_cloud/hap.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/components/homematicip_cloud/hap.py",
        "new_code": "    def shutdown(self, event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1efea50654958dcf70885dc534c19620fa0ee4ea#diff-4b7dc25fda35b8bf329e6fb4e53bab9e150af625L56",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "def _host_is_same(host1: str, host2: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/201ea2557ef2600cfdc55adaa67b3b668d180c05#diff-b31a0706624edf8519e247890872fbbe3cc3a5e0L29",
        "old_file": "homeassistant/components/meteo_france/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/components/meteo_france/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/201ea2557ef2600cfdc55adaa67b3b668d180c05#diff-b31a0706624edf8519e247890872fbbe3cc3a5e0L46",
        "old_file": "homeassistant/components/meteo_france/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/meteo_france/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fce96975917e4189ceb1dc06dbfcfa025831b8d6#diff-48eebcb01657e1b359bb29a02b4a59345af46f36L148",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 148,
        "old_code": "    def signal_options_update(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fce96975917e4189ceb1dc06dbfcfa025831b8d6#diff-48eebcb01657e1b359bb29a02b4a59345af46f36L153",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 153,
        "old_code": "    async def async_options_updated(hass, entry) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fce96975917e4189ceb1dc06dbfcfa025831b8d6#diff-48eebcb01657e1b359bb29a02b4a59345af46f36L44",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 44,
        "old_code": "    def __init__(self, hass, config_entry) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fce96975917e4189ceb1dc06dbfcfa025831b8d6#diff-48eebcb01657e1b359bb29a02b4a59345af46f36L247",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 247,
        "old_code": "    def add_entity(self, entity) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fce96975917e4189ceb1dc06dbfcfa025831b8d6#diff-48eebcb01657e1b359bb29a02b4a59345af46f36L252",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 252,
        "old_code": "    def update_entity_registry(self, entity_registry) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/67680bcfa8f436e1cace14a4b695da0ccabff3d6#diff-353db737cfbc856971b8fdcd3567bf680c9da1e4L560",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 560,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def _trigger_extract_device(trigger_conf: dict) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/67680bcfa8f436e1cace14a4b695da0ccabff3d6#diff-353db737cfbc856971b8fdcd3567bf680c9da1e4L569",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 569,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def _trigger_extract_entities(trigger_conf: dict) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04cb2e9fd5d96da7ea805ea8d07eca3c17b60559#diff-89bc147975c9499c85824215037d2fdb65b3c2c7L92",
        "old_file": "homeassistant/components/mikrotik/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/mikrotik/device_tracker.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04cb2e9fd5d96da7ea805ea8d07eca3c17b60559#diff-89bc147975c9499c85824215037d2fdb65b3c2c7L97",
        "old_file": "homeassistant/components/mikrotik/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/mikrotik/device_tracker.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04cb2e9fd5d96da7ea805ea8d07eca3c17b60559#diff-89bc147975c9499c85824215037d2fdb65b3c2c7L102",
        "old_file": "homeassistant/components/mikrotik/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/mikrotik/device_tracker.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/250951895038de614922a5f3a624e026beabf330#diff-4b7dc25fda35b8bf329e6fb4e53bab9e150af625L56",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "def _host_is_same(host1: str, host2: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b6b8f1994d3ba7fac69352d0c507d358dd20961#diff-353db737cfbc856971b8fdcd3567bf680c9da1e4L560",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 560,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def _trigger_extract_device(trigger_conf: dict) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b6b8f1994d3ba7fac69352d0c507d358dd20961#diff-353db737cfbc856971b8fdcd3567bf680c9da1e4L569",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 569,
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": "def _trigger_extract_entities(trigger_conf: dict) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L148",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 148,
        "old_code": "    async def _async_activate_eco_mode_with_duration(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L168",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 168,
        "old_code": "    async def _async_activate_eco_mode_with_period(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L188",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 188,
        "old_code": "    async def _async_activate_vacation(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L209",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 209,
        "old_code": "    async def _async_deactivate_eco_mode(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L228",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 228,
        "old_code": "    async def _async_deactivate_vacation(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L247",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 247,
        "old_code": "    async def _set_active_climate_profile(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L270",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 270,
        "old_code": "    async def _async_dump_hap_config(service) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/baa9184b33802de9197a98e110664305263f8bbc#diff-5d6012a91c50b1b4fdf646117ecbb47cdd8b4b99L322",
        "old_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "old_line": 322,
        "old_code": "    def _get_home(hapid: str) -> Optional[AsyncHome]:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fb2e120563d3e1216f86193171741ebc7e09fab6#diff-830b41407b3a833dbf0bc2eb31a2f24567b1428fL64",
        "old_file": "homeassistant/components/surepetcare/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/surepetcare/__init__.py",
        "new_code": "async def async_setup(hass, config) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fb2e120563d3e1216f86193171741ebc7e09fab6#diff-830b41407b3a833dbf0bc2eb31a2f24567b1428fL147",
        "old_file": "homeassistant/components/surepetcare/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 147,
        "new_file": "homeassistant/components/surepetcare/__init__.py",
        "new_code": "    def __init__(self, hass, surepy: SurePetcare, ids: List[Dict[str, Any]]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fb2e120563d3e1216f86193171741ebc7e09fab6#diff-830b41407b3a833dbf0bc2eb31a2f24567b1428fL154",
        "old_file": "homeassistant/components/surepetcare/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 154,
        "new_file": "homeassistant/components/surepetcare/__init__.py",
        "new_code": "    async def async_update(self, arg: Any = None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/94da129ef86142bf1b10982c45cb1bee960ccff0#diff-d26b7707baa6461ffd793637050e093611903967L78",
        "old_file": "homeassistant/components/modbus/binary_sensor.py",
        "old_line": 78,
        "old_code": "    def device_class(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/modbus/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/94da129ef86142bf1b10982c45cb1bee960ccff0#diff-d26b7707baa6461ffd793637050e093611903967L98",
        "old_file": "homeassistant/components/modbus/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/modbus/binary_sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3435281bd1c1962773470e231799c6a16fd73104#diff-46b05d6ceba112fe4969310fcfe2b6fe4012ef67L296",
        "old_file": "homeassistant/components/konnected/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 296,
        "new_file": "homeassistant/components/konnected/__init__.py",
        "new_code": "    async def update_sensor(self, request: Request, device_id) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3435281bd1c1962773470e231799c6a16fd73104#diff-46b05d6ceba112fe4969310fcfe2b6fe4012ef67L357",
        "old_file": "homeassistant/components/konnected/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 357,
        "new_file": "homeassistant/components/konnected/__init__.py",
        "new_code": "    async def get(self, request: Request, device_id) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3435281bd1c1962773470e231799c6a16fd73104#diff-46b05d6ceba112fe4969310fcfe2b6fe4012ef67L419",
        "old_file": "homeassistant/components/konnected/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 419,
        "new_file": "homeassistant/components/konnected/__init__.py",
        "new_code": "    async def post(self, request: Request, device_id) -> Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L106",
        "old_file": "homeassistant/components/modbus/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/modbus/binary_sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L227",
        "old_file": "homeassistant/components/modbus/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 227,
        "new_file": "homeassistant/components/modbus/climate.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L231",
        "old_file": "homeassistant/components/modbus/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 231,
        "new_file": "homeassistant/components/modbus/climate.py",
        "new_code": "    def _read_register(self, register) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L219",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 219,
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L142",
        "old_file": "homeassistant/components/modbus/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 142,
        "new_file": "homeassistant/components/modbus/switch.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L158",
        "old_file": "homeassistant/components/modbus/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 158,
        "new_file": "homeassistant/components/modbus/switch.py",
        "new_code": "    def _read_coil(self, coil) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/378c432f6da4d30917eeda891045c437da1fc11a#diff-0fffa04d1d8bd4b326e0da81ed38fd32240c5986L283",
        "old_file": "homeassistant/components/modbus/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 283,
        "new_file": "homeassistant/components/modbus/switch.py",
        "new_code": "    def _read_register(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4cac0443e25d7637cf0f3d02d60d1113d7b8f5fc#diff-98ca2333deb2976534b23c7f46ab87154239cac3L246",
        "old_file": "homeassistant/components/unifi/controller.py",
        "old_line": "",
        "old_code": "",
        "new_line": 246,
        "new_file": "homeassistant/components/unifi/controller.py",
        "new_code": "    async def async_config_entry_updated(hass, entry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f091e0412fe25d3e84305454cc3ce3380645d5d7#diff-0f2a31daa96a2b8bd7ff0b7ee8d1e596626c941dL442",
        "old_file": "homeassistant/components/simplisafe/__init__.py",
        "old_line": 442,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/simplisafe/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fdfe88566bfc6d6e284c4ddaf26aa12383d394f7#diff-90282e658c3b9a1e4ddd55d514cc297f8933cef0L248",
        "old_file": "homeassistant/components/onewire/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 248,
        "new_file": "homeassistant/components/onewire/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9eb04152342609b076837ad8d8fef380f1c46251#diff-c1133e40609948ff52628cacf5815c9718e5a79fL70",
        "old_file": "tests/components/homematicip_cloud/conftest.py",
        "old_line": 70,
        "old_code": "def default_mock_home_fixture(mock_connection) -> AsyncHome:",
        "new_line": "",
        "new_file": "tests/components/homematicip_cloud/conftest.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/52b045ed30cbb0c7968bedf09d9753e629b63d2e#diff-c69c604d8072818ac476d34b43a137ed2585177aL168",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    async def _async_load_data(self) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/52b045ed30cbb0c7968bedf09d9753e629b63d2e#diff-c69c604d8072818ac476d34b43a137ed2585177aL161",
        "old_file": "homeassistant/helpers/collection.py",
        "old_line": "",
        "old_code": "",
        "new_line": 161,
        "new_file": "homeassistant/helpers/collection.py",
        "new_code": "    async def _async_load_data(self) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4501471b8ce460cc46deafaafec5f3ab49006df7#diff-5cb63520482564467b5b9adc00088703e0103d81L360",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def should_expose_local(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/733f1e1101b2f51adaef7cee557d4cd12171885a#diff-3f7ad622d4c29a3a6f316327757708435c0d1cb8L48",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": 48,
        "old_code": "    def as_dict(self) -> Dict:",
        "new_line": 45,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "    def as_dict(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/733f1e1101b2f51adaef7cee557d4cd12171885a#diff-3f7ad622d4c29a3a6f316327757708435c0d1cb8L211",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 211,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "def _encode(value: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/733f1e1101b2f51adaef7cee557d4cd12171885a#diff-3f7ad622d4c29a3a6f316327757708435c0d1cb8L222",
        "old_file": "homeassistant/helpers/restore_state.py",
        "old_line": "",
        "old_code": "",
        "new_line": 222,
        "new_file": "homeassistant/helpers/restore_state.py",
        "new_code": "def _encode_complex(value: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/af9832d46826c799107d020ca3b657c80ae8c58a#diff-c69c604d8072818ac476d34b43a137ed2585177aL168",
        "old_file": "homeassistant/components/person/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/person/__init__.py",
        "new_code": "    async def _async_load_data(self) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/af9832d46826c799107d020ca3b657c80ae8c58a#diff-c69c604d8072818ac476d34b43a137ed2585177aL161",
        "old_file": "homeassistant/helpers/collection.py",
        "old_line": "",
        "old_code": "",
        "new_line": 161,
        "new_file": "homeassistant/helpers/collection.py",
        "new_code": "    async def _async_load_data(self) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7705eb7941c6d25ce9ef273cad7144ba817f3308#diff-5cb63520482564467b5b9adc00088703e0103d81L360",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def should_expose_local(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/32f25a84847ebf19d33f39927d658a6a6246acbe#diff-9393e5c89f7bcc20b4dadb40b37078f6a2f5b950L117",
        "old_file": "homeassistant/components/homematicip_cloud/services.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/homematicip_cloud/services.py",
        "new_code": "async def async_setup_services(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L62",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "def is_on(hass: HomeAssistantType, entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L67",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L116",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L120",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    def send_command(self, command: Iterable[str], **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L124",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 124,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    async def async_send_command(self, command: Iterable[str], **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L131",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    def learn_command(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/03f7fe483b9e8ccd9ef93f4ff21f0974cf922e8b#diff-64cd0f819117fc80e8ccce1bfcf928ad05f83093L135",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    async def async_learn_command(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3743aaf70f97975543b583d22441e9a6c79218e2#diff-c6ffb72fede7da36a25d7aab9b3b14fdd5cd5525L89",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3743aaf70f97975543b583d22441e9a6c79218e2#diff-c6ffb72fede7da36a25d7aab9b3b14fdd5cd5525L106",
        "old_file": "homeassistant/components/icloud/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/icloud/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/beee1298c5facb93529a582805f2752ab1b6c245#diff-7a9badd370494a37424e17472279307227feb71aL553",
        "old_file": "homeassistant/loader.py",
        "old_line": "",
        "old_code": "",
        "new_line": 553,
        "new_file": "homeassistant/loader.py",
        "new_code": "def _lookup_path(hass: \"HomeAssistant\") -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b5df2ba8538e2632e7861c0b353dcfc1a18a5538#diff-3201bc3eda96c72bb31644bb2d703f0d3a76df4aL93",
        "old_file": "homeassistant/components/deconz/deconz_device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/deconz/deconz_device.py",
        "new_code": "    async def async_remove_self(self, deconz_ids: list) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b5df2ba8538e2632e7861c0b353dcfc1a18a5538#diff-3201bc3eda96c72bb31644bb2d703f0d3a76df4aL116",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": 116,
        "old_code": "    async def async_new_address(hass, entry) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b5df2ba8538e2632e7861c0b353dcfc1a18a5538#diff-3201bc3eda96c72bb31644bb2d703f0d3a76df4aL121",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    async def async_config_entry_updated(hass, entry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b5df2ba8538e2632e7861c0b353dcfc1a18a5538#diff-3201bc3eda96c72bb31644bb2d703f0d3a76df4aL192",
        "old_file": "homeassistant/components/deconz/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 192,
        "new_file": "homeassistant/components/deconz/gateway.py",
        "new_code": "    def signal_remove_entity(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0d874902cc75044e1146c6e64ae52aa2fe04dc50#diff-0e02c0fdb638ee727825b96b1f393a76c8338e6dL156",
        "old_file": "homeassistant/components/homematicip_cloud/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 156,
        "new_file": "homeassistant/components/homematicip_cloud/cover.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP, device, post: str = \"ShutterGroup\") -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f8f23238ad2db3acfc949cb497dca33dd604ab4#diff-c3cb8f216d449b511e05afd9dcd63197b41b2dc9L88",
        "old_file": "homeassistant/components/nuki/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/nuki/lock.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7a6b13cb0dbdb75abe9042d35831c7d6bac64fc6#diff-c8bc78939a6617b8c1d41312226809f47e83b59aL33",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": 33,
        "old_code": "def _get_config_flow_schema(input_dict: Dict[str, Any] = None) -> vol.Schema:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7a6b13cb0dbdb75abe9042d35831c7d6bac64fc6#diff-c8bc78939a6617b8c1d41312226809f47e83b59aL34",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "def _get_config_schema(input_dict: Dict[str, Any] = None) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3385893b7724af50f22ac5d49ce9bacbe283b5f6#diff-d44c3f1bf9f8160d8565746eaba2fe199ed3fcfaL96",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": 96,
        "old_code": "    def id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3385893b7724af50f22ac5d49ce9bacbe283b5f6#diff-d44c3f1bf9f8160d8565746eaba2fe199ed3fcfaL121",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": 121,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3385893b7724af50f22ac5d49ce9bacbe283b5f6#diff-d44c3f1bf9f8160d8565746eaba2fe199ed3fcfaL38",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def __init__(self, zha_device: zha_typing.ZhaDeviceType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3385893b7724af50f22ac5d49ce9bacbe283b5f6#diff-d44c3f1bf9f8160d8565746eaba2fe199ed3fcfaL116",
        "old_file": "homeassistant/components/zha/core/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/zha/core/device.py",
        "new_code": "    def device(self) -> zha_typing.ZigpyDeviceType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3385893b7724af50f22ac5d49ce9bacbe283b5f6#diff-d44c3f1bf9f8160d8565746eaba2fe199ed3fcfaL126",
        "old_file": "homeassistant/components/zha/core/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 126,
        "new_file": "homeassistant/components/zha/core/device.py",
        "new_code": "    def channels(self, value: zha_typing.ChannelsType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3385893b7724af50f22ac5d49ce9bacbe283b5f6#diff-d44c3f1bf9f8160d8565746eaba2fe199ed3fcfaL466",
        "old_file": "homeassistant/components/zha/core/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 466,
        "new_file": "homeassistant/components/zha/core/gateway.py",
        "new_code": "    async def _async_device_joined(self, zha_device: zha_typing.ZhaDeviceType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/edfb967b103d00d2d969faa274822bc9fb769307#diff-fb2f219be56c71393b66a5032d78142c116456ebL414",
        "old_file": "homeassistant/components/onvif/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 414,
        "new_file": "homeassistant/components/onvif/camera.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d996a4a9a9f3eab0f9ecaaf6e5e8040f9d0ed61f#diff-7ebb3cf6556e2938c6b14db671f374477d3ae60dL144",
        "old_file": "homeassistant/components/supla/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/supla/__init__.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d996a4a9a9f3eab0f9ecaaf6e5e8040f9d0ed61f#diff-7ebb3cf6556e2938c6b14db671f374477d3ae60dL81",
        "old_file": "homeassistant/components/supla/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/supla/cover.py",
        "new_code": "    def open_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d996a4a9a9f3eab0f9ecaaf6e5e8040f9d0ed61f#diff-7ebb3cf6556e2938c6b14db671f374477d3ae60dL86",
        "old_file": "homeassistant/components/supla/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/supla/cover.py",
        "new_code": "    def close_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d996a4a9a9f3eab0f9ecaaf6e5e8040f9d0ed61f#diff-7ebb3cf6556e2938c6b14db671f374477d3ae60dL91",
        "old_file": "homeassistant/components/supla/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/supla/cover.py",
        "new_code": "    def stop_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d996a4a9a9f3eab0f9ecaaf6e5e8040f9d0ed61f#diff-7ebb3cf6556e2938c6b14db671f374477d3ae60dL95",
        "old_file": "homeassistant/components/supla/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/supla/cover.py",
        "new_code": "    def toggle(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L45",
        "old_file": "homeassistant/components/daikin/sensor.py",
        "old_line": 45,
        "old_code": "    def __init__(self, api, monitored_state, units: UnitSystem, name=None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/daikin/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L275",
        "old_file": "homeassistant/components/elkm1/__init__.py",
        "old_line": 275,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/elkm1/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L133",
        "old_file": "homeassistant/components/elkm1/__init__.py",
        "old_line": 133,
        "old_code": "async def async_setup(hass: HomeAssistant, hass_config: ConfigType) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/elkm1/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L82",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 82,
        "old_code": "def due_in_minutes(timestamp: datetime) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L145",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 145,
        "old_code": "    async def async_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L149",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 149,
        "old_code": "    def get_stop_info(self, stop_id: str) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L168",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 168,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L173",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 173,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L178",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 178,
        "old_code": "    def device_state_attributes(self) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L185",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 185,
        "old_code": "    def unit_of_measurement(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L190",
        "old_file": "homeassistant/components/entur_public_transport/sensor.py",
        "old_line": 190,
        "old_code": "    def icon(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/entur_public_transport/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L62",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": 62,
        "old_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L94",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": 94,
        "old_code": "    async def on_stop(event: Event) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L106",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": 106,
        "old_code": "    def async_on_state(state: EntityState) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9801810552c376d7656c1e2b6c1191c997659ad1#diff-9853dd7a3f2bf71964840c002d8048cfacf5c5e3L111",
        "old_file": "homeassistant/components/esphome/__init__.py",
        "old_line": 111,
        "old_code": "    def async_on_service_call(service: HomeassistantServiceCall) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ad102b3840d14e5e554bc2989b891c5982441da2#diff-2d6a8c466be4c22b50433c2649da52d2fa2dfdb7L213",
        "old_file": "homeassistant/components/flux_led/light.py",
        "old_line": 213,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/flux_led/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ad102b3840d14e5e554bc2989b891c5982441da2#diff-2d6a8c466be4c22b50433c2649da52d2fa2dfdb7L56",
        "old_file": "homeassistant/components/geofency/__init__.py",
        "old_line": 56,
        "old_code": "def _address(value: str) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/geofency/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e387f93d622231ee7ed6128ee7d54c103ac48c7#diff-096f8dd25ec8b8fb04785918dda071881f0596b8L1201",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1201,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    async def async_removed_from_registry(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e387f93d622231ee7ed6128ee7d54c103ac48c7#diff-096f8dd25ec8b8fb04785918dda071881f0596b8L1208",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1208,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e387f93d622231ee7ed6128ee7d54c103ac48c7#diff-096f8dd25ec8b8fb04785918dda071881f0596b8L244",
        "old_file": "homeassistant/components/mqtt/device_trigger.py",
        "old_line": "",
        "old_code": "",
        "new_line": 244,
        "new_file": "homeassistant/components/mqtt/device_trigger.py",
        "new_code": "async def async_get_triggers(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e387f93d622231ee7ed6128ee7d54c103ac48c7#diff-096f8dd25ec8b8fb04785918dda071881f0596b8L491",
        "old_file": "homeassistant/helpers/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 491,
        "new_file": "homeassistant/helpers/entity.py",
        "new_code": "    async def async_removed_from_registry(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/536b31305ab43a23196a5a427dcb6a0da599abf9#diff-748a9fdac88ee316cdc03493d4ed92a7d8619db7L50",
        "old_file": "homeassistant/components/lovelace/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/lovelace/__init__.py",
        "new_code": "def url_slug(value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/536b31305ab43a23196a5a427dcb6a0da599abf9#diff-748a9fdac88ee316cdc03493d4ed92a7d8619db7L167",
        "old_file": "homeassistant/components/zone/__init__.py",
        "old_line": 167,
        "old_code": "    async def async_load(self, data: List[dict]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zone/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/536b31305ab43a23196a5a427dcb6a0da599abf9#diff-748a9fdac88ee316cdc03493d4ed92a7d8619db7L119",
        "old_file": "homeassistant/helpers/collection.py",
        "old_line": "",
        "old_code": "",
        "new_line": 119,
        "new_file": "homeassistant/helpers/collection.py",
        "new_code": "    async def async_load(self, data: List[dict]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/536b31305ab43a23196a5a427dcb6a0da599abf9#diff-748a9fdac88ee316cdc03493d4ed92a7d8619db7L47",
        "old_file": "homeassistant/util/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/util/__init__.py",
        "new_code": "def slugify(text: str, *, separator: str = \"_\") -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ceb3985a990a08120bdd5a5377bb76cd6c8be4f7#diff-f56fb5481c2221729c1c1e0056e91a455872f01fL276",
        "old_file": "homeassistant/components/automation/__init__.py",
        "old_line": 276,
        "old_code": "    def hidden(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/automation/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dd13e999677baf5e3b943d5233609abcb8eacd21#diff-21b03be9117541f4df9970f638286b9db98af96dL38",
        "old_file": "homeassistant/components/homekit_controller/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/homekit_controller/sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4a89fba6f9a2f7b5db1247032fcae4b93d0bbf49#diff-0981775989e105aebf16e7c1107fb8249ef845bcL81",
        "old_file": "homeassistant/components/homekit_controller/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/homekit_controller/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a88ae559e7bef1f19b23b9ccca21fa7daaf94d4#diff-fa74818ae0ad0720ff945436134e795f5d409625L101",
        "old_file": "homeassistant/helpers/debounce.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/helpers/debounce.py",
        "new_code": "    def _schedule_timer(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9fa32444aa634143b2ff25fab8b6c23c68ffdd4#diff-764bf4361f97e07b231f454a86e999698eb28889L15",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": 15,
        "old_code": "def validate_auth(config: ConfigType) -> ConfigType:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9fa32444aa634143b2ff25fab8b6c23c68ffdd4#diff-764bf4361f97e07b231f454a86e999698eb28889L59",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": "def _get_pairing_schema(input_dict: Dict[str, Any] = None) -> vol.Schema:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9fa32444aa634143b2ff25fab8b6c23c68ffdd4#diff-764bf4361f97e07b231f454a86e999698eb28889L41",
        "old_file": "tests/components/vizio/const.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "tests/components/vizio/const.py",
        "new_code": "    def __init__(self, ch_type: int, token: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9fa32444aa634143b2ff25fab8b6c23c68ffdd4#diff-764bf4361f97e07b231f454a86e999698eb28889L50",
        "old_file": "tests/components/vizio/const.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "tests/components/vizio/const.py",
        "new_code": "    def __init__(self, auth_token: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/adb3bb3653efa678ad23c8ba1e3bde5f8c077a28#diff-f54e405cb5945d2f1c76fa2c203c645a4caa3ce3L167",
        "old_file": "homeassistant/components/gdacs/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 167,
        "new_file": "homeassistant/components/gdacs/geo_location.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/adb3bb3653efa678ad23c8ba1e3bde5f8c077a28#diff-f54e405cb5945d2f1c76fa2c203c645a4caa3ce3L112",
        "old_file": "homeassistant/components/gdacs/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/components/gdacs/sensor.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/157f972d722d4772e9b20f37829e10968fcb6ca8#diff-7f7015105fab3cd4a459f0dc1de4334a18eb37fdL171",
        "old_file": "homeassistant/components/isy994/__init__.py",
        "old_line": 171,
        "old_code": "def _check_for_node_def(hass: HomeAssistant, node, single_domain: str = None) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/157f972d722d4772e9b20f37829e10968fcb6ca8#diff-7f7015105fab3cd4a459f0dc1de4334a18eb37fdL22",
        "old_file": "homeassistant/components/light/intent.py",
        "old_line": 22,
        "old_code": "async def async_setup_intents(hass: HomeAssistant) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/light/intent.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/157f972d722d4772e9b20f37829e10968fcb6ca8#diff-7f7015105fab3cd4a459f0dc1de4334a18eb37fdL37",
        "old_file": "homeassistant/components/light/intent.py",
        "old_line": 37,
        "old_code": "    async def async_handle(self, intent_obj: intent.Intent) -> intent.IntentResponse:",
        "new_line": "",
        "new_file": "homeassistant/components/light/intent.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/157f972d722d4772e9b20f37829e10968fcb6ca8#diff-7f7015105fab3cd4a459f0dc1de4334a18eb37fdL80",
        "old_file": "homeassistant/components/luftdaten/sensor.py",
        "old_line": 80,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/luftdaten/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/deda2f86e7e138fd22f2853bc42ca72a6387976a#diff-b1e7632614b6aeabc690b6ce40a22c4280ab45beL52",
        "old_file": "homeassistant/components/lovelace/__init__.py",
        "old_line": 52,
        "old_code": "def url_slug(value: Any) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/lovelace/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/deda2f86e7e138fd22f2853bc42ca72a6387976a#diff-b1e7632614b6aeabc690b6ce40a22c4280ab45beL76",
        "old_file": "homeassistant/components/lovelace/const.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/components/lovelace/const.py",
        "new_code": "def url_slug(value: Any) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/deda2f86e7e138fd22f2853bc42ca72a6387976a#diff-b1e7632614b6aeabc690b6ce40a22c4280ab45beL48",
        "old_file": "homeassistant/components/lovelace/dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/lovelace/dashboard.py",
        "new_code": "    def url_path(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/deda2f86e7e138fd22f2853bc42ca72a6387976a#diff-b1e7632614b6aeabc690b6ce40a22c4280ab45beL232",
        "old_file": "homeassistant/components/lovelace/dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 232,
        "new_file": "homeassistant/components/lovelace/dashboard.py",
        "new_code": "    async def _process_create_data(self, data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/deda2f86e7e138fd22f2853bc42ca72a6387976a#diff-b1e7632614b6aeabc690b6ce40a22c4280ab45beL240",
        "old_file": "homeassistant/components/lovelace/dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 240,
        "new_file": "homeassistant/components/lovelace/dashboard.py",
        "new_code": "    def _get_suggested_id(self, info: dict) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/deda2f86e7e138fd22f2853bc42ca72a6387976a#diff-b1e7632614b6aeabc690b6ce40a22c4280ab45beL244",
        "old_file": "homeassistant/components/lovelace/dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 244,
        "new_file": "homeassistant/components/lovelace/dashboard.py",
        "new_code": "    async def _update_data(self, data: dict, update_data: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL103",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL160",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 160,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    async def _process_create_data(self, data: Dict) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL165",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 165,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def _get_suggested_id(self, info: Dict) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL169",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 169,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    async def _update_data(self, data: dict, update_data: Dict) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL193",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 193,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL198",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL203",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 203,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def icon(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL208",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 208,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def state(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL213",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 213,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def state_attributes(self) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL227",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 227,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL231",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 231,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def compute_next_state(self, state) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL240",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 240,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL255",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 255,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def async_decrement(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL261",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 261,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def async_increment(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL267",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 267,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def async_reset(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL273",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    def async_configure(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0670b4f457610c13be405fa20c2ba933904beac6#diff-5484741ba02e323698d63c92c3199bba68c235ccL280",
        "old_file": "homeassistant/components/counter/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 280,
        "new_file": "homeassistant/components/counter/__init__.py",
        "new_code": "    async def async_update_config(self, config: Dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e9a7b66df67426f00529d76cafedc6300dc03ee3#diff-c5bc6ff1f3a75214d3c7527cee3c130285a4af03L202",
        "old_file": "homeassistant/components/airvisual/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 202,
        "new_file": "homeassistant/components/airvisual/sensor.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c4ac3155e479b39718da0fe4918582fed57f3934#diff-e6408adaecbd252f1e4a034b3ea908f17a54ef55L106",
        "old_file": "homeassistant/components/light/device_action.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/light/device_action.py",
        "new_code": "async def async_get_action_capabilities(hass: HomeAssistant, config: dict) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c4ac3155e479b39718da0fe4918582fed57f3934#diff-e6408adaecbd252f1e4a034b3ea908f17a54ef55L68",
        "old_file": "homeassistant/components/light/device_action.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/light/device_action.py",
        "new_code": "async def async_get_actions(hass: HomeAssistant, device_id: str) -> List[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8e3492d4f5c3baae3854647f94b1de70b816c656#diff-4e58eb7142a1dce6f7c915fca15aa1f619fbe5efL70",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def identify_ch(self, channel: zha_typing.ChannelType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8e3492d4f5c3baae3854647f94b1de70b816c656#diff-4e58eb7142a1dce6f7c915fca15aa1f619fbe5efL65",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def identify_ch(self) -> zha_typing.ChannelType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/df3f7687d4157bad18a87b0442d6590152eebb48#diff-cdc2b72670d9afd45219b088ee87d9e21c5cb903L37",
        "old_file": "homeassistant/components/cert_expiry/config_flow.py",
        "old_line": 37,
        "old_code": "    def _prt_in_configuration_exists(self, user_input) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/cert_expiry/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7678d66464c9825f99f53bdd2997289ca93bf935#diff-c70ce1a9c0354edb767c7e1837e983c7e8e257cfL111",
        "old_file": "homeassistant/components/icloud/device_tracker.py",
        "old_line": 111,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/icloud/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f62322cfb440653ca32dabfceb1e4d7469ec8289#diff-399428743e4f2a7ce844759d3c4eedf5e2c8c97fL79",
        "old_file": "homeassistant/components/smarty/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/smarty/fan.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2abdfc9da676b7def6fde004347dc3bd0465181c#diff-4a67d0fb800a6a6290aeb0894e41a7b2c482d646L144",
        "old_file": "homeassistant/components/geonetnz_quakes/geo_location.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/geonetnz_quakes/geo_location.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2abdfc9da676b7def6fde004347dc3bd0465181c#diff-4a67d0fb800a6a6290aeb0894e41a7b2c482d646L113",
        "old_file": "homeassistant/components/geonetnz_quakes/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/geonetnz_quakes/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/76fec90fecc5d72bffb1536c8095104ec452bb46#diff-b172b525061880d49a097104e7423d43fe00d498L45",
        "old_file": "homeassistant/components/buienradar/util.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/buienradar/util.py",
        "new_code": "def threshold_log(count: int, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9a4aad1777f90efcfdd6fbca2bddecd71a73d531#diff-74e86c55d314d62a2be3f070f5da952015995890L115",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9a4aad1777f90efcfdd6fbca2bddecd71a73d531#diff-74e86c55d314d62a2be3f070f5da952015995890L122",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9a4aad1777f90efcfdd6fbca2bddecd71a73d531#diff-74e86c55d314d62a2be3f070f5da952015995890L63",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "def is_on(hass: HomeAssistantType, entity_id: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L14",
        "old_file": "homeassistant/components/vizio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 14,
        "new_file": "homeassistant/components/vizio/__init__.py",
        "new_code": "def validate_apps(config: ConfigType) -> ConfigType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L339",
        "old_file": "homeassistant/components/vizio/config_flow.py",
        "old_line": 339,
        "old_code": "    async def _pairing_complete(self, step_id: str) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L243",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": 243,
        "old_code": "    def source_list(self) -> List:",
        "new_line": 313,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def source_list(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L139",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 139,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def _apps_list(self, apps: List[str]) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L149",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    async def _current_app_name(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L232",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 232,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def _get_additional_app_names(self) -> List[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a579fcf2482da094e3261f07c40328f948b06c03#diff-2b51262b4195e05db190264efc8b0f820caef508L331",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 331,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def app_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e52542c4d7a33ad051130e5ebddb4178fd570e54#diff-dd4362b6331c240156b71898aed1b8e4fd187b81L195",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 195,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def is_mains_powered(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/87b770be08e2e78d1fc0f3d47423d10f9acb09c6#diff-10fd06ae6fe74f7033249f052b7a9e034a023be0L347",
        "old_file": "homeassistant/components/zha/core/channels/general.py",
        "old_line": "",
        "old_code": "",
        "new_line": 347,
        "new_file": "homeassistant/components/zha/core/channels/general.py",
        "new_code": "    async def async_configure(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c2b03332a0e08d0a4347aaad3c233908029e9864#diff-4bf71907b4c40731488a12c02623bf23a4eebe63L152",
        "old_file": "homeassistant/components/tado/sensor.py",
        "old_line": 152,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c52e2c92305144d483fa8e3b72773dfdc3f908d#diff-2e0b1d2ed819f2745a42b4d3a620cb69c1b085d1L152",
        "old_file": "homeassistant/components/tado/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 152,
        "new_file": "homeassistant/components/tado/sensor.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c11a462f510b66a3f5bae2f801dee21f44180e48#diff-139a10058c51f078f849ba29786b20648a524512L43",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def accessory(self) -> Accessory:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c11a462f510b66a3f5bae2f801dee21f44180e48#diff-139a10058c51f078f849ba29786b20648a524512L48",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def accessory_info(self) -> Service:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c11a462f510b66a3f5bae2f801dee21f44180e48#diff-139a10058c51f078f849ba29786b20648a524512L55",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def service(self) -> Service:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L120",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": 120,
        "old_code": "    def target_temperature_step(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L96",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def target_temperature_step(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L104",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def __init__(self, device: MelCloudDevice, ata_device: AtaDevice) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L110",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L237",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 237,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L242",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L120",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L125",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L132",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 132,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L148",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L155",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 155,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L164",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 164,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L185",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 185,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L198",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 198,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2bb9cf1347c5add9572654aea799d356725e03a#diff-70d7e2dd66ef39bed8921d742af38a9e941fda05L209",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 209,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae147fd9c7413b32ac635358732e24a3801138c6#diff-63b96e9e5961c3a3abb4faa632db7651c3ab388dL189",
        "old_file": "homeassistant/components/august/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "homeassistant/components/august/sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4248893007bf194e7df505524c6c7e1beb9ce78f#diff-facf9b413e5e8dbb4a1daecb639e1d47dfb06477L371",
        "old_file": "homeassistant/components/zha/core/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 371,
        "new_file": "homeassistant/components/zha/core/device.py",
        "new_code": "    def async_cleanup_handles(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4248893007bf194e7df505524c6c7e1beb9ce78f#diff-facf9b413e5e8dbb4a1daecb639e1d47dfb06477L185",
        "old_file": "homeassistant/components/zha/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 185,
        "new_file": "homeassistant/components/zha/light.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/647d137daaa2677ddec9c400a53f5d7bc3a53b0c#diff-012a5f1280952515cc75b1542256322ad6c6aa2cL128",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 128,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/647d137daaa2677ddec9c400a53f5d7bc3a53b0c#diff-012a5f1280952515cc75b1542256322ad6c6aa2cL134",
        "old_file": "homeassistant/components/homekit_controller/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 134,
        "new_file": "homeassistant/components/homekit_controller/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bb666b9ac6f9649e5f61c0d82edc593b9cec08c6#diff-996d93f91043444e915d318da5b18befcf6c5103L74",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": "def client_dtv() -> MockDirectvClass:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bb666b9ac6f9649e5f61c0d82edc593b9cec08c6#diff-996d93f91043444e915d318da5b18befcf6c5103L83",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": "def mock_now() -> datetime:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bb666b9ac6f9649e5f61c0d82edc593b9cec08c6#diff-996d93f91043444e915d318da5b18befcf6c5103L88",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": "async def setup_directv(hass: HomeAssistantType) -> MockConfigEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bb666b9ac6f9649e5f61c0d82edc593b9cec08c6#diff-996d93f91043444e915d318da5b18befcf6c5103L96",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": "async def setup_directv_with_instance_error(hass: HomeAssistantType) -> MockConfigEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bc542776b6ff4bcf607f4e48e7a909c878ac75f#diff-a45e1452b129001befbb5fab814b9bbe5a2a8c84L1046",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1046,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8bc542776b6ff4bcf607f4e48e7a909c878ac75f#diff-a45e1452b129001befbb5fab814b9bbe5a2a8c84L1240",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1240,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    def _cleanup_on_remove(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/221d5205e4614573eb7a9cf5919e78ed29e123da#diff-e797ec8963f1aadc10533b26d574913e18a1d1b4L49",
        "old_file": "homeassistant/scripts/benchmark/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/scripts/benchmark/__init__.py",
        "new_code": "def benchmark(func: CALLABLE_T) -> CALLABLE_T:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ff92a8b2602f38f373a7ed4954626fc08d58c084#diff-45f82ec411d9832b1904fc66b68174b3462488fbL107",
        "old_file": "homeassistant/helpers/update_coordinator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/helpers/update_coordinator.py",
        "new_code": "    async def _async_update_data(self) -> Optional[Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL76",
        "old_file": "homeassistant/components/wled/__init__.py",
        "old_line": 76,
        "old_code": "    async def interval_update(now: dt_util.dt.datetime = None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL232",
        "old_file": "homeassistant/components/wled/light.py",
        "old_line": 232,
        "old_code": "    async def _wled_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL87",
        "old_file": "homeassistant/components/wled/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/wled/light.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL61",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": 61,
        "old_code": "    def state(self) -> Union[None, str, int, float]:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL85",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": 85,
        "old_code": "    async def _wled_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL87",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL95",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": "    def state(self) -> Union[None, str, int, float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL74",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": 74,
        "old_code": "    def __init__(self, entry_id: str, wled: WLED) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL60",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 60,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL64",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 64,
        "old_code": "    async def async_turn_off(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL74",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 74,
        "old_code": "    async def _wled_turn_off(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL78",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 78,
        "old_code": "    async def async_turn_on(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL88",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 88,
        "old_code": "    async def _wled_turn_on(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL114",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 114,
        "old_code": "    async def _wled_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL78",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL87",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL92",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": "    async def async_turn_off(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL97",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": "    async def async_turn_on(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL96",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": 96,
        "old_code": "    def __init__(self, entry_id: str, wled: WLED) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/992daa4a44f20664423d0a405f021b51d5057726#diff-98db0e5525492d024af01b8d3cca6c4cbb79351dL67",
        "old_file": "homeassistant/components/wled/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/wled/switch.py",
        "new_code": "    def __init__(self, entry_id: str, coordinator: WLEDDataUpdateCoordinator) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5dd031af17b059419176212a1667088610f42224#diff-f0830918b091f9a5b613342be2b93983a161a08cL74",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 74,
        "old_code": "def client_dtv() -> MockDirectvClass:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5dd031af17b059419176212a1667088610f42224#diff-f0830918b091f9a5b613342be2b93983a161a08cL96",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 96,
        "old_code": "async def setup_directv_with_instance_error(hass: HomeAssistantType) -> MockConfigEntry:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5dd031af17b059419176212a1667088610f42224#diff-f0830918b091f9a5b613342be2b93983a161a08cL217",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 217,
        "old_code": "async def test_setup_with_instance_error(hass: HomeAssistantType) -> None:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5dd031af17b059419176212a1667088610f42224#diff-f0830918b091f9a5b613342be2b93983a161a08cL88",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 88,
        "old_code": "async def setup_directv(hass: HomeAssistantType) -> MockConfigEntry:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e86919a99747349e6ea919665fce82766e6fffcb#diff-26312c635be2505031ff21d06e9b199b8223f941L77",
        "old_file": "homeassistant/loader.py",
        "old_line": 77,
        "old_code": "    def get_sub_directories(paths: List) -> List:",
        "new_line": 77,
        "new_file": "homeassistant/loader.py",
        "new_code": "    def get_sub_directories(paths: List[str]) -> List[pathlib.Path]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e86919a99747349e6ea919665fce82766e6fffcb#diff-26312c635be2505031ff21d06e9b199b8223f941L23",
        "old_file": "homeassistant/setup.py",
        "old_line": 23,
        "old_code": "def setup_component(hass: core.HomeAssistant, domain: str, config: Dict) -> bool:",
        "new_line": 24,
        "new_file": "homeassistant/setup.py",
        "new_code": "def setup_component(hass: core.HomeAssistant, domain: str, config: ConfigType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4bf66aecdc5388059d5253f249535aa5857c111#diff-7adcd9c2906dcd4e3487eb8296307b4852ccd221L234",
        "old_file": "homeassistant/components/lovelace/dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/lovelace/dashboard.py",
        "new_code": "    async def _async_load_data(self) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cf8dfdae47570d8cb560546ff72b3fa15c4ada85#diff-77f497bd83eb1e4c78e7f3cb31c5e10ac6986545L34",
        "old_file": "homeassistant/components/roku/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/roku/__init__.py",
        "new_code": "def get_roku_data(host: str) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cf8dfdae47570d8cb560546ff72b3fa15c4ada85#diff-77f497bd83eb1e4c78e7f3cb31c5e10ac6986545L45",
        "old_file": "homeassistant/components/roku/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/roku/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: Dict) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cf8dfdae47570d8cb560546ff72b3fa15c4ada85#diff-77f497bd83eb1e4c78e7f3cb31c5e10ac6986545L60",
        "old_file": "homeassistant/components/roku/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/roku/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cf8dfdae47570d8cb560546ff72b3fa15c4ada85#diff-77f497bd83eb1e4c78e7f3cb31c5e10ac6986545L79",
        "old_file": "homeassistant/components/roku/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/roku/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/af021b1c8182b44112405f758cac1343ded6944a#diff-2a0588c00027fa41687df1062c23af1c7812dc44L104",
        "old_file": "homeassistant/components/synology_srm/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/synology_srm/device_tracker.py",
        "new_code": "    def get_extra_attributes(self, device) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/426f546c2f21afa359a6df34becda1cf52398a19#diff-f6b038d9e703a1469f48f478aaeceef0cd66e28dL78",
        "old_file": "homeassistant/components/lovelace/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/lovelace/__init__.py",
        "new_code": "    async def reload_resources_service_handler(service_call: ServiceCallType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2cda7bf1e7e160d996359188f1fa25265914650b#diff-50fb806f889b6b24a169643a59134fda3bd6aba8L497",
        "old_file": "homeassistant/components/here_travel_time/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 497,
        "new_file": "homeassistant/components/here_travel_time/sensor.py",
        "new_code": "def convert_time_to_isodate(timestr: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/433b89de501f386273c6fe9995d32da584a4914e#diff-9ab1af680f3afad232b574aafa77375ed535a4d5L87",
        "old_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "old_line": 87,
        "old_code": "    def _device_unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/433b89de501f386273c6fe9995d32da584a4914e#diff-9ab1af680f3afad232b574aafa77375ed535a4d5L44",
        "old_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/433b89de501f386273c6fe9995d32da584a4914e#diff-9ab1af680f3afad232b574aafa77375ed535a4d5L49",
        "old_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "new_code": "    def _device_unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/433b89de501f386273c6fe9995d32da584a4914e#diff-9ab1af680f3afad232b574aafa77375ed535a4d5L99",
        "old_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/433b89de501f386273c6fe9995d32da584a4914e#diff-9ab1af680f3afad232b574aafa77375ed535a4d5L107",
        "old_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "new_code": "    def assumed_state(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/433b89de501f386273c6fe9995d32da584a4914e#diff-9ab1af680f3afad232b574aafa77375ed535a4d5L95",
        "old_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/huawei_lte/binary_sensor.py",
        "new_code": "    def _entity_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1b622925a131d1bfaa9eb6ce4bec65742b9a127c#diff-f0830918b091f9a5b613342be2b93983a161a08cL74",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 74,
        "old_code": "def client_dtv() -> MockDirectvClass:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1b622925a131d1bfaa9eb6ce4bec65742b9a127c#diff-f0830918b091f9a5b613342be2b93983a161a08cL96",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 96,
        "old_code": "async def setup_directv_with_instance_error(hass: HomeAssistantType) -> MockConfigEntry:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1b622925a131d1bfaa9eb6ce4bec65742b9a127c#diff-f0830918b091f9a5b613342be2b93983a161a08cL217",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 217,
        "old_code": "async def test_setup_with_instance_error(hass: HomeAssistantType) -> None:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1b622925a131d1bfaa9eb6ce4bec65742b9a127c#diff-f0830918b091f9a5b613342be2b93983a161a08cL88",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 88,
        "old_code": "async def setup_directv(hass: HomeAssistantType) -> MockConfigEntry:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3b84b6e6d578dbf582392a3f164d23435d48e608#diff-7adcd9c2906dcd4e3487eb8296307b4852ccd221L234",
        "old_file": "homeassistant/components/lovelace/dashboard.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/lovelace/dashboard.py",
        "new_code": "    async def _async_load_data(self) -> Optional[dict]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ccb34083fe518a8635f10066a122497cdc17c866#diff-f6b038d9e703a1469f48f478aaeceef0cd66e28dL78",
        "old_file": "homeassistant/components/lovelace/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 78,
        "new_file": "homeassistant/components/lovelace/__init__.py",
        "new_code": "    async def reload_resources_service_handler(service_call: ServiceCallType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05abf370461b887b32e0f37bd8d84ed4530a5613#diff-9ea80dbbb853d30f5c3696009adcf253ccb8d5e9L90",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    def entities(self) -> Iterable[entity.Entity]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05abf370461b887b32e0f37bd8d84ed4530a5613#diff-9ea80dbbb853d30f5c3696009adcf253ccb8d5e9L104",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    def setup(self, config: ConfigType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05abf370461b887b32e0f37bd8d84ed4530a5613#diff-9ea80dbbb853d30f5c3696009adcf253ccb8d5e9L115",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    async def async_setup(self, config: ConfigType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05abf370461b887b32e0f37bd8d84ed4530a5613#diff-9ea80dbbb853d30f5c3696009adcf253ccb8d5e9L145",
        "old_file": "homeassistant/helpers/entity_component.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/helpers/entity_component.py",
        "new_code": "    async def async_setup_entry(self, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/34e44e7f3a5cb5fb22200f05cbefce5e7bc785a5#diff-c36a1be3857c1662c08be5608d240d4302c3ab6aL73",
        "old_file": "homeassistant/components/homekit_controller/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/homekit_controller/switch.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f6ce5f2d051c91b688d8fe815ad77b62664334b9#diff-e0906b44c7e9abb881ed3f673c5edd24e578cc9aL69",
        "old_file": "homeassistant/components/zone/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/zone/__init__.py",
        "new_code": "def empty_value(value: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e0d2e5dcb044696fa02f581a26d088cee18ea2da#diff-fd836142b043c28ff129f8fea7a661896b73b553L229",
        "old_file": "homeassistant/components/mqtt/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "homeassistant/components/mqtt/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3461f3a1ed28014dc8d4fe8e3500507733ff38d6#diff-e9e51a87bd975230fc227d9da6919fc0648658b8L12",
        "old_file": "tests/components/brother/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 12,
        "new_file": "tests/components/brother/__init__.py",
        "new_code": "async def init_integration(hass) -> MockConfigEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d16d44d3e76b63812fa1efd5bb1e4bd325cc32ee#diff-a8256c3884d1675f6b8292d969129a3f01d87e8dL565",
        "old_file": "homeassistant/config.py",
        "old_line": 565,
        "old_code": "def _identify_config_schema(module: ModuleType) -> Tuple[Optional[str], Optional[Dict]]:",
        "new_line": 565,
        "new_file": "homeassistant/config.py",
        "new_code": "def _identify_config_schema(module: ModuleType) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/81cef9a2811c63f4f5f47f4846d1b6db604d52b5#diff-11bd906f43f41611e198efe4ee8760d5edfb4bbbL162",
        "old_file": "homeassistant/components/zha/core/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 162,
        "new_file": "homeassistant/components/zha/core/gateway.py",
        "new_code": "    async def async_load_devices(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d4fa761071cd76456093d786bcc31f8d635f901#diff-9c681d3f547257024116dd813517d1b0e6ddd1baL84",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": "    def __init__(self, entry_id: str, coordinator: WLEDDataUpdateCoordinator) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d4fa761071cd76456093d786bcc31f8d635f901#diff-9c681d3f547257024116dd813517d1b0e6ddd1baL104",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": "    def state(self) -> Union[None, str, int, float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d4fa761071cd76456093d786bcc31f8d635f901#diff-9c681d3f547257024116dd813517d1b0e6ddd1baL130",
        "old_file": "homeassistant/components/wled/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/wled/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/991afccbd4b8c9396b790eb3998fc355b8ddf43f#diff-d03242fc471c279a595ffc37e6be44c02cd2e366L220",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": 220,
        "old_code": "    def relay_channels(self) -> Dict[str, zha_typing.EventRelayChannelType]:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/991afccbd4b8c9396b790eb3998fc355b8ddf43f#diff-d03242fc471c279a595ffc37e6be44c02cd2e366L273",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": 273,
        "old_code": "    def add_relay_channels(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/991afccbd4b8c9396b790eb3998fc355b8ddf43f#diff-d03242fc471c279a595ffc37e6be44c02cd2e366L180",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 180,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def client_channels(self) -> Dict[str, zha_typing.ClientChannelType]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/991afccbd4b8c9396b790eb3998fc355b8ddf43f#diff-d03242fc471c279a595ffc37e6be44c02cd2e366L273",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def add_client_channels(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4e08aa8b055a50ed9e39c454fed247020eb53c95#diff-59328ce904525d13fb3b8895372fda33b71f0b40L69",
        "old_file": "homeassistant/components/zone/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/zone/__init__.py",
        "new_code": "def empty_value(value: Any) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0ae5c325fe6394711bb000bfb7daf4044ba45b6f#diff-a8256c3884d1675f6b8292d969129a3f01d87e8dL565",
        "old_file": "homeassistant/config.py",
        "old_line": 565,
        "old_code": "def _identify_config_schema(module: ModuleType) -> Tuple[Optional[str], Optional[Dict]]:",
        "new_line": 565,
        "new_file": "homeassistant/config.py",
        "new_code": "def _identify_config_schema(module: ModuleType) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2785b067e35e9d74d1173fd9db68294bf63d1881#diff-11bd906f43f41611e198efe4ee8760d5edfb4bbbL162",
        "old_file": "homeassistant/components/zha/core/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 162,
        "new_file": "homeassistant/components/zha/core/gateway.py",
        "new_code": "    async def async_load_devices(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/45241e57ca518e453be3707fc47ccc24df0d5eef#diff-9dcc314e8eb561e05ffc89954418bd546e3e6453L172",
        "old_file": "tests/components/minecraft_server/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "tests/components/minecraft_server/test_config_flow.py",
        "new_code": "async def test_connection_succeeded_with_srv_record(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/45241e57ca518e453be3707fc47ccc24df0d5eef#diff-9dcc314e8eb561e05ffc89954418bd546e3e6453L83",
        "old_file": "tests/components/minecraft_server/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "tests/components/minecraft_server/test_config_flow.py",
        "new_code": "async def test_show_config_form(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fb22f6c3011d8ab9afb71a287deac08c6a0b23b6#diff-d5e78420d23ae9b8d04f465681f4779e397beb94L904",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 904,
        "new_file": "homeassistant/core.py",
        "new_code": "    def async_remove(self, entity_id: str, context: Optional[Context] = None) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL154",
        "old_file": "homeassistant/components/zha/core/discovery.py",
        "old_line": "",
        "old_code": "",
        "new_line": 154,
        "new_file": "homeassistant/components/zha/core/discovery.py",
        "new_code": "    def initialize(self, hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL174",
        "old_file": "homeassistant/components/zha/core/discovery.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/components/zha/core/discovery.py",
        "new_code": "    def discover_group_entities(self, group: zha_typing.ZhaGroupType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL177",
        "old_file": "homeassistant/components/zha/core/gateway.py",
        "old_line": "",
        "old_code": "",
        "new_line": 177,
        "new_file": "homeassistant/components/zha/core/gateway.py",
        "new_code": "    def async_load_groups(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL34",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL39",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def group_id(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL44",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def endpoint(self) -> ZigpyEndpointType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL54",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def entity_domain(self, domain: Optional[str]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL59",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def members(self) -> List[ZhaDeviceType]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL67",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    async def async_add_members(self, member_ieee_addresses: List[EUI64]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL81",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 81,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    async def async_remove_members(self, member_ieee_addresses: List[EUI64]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL98",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def member_entity_ids(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL110",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def domain_entity_ids(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL129",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def async_get_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL89",
        "old_file": "homeassistant/components/zha/core/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/components/zha/core/helpers.py",
        "new_code": "def find_state_attributes(states: List[State], key: str) -> Iterator[Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL309",
        "old_file": "homeassistant/components/zha/core/registries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 309,
        "new_file": "homeassistant/components/zha/core/registries.py",
        "new_code": "    def get_group_entity(self, component: str) -> CALLABLE_T:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL363",
        "old_file": "homeassistant/components/zha/core/registries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 363,
        "new_file": "homeassistant/components/zha/core/registries.py",
        "new_code": "    def group_match(self, component: str) -> Callable[[CALLABLE_T], CALLABLE_T]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL34",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 34,
        "old_code": "    def __init__(self, hass: HomeAssistantType) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL41",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 41,
        "old_code": "    def async_create(self, device) -> ZhaDeviceEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL51",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 51,
        "old_code": "    def async_get_or_create(self, device) -> ZhaDeviceEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL59",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 59,
        "old_code": "    def async_create_or_update(self, device) -> ZhaDeviceEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL66",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 66,
        "old_code": "    def async_delete(self, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL74",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 74,
        "old_code": "    def async_update(self, device) -> ZhaDeviceEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL86",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 86,
        "old_code": "    async def async_load(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL103",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 103,
        "old_code": "    def async_schedule_save(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL107",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 107,
        "old_code": "    async def async_save(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL112",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 112,
        "old_code": "    def _data_to_save(self) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL131",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 131,
        "old_code": "        async def _load_reg() -> ZhaDeviceStorage:",
        "new_line": 210,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "        async def _load_reg() -> ZhaStorage:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL125",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 125,
        "old_code": "async def async_get_registry(hass: HomeAssistantType) -> ZhaDeviceStorage:",
        "new_line": 204,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "async def async_get_registry(hass: HomeAssistantType) -> ZhaStorage:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL45",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def __init__(self, hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL53",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_create_device(self, device: ZhaDeviceType) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL63",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_create_group(self, group: ZhaGroupType) -> ZhaGroupEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL74",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_get_or_create_device(self, device: ZhaDeviceType) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL82",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_get_or_create_group(self, group: ZhaGroupType) -> ZhaGroupEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL90",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_create_or_update_device(self, device: ZhaDeviceType) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL97",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_create_or_update_group(self, group: ZhaGroupType) -> ZhaGroupEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL104",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_delete_device(self, device: ZhaDeviceType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL112",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_delete_group(self, group: ZhaGroupType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL120",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_update_device(self, device: ZhaDeviceType) -> ZhaDeviceEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL133",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_update_group(self, group: ZhaGroupType) -> ZhaGroupEntry:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL145",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    async def async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL174",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def async_schedule_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL178",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 178,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    async def async_save(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL183",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": "",
        "old_code": "",
        "new_line": 183,
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": "    def _data_to_save(self) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL58",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 58,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL73",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 73,
        "old_code": "    def force_update(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL78",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 78,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL158",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 158,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL49",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL54",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL59",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def zha_device(self) -> ZhaDeviceType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL64",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL69",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL74",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL79",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL93",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL98",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def async_set_available(self, available: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL104",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def async_update_state_attribute(self, key: str, value: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL110",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def async_set_state(self, attr_id: int, attr_name: str, value: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL114",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL125",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 125,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL134",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 134,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def async_restore_last_state(self, last_state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL197",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 197,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_check_recently_seen(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL110",
        "old_file": "homeassistant/components/zha/light.py",
        "old_line": 110,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL128",
        "old_file": "homeassistant/components/zha/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 128,
        "new_file": "homeassistant/components/zha/light.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2a3c94bad04386c5b59a45cab5232fbc647897e2#diff-0d57565eb49b37c6473b248c8953f351292f171cL134",
        "old_file": "homeassistant/components/zha/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 134,
        "new_file": "homeassistant/components/zha/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d5f4dfdd6bea6e804af18fb9155bd3d1a9272ad9#diff-03a1716b0fb2df2b3cd5757d447757b90b750887L160",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": 160,
        "old_code": "    async def _current_app_name(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL51",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": 51,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL56",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL62",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    async def async_turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL70",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL94",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL102",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    def async_restore_last_state(self, last_state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eb8e8d00a6c8039ec7adeeec70cf0c981d8db82c#diff-ac663e61aa37f4b99c748e21d77275a4cd533e1aL106",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL54",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 54,
        "old_code": "    def entity_domain(self, domain: Optional[str]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL110",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 110,
        "old_code": "    def domain_entity_ids(self) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL98",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 98,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def get_domain_entity_ids(self, domain) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL49",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 49,
        "old_code": "    def entity_domain(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL63",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 63,
        "old_code": "    def async_create_group(self, group: ZhaGroupType) -> ZhaGroupEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL82",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 82,
        "old_code": "    def async_get_or_create_group(self, group: ZhaGroupType) -> ZhaGroupEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL97",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 97,
        "old_code": "    def async_create_or_update_group(self, group: ZhaGroupType) -> ZhaGroupEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL112",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 112,
        "old_code": "    def async_delete_group(self, group: ZhaGroupType) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL133",
        "old_file": "homeassistant/components/zha/core/store.py",
        "old_line": 133,
        "old_code": "    def async_update_group(self, group: ZhaGroupType) -> ZhaGroupEntry:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/store.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL90",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 90,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL95",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 95,
        "old_code": "    def speed_list(self) -> list:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL100",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 100,
        "old_code": "    def speed(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL105",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 105,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL122",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 122,
        "old_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL129",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 129,
        "old_code": "    async def async_turn_off(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL133",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 133,
        "old_code": "    async def async_set_speed(self, speed: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL86",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL91",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL96",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL103",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL107",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL114",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f767dd3ef1b9474486bc5991307fcd6c72a02a8#diff-16c31ef1126e1cf4de7efe23919305608b8bc19eL118",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 118,
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f7ae78f78e636fd47655051528e243199e5b0029#diff-a5add85ae6534bc0931f329ba475e09928da45c7L210",
        "old_file": "homeassistant/components/zha/fan.py",
        "old_line": 210,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f7ae78f78e636fd47655051528e243199e5b0029#diff-a5add85ae6534bc0931f329ba475e09928da45c7L372",
        "old_file": "homeassistant/components/zha/light.py",
        "old_line": 372,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f7ae78f78e636fd47655051528e243199e5b0029#diff-a5add85ae6534bc0931f329ba475e09928da45c7L154",
        "old_file": "homeassistant/components/zha/switch.py",
        "old_line": 154,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/188ca630de37f57cb9e84dbebbc02a93751236a4#diff-11a7359902f5a8b8ea6ea86e879e97a6e37acae2L117",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1cd0e764b6a11d06ea2f640804493fe944986ff7#diff-8f7c9dbd0d5d419507884d067573f6c7ca0f7b37L175",
        "old_file": "homeassistant/components/homematicip_cloud/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "homeassistant/components/homematicip_cloud/device.py",
        "new_code": "    def _get_label_by_channel(self, channel: int) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1cd0e764b6a11d06ea2f640804493fe944986ff7#diff-8f7c9dbd0d5d419507884d067573f6c7ca0f7b37L75",
        "old_file": "homeassistant/components/homematicip_cloud/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/homematicip_cloud/light.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1cd0e764b6a11d06ea2f640804493fe944986ff7#diff-8f7c9dbd0d5d419507884d067573f6c7ca0f7b37L157",
        "old_file": "homeassistant/components/homematicip_cloud/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 157,
        "new_file": "homeassistant/components/homematicip_cloud/switch.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f42804805c4cf8882c4bd602f71c5aeb693c6114#diff-1fad0cfb908a5463fe4c7b55dc4e363187caf314L152",
        "old_file": "homeassistant/components/tado/sensor.py",
        "old_line": 152,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3e0ccd2e86df00706ff6c3fdb4c93f2563459055#diff-2d56d2a77a00b29bfc82ebd8f695587331701c07L360",
        "old_file": "homeassistant/components/kef/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/kef/media_player.py",
        "new_code": "    async def update_dsp(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L28",
        "old_file": "homeassistant/components/directv/config_flow.py",
        "old_line": 28,
        "old_code": "def validate_input(data: Dict) -> Dict:",
        "new_line": 28,
        "new_file": "homeassistant/components/directv/config_flow.py",
        "new_code": "async def validate_input(hass: HomeAssistantType, data: dict) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L50",
        "old_file": "homeassistant/components/directv/config_flow.py",
        "old_line": 50,
        "old_code": "    def _show_form(self, errors: Optional[Dict] = None) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/directv/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L127",
        "old_file": "homeassistant/components/directv/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/components/directv/config_flow.py",
        "new_code": "    def _show_setup_form(self, errors: Optional[Dict] = None) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L20",
        "old_file": "tests/components/directv/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "tests/components/directv/__init__.py",
        "new_code": "def mock_connection(aioclient_mock: AiohttpClientMocker) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L77",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 77,
        "old_code": "async def setup_directv(hass: HomeAssistantType) -> MockConfigEntry:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L85",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 85,
        "old_code": "async def setup_directv_with_locations(hass: HomeAssistantType) -> MockConfigEntry:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b892dbc6ea0d76774d36b8b3e313ff54d620acdf#diff-ed94967af2183b41e5160e352ff6fcb9acb43a18L181",
        "old_file": "tests/components/directv/test_media_player.py",
        "old_line": 181,
        "old_code": "async def test_setup_with_multiple_locations(hass: HomeAssistantType) -> None:",
        "new_line": "",
        "new_file": "tests/components/directv/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83fb5e50719626dfcd37a5f7a7233738c192964b#diff-6e492e4f0e9ec257e47eadb40808d6797d858e4fL33",
        "old_file": "tests/components/ipp/test_config_flow.py",
        "old_line": 33,
        "old_code": "async def test_show_zeroconf_confirm_form(hass: HomeAssistant) -> None:",
        "new_line": "",
        "new_file": "tests/components/ipp/test_config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83fb5e50719626dfcd37a5f7a7233738c192964b#diff-6e492e4f0e9ec257e47eadb40808d6797d858e4fL23",
        "old_file": "tests/components/ipp/test_config_flow.py",
        "old_line": 23,
        "old_code": "async def test_show_user_form(hass: HomeAssistant) -> None:",
        "new_line": "",
        "new_file": "tests/components/ipp/test_config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eff9b2a1a0bfffbb3da14934b9851119de6c28c9#diff-5abdfa39982c5c539dac4deaa022464bdf2f20bcL149",
        "old_file": "homeassistant/components/zha/core/channels/base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/components/zha/core/channels/base.py",
        "new_code": "    async def configure_reporting(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4a32a0f1daf12f7b9f4fb9aef60576be944b6116#diff-ebbe501e8e65ccb037f312e24ef06a5a2573d0f2L24",
        "old_file": "homeassistant/util/network.py",
        "old_line": "",
        "old_code": "",
        "new_line": 24,
        "new_file": "homeassistant/util/network.py",
        "new_code": "def is_loopback(address: Union[IPv4Address, IPv6Address]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4a32a0f1daf12f7b9f4fb9aef60576be944b6116#diff-ebbe501e8e65ccb037f312e24ef06a5a2573d0f2L29",
        "old_file": "homeassistant/util/network.py",
        "old_line": "",
        "old_code": "",
        "new_line": 29,
        "new_file": "homeassistant/util/network.py",
        "new_code": "def is_private(address: Union[IPv4Address, IPv6Address]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4a32a0f1daf12f7b9f4fb9aef60576be944b6116#diff-ebbe501e8e65ccb037f312e24ef06a5a2573d0f2L34",
        "old_file": "homeassistant/util/network.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/util/network.py",
        "new_code": "def is_link_local(address: Union[IPv4Address, IPv6Address]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aaa1d068091162bf351805273330bb936382594b#diff-d7e01a0aac2688274c9e7f602b1d311ced8c18b2L212",
        "old_file": "homeassistant/components/iaqualink/__init__.py",
        "old_line": 212,
        "old_code": "    def _update_callback(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/iaqualink/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/23e091696e50e29034f4dde450f6ab20dad0803b#diff-15da1e75e5e044836f78aab3008f6e8846725539L356",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 356,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ebbabcdd162046e71ea642220e5b7c4bb8e89f3#diff-c02d825767f3253e0dbbcf5746563cd9f8526f26L26",
        "old_file": "homeassistant/components/axis/axis_base.py",
        "old_line": 26,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/axis/axis_base.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/457d439e24e64a73c610d723662e5aefc6bc5e03#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1049",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 1049,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/457d439e24e64a73c610d723662e5aefc6bc5e03#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1253",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 1253,
        "old_code": "    def _cleanup_on_remove(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/457d439e24e64a73c610d723662e5aefc6bc5e03#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1049",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1049,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/457d439e24e64a73c610d723662e5aefc6bc5e03#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1258",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1258,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    def _cleanup_discovery_on_remove(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L52",
        "old_file": "homeassistant/components/dynalite/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/dynalite/__init__.py",
        "new_code": "def num_string(value: Union[int, str]) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L99",
        "old_file": "homeassistant/components/dynalite/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/dynalite/__init__.py",
        "new_code": "def validate_area(config: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L172",
        "old_file": "homeassistant/components/dynalite/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/dynalite/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, config: Dict[str, Any]) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L204",
        "old_file": "homeassistant/components/dynalite/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 204,
        "new_file": "homeassistant/components/dynalite/__init__.py",
        "new_code": "async def async_entry_changed(hass: HomeAssistant, entry: ConfigEntry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L212",
        "old_file": "homeassistant/components/dynalite/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 212,
        "new_file": "homeassistant/components/dynalite/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L230",
        "old_file": "homeassistant/components/dynalite/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 230,
        "new_file": "homeassistant/components/dynalite/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistant, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L23",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    def __init__(self, hass: HomeAssistant, config: Dict[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L37",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 37,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    async def async_setup(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L43",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    def reload_config(self, config: Dict[str, Any]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L48",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    def update_signal(self, device: \"DynaliteBaseDevice\" = None) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L57",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    def update_device(self, device: \"DynaliteBaseDevice\") -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L70",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    def register_add_devices(self, platform: str, async_add_devices: Callable) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L76",
        "old_file": "homeassistant/components/dynalite/bridge.py",
        "old_line": "",
        "old_code": "",
        "new_line": 76,
        "new_file": "homeassistant/components/dynalite/bridge.py",
        "new_code": "    def add_devices_when_registered(self, devices: List[\"DynaliteBaseDevice\"]) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L17",
        "old_file": "homeassistant/components/dynalite/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 17,
        "new_file": "homeassistant/components/dynalite/config_flow.py",
        "new_code": "    def __init__(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L21",
        "old_file": "homeassistant/components/dynalite/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "homeassistant/components/dynalite/config_flow.py",
        "new_code": "    async def async_step_import(self, import_info: Dict[str, Any]) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L39",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    def __init__(self, device: Any, bridge: DynaliteBridge) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L46",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L51",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L56",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L61",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L69",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/39408ab2408207ced5b13d181e59e0b316f3f1c5#diff-431b891e508e33b550138c79ade2686b29c9c9c0L88",
        "old_file": "homeassistant/components/dynalite/dynalitebase.py",
        "old_line": "",
        "old_code": "",
        "new_line": 88,
        "new_file": "homeassistant/components/dynalite/dynalitebase.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b2c45e668aaec938650438c5b7a9746d718b90b#diff-b51bdce1a22032c71ff5124c72b8e9372ad52f22L145",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def device_state_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b2c45e668aaec938650438c5b7a9746d718b90b#diff-b51bdce1a22032c71ff5124c72b8e9372ad52f22L233",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 233,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    async def async_set_vane_horizontal(self, position: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b2c45e668aaec938650438c5b7a9746d718b90b#diff-b51bdce1a22032c71ff5124c72b8e9372ad52f22L241",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 241,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    async def async_set_vane_vertical(self, position: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/cb058ff6c08d9a80f53d04e8c88019b4506249eb#diff-0ce5f39d09631d1fbdb593b06e9fdad1816089abL121",
        "old_file": "homeassistant/components/flunearyou/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/flunearyou/sensor.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/081b822d25a05b7e16c3e34e729e0ceb7459bbcc#diff-1c7e29da837e966d1e6c33f5d88a3f9a60824b88L387",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 387,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/081b822d25a05b7e16c3e34e729e0ceb7459bbcc#diff-1c7e29da837e966d1e6c33f5d88a3f9a60824b88L398",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 398,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/081b822d25a05b7e16c3e34e729e0ceb7459bbcc#diff-1c7e29da837e966d1e6c33f5d88a3f9a60824b88L403",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 403,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def sound_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/081b822d25a05b7e16c3e34e729e0ceb7459bbcc#diff-1c7e29da837e966d1e6c33f5d88a3f9a60824b88L408",
        "old_file": "homeassistant/components/vizio/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 408,
        "new_file": "homeassistant/components/vizio/media_player.py",
        "new_code": "    def sound_mode_list(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/83cc871edfb49850e686e65969c28e3004a05ea6#diff-623a8c33b4459c930baad0d3d0254a68581f3263L205",
        "old_file": "homeassistant/components/timer/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 205,
        "new_file": "homeassistant/components/timer/__init__.py",
        "new_code": "    def force_update(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL55",
        "old_file": "homeassistant/components/vera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/vera/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, base_config: dict) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL136",
        "old_file": "homeassistant/components/vera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/vera/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistant, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL71",
        "old_file": "homeassistant/components/vera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "homeassistant/components/vera/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL136",
        "old_file": "tests/components/vera/test_climate.py",
        "old_line": 136,
        "old_code": "    def setup_callback(controller: VeraController, hass_config: dict) -> None:",
        "new_line": 136,
        "new_file": "tests/components/vera/test_climate.py",
        "new_code": "    def setup_callback(controller: pv.VeraController) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL136",
        "old_file": "tests/components/vera/test_climate.py",
        "old_line": 136,
        "old_code": "    def setup_callback(controller: VeraController, hass_config: dict) -> None:",
        "new_line": "",
        "new_file": "tests/components/vera/test_climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL30",
        "old_file": "tests/components/vera/test_init.py",
        "old_line": 30,
        "old_code": "def new_vera_device(cls, device_id: int) -> VeraDevice:",
        "new_line": "",
        "new_file": "tests/components/vera/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL38",
        "old_file": "tests/components/vera/test_init.py",
        "old_line": 38,
        "old_code": "def assert_hass_vera_devices(hass: HomeAssistant, platform: str, arr_len: int) -> None:",
        "new_line": "",
        "new_file": "tests/components/vera/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ae22b5187aaf189e45ff00081e17cf679ce67491#diff-dcbc607cd8d90e2fa5d3676da322638cc4f0ddcfL49",
        "old_file": "tests/components/vera/test_init.py",
        "old_line": 49,
        "old_code": "    def setup_callback(controller: VeraController, hass_config: dict) -> None:",
        "new_line": "",
        "new_file": "tests/components/vera/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/912eb321d95f87558329cca2110db416e648c15c#diff-69b49ce2233a6031f2fbb48d487574d0848d1d90L804",
        "old_file": "homeassistant/components/xiaomi_miio/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 804,
        "new_file": "homeassistant/components/xiaomi_miio/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dc7127aacfa92e80658684679174e72cd5f732ea#diff-41d9bdaa3fe39aee394facccef282dd926a38eb0L65",
        "old_file": "homeassistant/helpers/update_coordinator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/helpers/update_coordinator.py",
        "new_code": "    def async_add_listener(self, update_callback: CALLBACK_TYPE) -> Callable[[], None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f1d3c0d19b4065a1f6ec80ecdc080380f728196c#diff-6713f09e342047b83f5e1b4c76047ac16a1459f7L75",
        "old_file": "script/hassfest/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "script/hassfest/model.py",
        "new_code": "    def requirements(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f1d3c0d19b4065a1f6ec80ecdc080380f728196c#diff-6713f09e342047b83f5e1b4c76047ac16a1459f7L80",
        "old_file": "script/hassfest/model.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "script/hassfest/model.py",
        "new_code": "    def dependencies(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05192b7164cb1d5413cef55823329d5b392897d4#diff-70add2e002ee9bab0b44e18d0fa5f47e484d37dfL251",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 251,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def swing_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05192b7164cb1d5413cef55823329d5b392897d4#diff-70add2e002ee9bab0b44e18d0fa5f47e484d37dfL255",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 255,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    async def async_set_swing_mode(self, swing_mode) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/05192b7164cb1d5413cef55823329d5b392897d4#diff-70add2e002ee9bab0b44e18d0fa5f47e484d37dfL260",
        "old_file": "homeassistant/components/melcloud/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 260,
        "new_file": "homeassistant/components/melcloud/climate.py",
        "new_code": "    def swing_modes(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/debc1f78d49e463f85aeee1c0b400d103c1d9e44#diff-48cdfa2412f3f3def92dc46c63c5f7192ae3c221L96",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def zigbee_signature(self) -> Dict[int, Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/debc1f78d49e463f85aeee1c0b400d103c1d9e44#diff-48cdfa2412f3f3def92dc46c63c5f7192ae3c221L243",
        "old_file": "homeassistant/components/zha/core/channels/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "homeassistant/components/zha/core/channels/__init__.py",
        "new_code": "    def zigbee_signature(self) -> Tuple[int, Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/debc1f78d49e463f85aeee1c0b400d103c1d9e44#diff-48cdfa2412f3f3def92dc46c63c5f7192ae3c221L275",
        "old_file": "homeassistant/components/zha/core/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 275,
        "new_file": "homeassistant/components/zha/core/device.py",
        "new_code": "    def zigbee_signature(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dde93304d3a7ba1f438a0b9d1764393158280fad#diff-9280f373ca509aed8e3645b843362e604db6a8dcL45",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": 45,
        "old_code": "def number(value: Any) -> Union[int, float]:",
        "new_line": "",
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dde93304d3a7ba1f438a0b9d1764393158280fad#diff-9280f373ca509aed8e3645b843362e604db6a8dcL213",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": 213,
        "old_code": "    def device_class(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dde93304d3a7ba1f438a0b9d1764393158280fad#diff-9280f373ca509aed8e3645b843362e604db6a8dcL218",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": 218,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dde93304d3a7ba1f438a0b9d1764393158280fad#diff-9280f373ca509aed8e3645b843362e604db6a8dcL1203",
        "old_file": "homeassistant/components/wunderground/sensor.py",
        "old_line": 1203,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/wunderground/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dde93304d3a7ba1f438a0b9d1764393158280fad#diff-9280f373ca509aed8e3645b843362e604db6a8dcL49",
        "old_file": "homeassistant/scripts/check_config.py",
        "old_line": 49,
        "old_code": "def run(script_args: List) -> int:",
        "new_line": "",
        "new_file": "homeassistant/scripts/check_config.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bf1b408038a0b0bf3201d3752e17b4db6fbabe69#diff-bab9dfd6905a63d21acc8cc43d41de2d2ea0ad42L1238",
        "old_file": "homeassistant/core.py",
        "old_line": 1238,
        "old_code": "    async def _safe_execute(self, handler: Service, service_call: ServiceCall) -> None:",
        "new_line": "",
        "new_file": "homeassistant/core.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/927c2314c4e7cac55f9ac0cf92a109c5147ea9fe#diff-7e11a796de35e1679d3d3ceefff95b14820e449fL173",
        "old_file": "homeassistant/components/ipp/__init__.py",
        "old_line": 173,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/ipp/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L230",
        "old_file": "homeassistant/components/cloud/alexa_config.py",
        "old_line": 230,
        "old_code": "    async def _sync_helper(self, to_update, to_remove) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/cloud/alexa_config.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L57",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 57,
        "old_code": "    def __init__(self, api_data) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L62",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 62,
        "old_code": "    def update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L72",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 72,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L77",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 77,
        "old_code": "    def state(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L85",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 85,
        "old_code": "    def unit_of_measurement(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L93",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 93,
        "old_code": "    def device_state_attributes(self) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L119",
        "old_file": "homeassistant/components/n26/sensor.py",
        "old_line": 119,
        "old_code": "    def icon(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L43",
        "old_file": "homeassistant/components/n26/switch.py",
        "old_line": 43,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/n26/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fca90a8ddcbeff5f1ad6316f8703a7b7732b0da8#diff-d8a8340cefdd5e7ed0f4f9b544f36573bd1de027L53",
        "old_file": "homeassistant/data_entry_flow.py",
        "old_line": 53,
        "old_code": "    def __init__(self, hass: HomeAssistant,) -> None:",
        "new_line": "",
        "new_file": "homeassistant/data_entry_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e3e2e817e51e082ae0216763ac330a2ac35a0a68#diff-f212843eb1fa972bfb4dfb3ee7ce353c0a800321L85",
        "old_file": "homeassistant/components/rachio/webhooks.py",
        "old_line": 85,
        "old_code": "    async def post(self, request) -> web.Response:",
        "new_line": "",
        "new_file": "homeassistant/components/rachio/webhooks.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f53dfc4308e43d2f948fba45e23801b8d773abef#diff-130e115a5cee7b66d4e29b9187f936fd80b1baefL210",
        "old_file": "homeassistant/components/airvisual/sensor.py",
        "old_line": 210,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/airvisual/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f3b6575272e3949c7dd02ebdb95a165747e07223#diff-decd82e751b2b8ea5f31c899f6f0bd78fc4b7eddL1042",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 1042,
        "old_code": "    def __init__(self, config: dict) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f3b6575272e3949c7dd02ebdb95a165747e07223#diff-decd82e751b2b8ea5f31c899f6f0bd78fc4b7eddL916",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 916,
        "old_code": "    def _mqtt_on_connect(self, _mqttc, _userdata, _flags, result_code: int) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/eae21be5b9766fbefbaa0b71a7745e6e4b77e3c5#diff-a48e36a79327c27377ff7c835f85a8465fc1d4e2L235",
        "old_file": "homeassistant/components/notion/__init__.py",
        "old_line": 235,
        "old_code": "    def device_state_attributes(self) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/notion/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a3e84791c6bed7e841205be76bcd210d7db6234d#diff-cb3245a44fb0aff41a444077af0c3512601f12c0L117",
        "old_file": "homeassistant/components/nws/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 117,
        "new_file": "homeassistant/components/nws/weather.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a3e84791c6bed7e841205be76bcd210d7db6234d#diff-cb3245a44fb0aff41a444077af0c3512601f12c0L129",
        "old_file": "homeassistant/components/nws/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/nws/weather.py",
        "new_code": "    def _update_callback(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a3e84791c6bed7e841205be76bcd210d7db6234d#diff-cb3245a44fb0aff41a444077af0c3512601f12c0L140",
        "old_file": "homeassistant/components/nws/weather.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/nws/weather.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/899e7bfb5a7cf441596cbd05b2aa81dbff37601a#diff-15da1e75e5e044836f78aab3008f6e8846725539L356",
        "old_file": "homeassistant/components/netatmo/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 356,
        "new_file": "homeassistant/components/netatmo/climate.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/08b0c1178be1421ba6abea283622efee54a69871#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1049",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 1049,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/08b0c1178be1421ba6abea283622efee54a69871#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1253",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 1253,
        "old_code": "    def _cleanup_on_remove(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/08b0c1178be1421ba6abea283622efee54a69871#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1049",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1049,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/08b0c1178be1421ba6abea283622efee54a69871#diff-4e48b26cfce9abc1984eddfa36095bfe310302bdL1258",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1258,
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": "    def _cleanup_discovery_on_remove(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8a68b1a3a9b5e7775e71401b8c4925936b6334c6#diff-78c8070b5ac45f11c65752ef3ccb61ba7efbf6b9L1043",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 1043,
        "old_code": "    def __init__(self, config: dict) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8a68b1a3a9b5e7775e71401b8c4925936b6334c6#diff-78c8070b5ac45f11c65752ef3ccb61ba7efbf6b9L917",
        "old_file": "homeassistant/components/mqtt/__init__.py",
        "old_line": 917,
        "old_code": "    def _mqtt_on_connect(self, _mqttc, _userdata, _flags, result_code: int) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/mqtt/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/df744c5944dbee2015965bbbb9136e349bc1112e#diff-e4161d9e917a9fcc9ac13fb22140ca8fd20bba4aL212",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": 212,
        "old_code": "    def do_update_retry(self, update_state: bool) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/df744c5944dbee2015965bbbb9136e349bc1112e#diff-e4161d9e917a9fcc9ac13fb22140ca8fd20bba4aL240",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": 240,
        "old_code": "    def get_light_features_retry(self) -> LightFeatures:",
        "new_line": "",
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/df744c5944dbee2015965bbbb9136e349bc1112e#diff-e4161d9e917a9fcc9ac13fb22140ca8fd20bba4aL279",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": 279,
        "old_code": "    def get_light_state_retry(self, light_features: LightFeatures) -> LightState:",
        "new_line": "",
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7dd42bc32d70f5ef2bb7a5910226a6672523d3eb#diff-4d009fa18604e981334e812154d62b6d3de280b0L271",
        "old_file": "homeassistant/components/august/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 271,
        "new_file": "homeassistant/components/august/sensor.py",
        "new_code": "    def old_unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b46eee04e475a1211e10252bca30c4a46f1d474e#diff-6f67618df486603f771f7e3eafad6f059095c416L180",
        "old_file": "tests/components/vizio/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 180,
        "new_file": "tests/components/vizio/test_config_flow.py",
        "new_code": "async def test_tv_options_flow_start_with_volume(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b46eee04e475a1211e10252bca30c4a46f1d474e#diff-6f67618df486603f771f7e3eafad6f059095c416L107",
        "old_file": "tests/components/vizio/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "tests/components/vizio/test_config_flow.py",
        "new_code": "async def test_speaker_options_flow(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/38455395778bb948867052d03b09492077fad3fb#diff-03fadcd8549c3479578415ed85a4a3d389f405ceL56",
        "old_file": "homeassistant/components/cast/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/cast/helpers.py",
        "new_code": "    def manufacturer(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/a0b3a9e50b6b520dba9440222ab57ad33ef845d6#diff-189cba6a8c37588e2b774a070d91bde4440c7bcbL97",
        "old_file": "tests/components/cast/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "tests/components/cast/test_media_player.py",
        "new_code": "    def discover_chromecast(service_name: str, info: ChromecastInfo) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d3046cb426fe83fdcb002052c64729caf42cf9e#diff-fc6d8d11b803de7d045180e638d1b359990175d4L102",
        "old_file": "homeassistant/components/cast/helpers.py",
        "old_line": 102,
        "old_code": "    def same_dynamic_group(self, other: \"ChromecastInfo\") -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/cast/helpers.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/13dda7bd9859835e25412c3596b25dfc9f6fb334#diff-5bf8c6180f7af6dfe28899d62781461e172dd99eL189",
        "old_file": "homeassistant/components/zha/core/discovery.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "homeassistant/components/zha/core/discovery.py",
        "new_code": "    def _reprobe_group(self, group_id: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/13dda7bd9859835e25412c3596b25dfc9f6fb334#diff-5bf8c6180f7af6dfe28899d62781461e172dd99eL116",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 116,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/13dda7bd9859835e25412c3596b25dfc9f6fb334#diff-5bf8c6180f7af6dfe28899d62781461e172dd99eL136",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 136,
        "old_code": "    def async_restore_last_state(self, last_state) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/13dda7bd9859835e25412c3596b25dfc9f6fb334#diff-5bf8c6180f7af6dfe28899d62781461e172dd99eL120",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/13dda7bd9859835e25412c3596b25dfc9f6fb334#diff-5bf8c6180f7af6dfe28899d62781461e172dd99eL199",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def async_restore_last_state(self, last_state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/13dda7bd9859835e25412c3596b25dfc9f6fb334#diff-5bf8c6180f7af6dfe28899d62781461e172dd99eL166",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL75",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def udn(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL80",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL85",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 85,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def manufacturer(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL90",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def model_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL95",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def device_type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL99",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 99,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def __str__(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL124",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 124,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL129",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 129,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL134",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 134,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL142",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 142,
        "old_code": "    def icon(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL147",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 147,
        "old_code": "    def unit_of_measurement(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL205",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 205,
        "old_code": "    def _is_overflowed(self, new_value) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL238",
        "old_file": "homeassistant/components/upnp/sensor.py",
        "old_line": 238,
        "old_code": "    async def _async_fetch_value(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/upnp/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL31",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": "    def udn(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL36",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": "    def manufacturer(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL41",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL46",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": "    def model_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dfc66b20186e085a42518b00497071c1294b9eb4#diff-7bcb191a7f0aa8595de2c401ec7fbf5ce871068dL51",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": "    def device_type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2af1de27338adc6dca49b0e8c5f98957947d0f2#diff-f42277910e86880447eb522b7f2d285c94e4aec3L53",
        "old_file": "homeassistant/loader.py",
        "old_line": 53,
        "old_code": "def manifest_from_legacy_module(domain: str, module: ModuleType) -> Dict:",
        "new_line": "",
        "new_file": "homeassistant/loader.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b2af1de27338adc6dca49b0e8c5f98957947d0f2#diff-f42277910e86880447eb522b7f2d285c94e4aec3L77",
        "old_file": "homeassistant/loader.py",
        "old_line": 77,
        "old_code": "    def get_sub_directories(paths: List[str]) -> List[pathlib.Path]:",
        "new_line": "",
        "new_file": "homeassistant/loader.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b1626a74874a724b534b4c4aab7518c55f6b18b#diff-d49c0e75ec3d15e22fc935692b321f9369a0f30cL241",
        "old_file": "homeassistant/components/tado/climate.py",
        "old_line": 241,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4b1626a74874a724b534b4c4aab7518c55f6b18b#diff-d49c0e75ec3d15e22fc935692b321f9369a0f30cL153",
        "old_file": "homeassistant/components/tado/water_heater.py",
        "old_line": 153,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/tado/water_heater.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ec2c7ea932ca686d462f30c0ac09f4f04eca547b#diff-942a12466a386bb65779cbcd9a96af5ee7c37884L33",
        "old_file": "homeassistant/components/cast/helpers.py",
        "old_line": 33,
        "old_code": "    def is_information_complete(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/cast/helpers.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fffda27385e6eefadf88ceafdc94232ac4bf5d98#diff-a88e8e4abe4436722ebd39031878489b5da6f928L33",
        "old_file": "homeassistant/components/daikin/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/daikin/sensor.py",
        "new_code": "    def __init__(self, api, monitored_state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c7ab5de07c60e3bfc19ffb19b1e87ef254f5510c#diff-246048146c4e73663ec4aecf4d5de488feedfdebL26",
        "old_file": "homeassistant/components/totalconnect/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/totalconnect/alarm_control_panel.py",
        "new_code": "async def async_setup_entry(hass, entry, async_add_entities) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c7ab5de07c60e3bfc19ffb19b1e87ef254f5510c#diff-246048146c4e73663ec4aecf4d5de488feedfdebL16",
        "old_file": "homeassistant/components/totalconnect/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 16,
        "new_file": "homeassistant/components/totalconnect/binary_sensor.py",
        "new_code": "async def async_setup_entry(hass, entry, async_add_entities) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d24a65313f0c8413c71feeca79f2f0ff79d2b60#diff-9912df308a20fea0789d4bd994e8b2fcdbc7508fL169",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": 169,
        "old_code": "    def turn_on(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d24a65313f0c8413c71feeca79f2f0ff79d2b60#diff-9912df308a20fea0789d4bd994e8b2fcdbc7508fL194",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": 194,
        "old_code": "    def turn_off(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d24a65313f0c8413c71feeca79f2f0ff79d2b60#diff-9912df308a20fea0789d4bd994e8b2fcdbc7508fL166",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    async def async_turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d24a65313f0c8413c71feeca79f2f0ff79d2b60#diff-9912df308a20fea0789d4bd994e8b2fcdbc7508fL191",
        "old_file": "homeassistant/components/demo/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "homeassistant/components/demo/light.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/89fe488b7ccee0cf368e284ae0afb812edb9772d#diff-792c81b9a343d311aff44ccb8e47bfb5efd4a329L330",
        "old_file": "homeassistant/components/config/config_entries.py",
        "old_line": "",
        "old_code": "",
        "new_line": 330,
        "new_file": "homeassistant/components/config/config_entries.py",
        "new_code": "def entry_json(entry: config_entries.ConfigEntry) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5fc0e00eada8f177d4df396c998333e6f809f89b#diff-78b09eaf3fdf61c7b9579f23a8ec608a55673a14L113",
        "old_file": "homeassistant/components/tesla/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/tesla/climate.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5fc0e00eada8f177d4df396c998333e6f809f89b#diff-78b09eaf3fdf61c7b9579f23a8ec608a55673a14L122",
        "old_file": "homeassistant/components/tesla/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 122,
        "new_file": "homeassistant/components/tesla/climate.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/5fc0e00eada8f177d4df396c998333e6f809f89b#diff-78b09eaf3fdf61c7b9579f23a8ec608a55673a14L130",
        "old_file": "homeassistant/components/tesla/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/tesla/climate.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1ac8442c63cce5222aee4cde287a63921f1d2791#diff-568b37e05f0ba187b406ae6f42873019a76d966eL385",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 385,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def might_2fa_traits(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ebac7b7aad75962af659cd95e8229c57ecfc7c36#diff-c0c73399183a0ed5a99f93651b39375bdbad72e2L224",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": 224,
        "old_code": "    def do_update_retry(self, update_state: bool) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ebac7b7aad75962af659cd95e8229c57ecfc7c36#diff-c0c73399183a0ed5a99f93651b39375bdbad72e2L252",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": 252,
        "old_code": "    def get_light_features_retry(self) -> LightFeatures:",
        "new_line": "",
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ebac7b7aad75962af659cd95e8229c57ecfc7c36#diff-c0c73399183a0ed5a99f93651b39375bdbad72e2L291",
        "old_file": "homeassistant/components/tplink/light.py",
        "old_line": 291,
        "old_code": "    def get_light_state_retry(self, light_features: LightFeatures) -> LightState:",
        "new_line": "",
        "new_file": "homeassistant/components/tplink/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dceb0d9bf74b49c2898928177e2f5168828cdd2f#diff-6f67618df486603f771f7e3eafad6f059095c416L180",
        "old_file": "tests/components/vizio/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 180,
        "new_file": "tests/components/vizio/test_config_flow.py",
        "new_code": "async def test_tv_options_flow_start_with_volume(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dceb0d9bf74b49c2898928177e2f5168828cdd2f#diff-6f67618df486603f771f7e3eafad6f059095c416L107",
        "old_file": "tests/components/vizio/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "tests/components/vizio/test_config_flow.py",
        "new_code": "async def test_speaker_options_flow(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da3ee0aa611bdea8c77afcde091796db0c774db8#diff-295666478e9182d48afa9bc8aabbbc604fc0f073L189",
        "old_file": "homeassistant/components/zha/core/discovery.py",
        "old_line": "",
        "old_code": "",
        "new_line": 189,
        "new_file": "homeassistant/components/zha/core/discovery.py",
        "new_code": "    def _reprobe_group(self, group_id: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da3ee0aa611bdea8c77afcde091796db0c774db8#diff-295666478e9182d48afa9bc8aabbbc604fc0f073L131",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da3ee0aa611bdea8c77afcde091796db0c774db8#diff-295666478e9182d48afa9bc8aabbbc604fc0f073L140",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    def async_restore_last_state(self, last_state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/da3ee0aa611bdea8c77afcde091796db0c774db8#diff-295666478e9182d48afa9bc8aabbbc604fc0f073L120",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d4dc7f806c6eddbe3662128f90d19337cdb5010d#diff-1d85d6e934aee73d23455139edef004fb5eaa88eL140",
        "old_file": "homeassistant/components/zha/entity.py",
        "old_line": 140,
        "old_code": "    def async_restore_last_state(self, last_state) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/667a87988d168a4dbd9b0d86267b445d91f1460b#diff-a88e8e4abe4436722ebd39031878489b5da6f928L34",
        "old_file": "homeassistant/components/daikin/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/daikin/sensor.py",
        "new_code": "    def __init__(self, api, monitored_state) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0afb849e7ffcf72b432adfe4d88c6817dee00f3c#diff-568b37e05f0ba187b406ae6f42873019a76d966eL385",
        "old_file": "homeassistant/components/google_assistant/helpers.py",
        "old_line": "",
        "old_code": "",
        "new_line": 385,
        "new_file": "homeassistant/components/google_assistant/helpers.py",
        "new_code": "    def might_2fa_traits(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d011b469852c05c63f26c14c543f3e26f29402e1#diff-65ce2da654200a382b475f7a8fa3c2beb0a45f5fL62",
        "old_file": "homeassistant/util/async_.py",
        "old_line": "",
        "old_code": "",
        "new_line": 62,
        "new_file": "homeassistant/util/async_.py",
        "new_code": "def check_loop() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d011b469852c05c63f26c14c543f3e26f29402e1#diff-65ce2da654200a382b475f7a8fa3c2beb0a45f5fL113",
        "old_file": "homeassistant/util/async_.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/util/async_.py",
        "new_code": "def protect_loop(func: Callable) -> Callable:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8825561a993374038dad30d2877c35fa4b6e3e5e#diff-e5f8af0f5ca551c0fafeda3f259844f7f20740f6L238",
        "old_file": "tests/components/vizio/test_media_player.py",
        "old_line": 238,
        "old_code": "async def _test_setup_failure(hass: HomeAssistantType, config: str) -> None:",
        "new_line": "",
        "new_file": "tests/components/vizio/test_media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/374fe478094d1fad0e533bf6e3f09bb2ce2104bc#diff-83183f81abfef24a30a2bb2d07c8a1114f5ac3ccL87",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    def items_removed(mac_addresses: set) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/374fe478094d1fad0e533bf6e3f09bb2ce2104bc#diff-83183f81abfef24a30a2bb2d07c8a1114f5ac3ccL42",
        "old_file": "homeassistant/components/unifi/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/unifi/sensor.py",
        "new_code": "    def items_removed(mac_addresses: set) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/374fe478094d1fad0e533bf6e3f09bb2ce2104bc#diff-83183f81abfef24a30a2bb2d07c8a1114f5ac3ccL67",
        "old_file": "homeassistant/components/unifi/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 67,
        "new_file": "homeassistant/components/unifi/switch.py",
        "new_code": "    def items_removed(mac_addresses: set) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9e882fd5e6c7b82e5c4958aaa13b4faae4ce8ae#diff-e52dc15bebec5460f08a5f6e09547ab1116a4a04L27",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 27,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b9e882fd5e6c7b82e5c4958aaa13b4faae4ce8ae#diff-e52dc15bebec5460f08a5f6e09547ab1116a4a04L50",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def on_update(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8277ebcbe10d787854d3a82fe4eb2c3940ed6eaf#diff-dc8a649269d2f31c2d9190099ba779e74ee472b2L45",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": "def number(value: Any) -> Union[int, float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8277ebcbe10d787854d3a82fe4eb2c3940ed6eaf#diff-dc8a649269d2f31c2d9190099ba779e74ee472b2L213",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 213,
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8277ebcbe10d787854d3a82fe4eb2c3940ed6eaf#diff-dc8a649269d2f31c2d9190099ba779e74ee472b2L218",
        "old_file": "homeassistant/components/modbus/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 218,
        "new_file": "homeassistant/components/modbus/sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/55af2ab4dc5005e548540a5e580a9dd014c1ac3c#diff-1d300b57ebc063d538b09d7ea5ac28499b39fadcL11",
        "old_file": "script/translations/clean.py",
        "old_line": "",
        "old_code": "",
        "new_line": 11,
        "new_file": "script/translations/clean.py",
        "new_code": "def get_arguments() -> argparse.Namespace:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/55af2ab4dc5005e548540a5e580a9dd014c1ac3c#diff-1d300b57ebc063d538b09d7ea5ac28499b39fadcL10",
        "old_file": "script/translations/util.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "script/translations/util.py",
        "new_code": "def get_base_arg_parser() -> argparse.ArgumentParser:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/267d98b5eb3620a2c29c3f1c225b078ef19dd635#diff-7ce3c96b719a4d9e290f78c8247320830b3561d5L47",
        "old_file": "homeassistant/helpers/discovery.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/helpers/discovery.py",
        "new_code": "    def discovery_event_listener(event: core.Event) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/61a57930737fa6cbb587cc9c194ee85542b13d99#diff-e43cbf963355748ca2e2da542f3e62af2930212fL130",
        "old_file": "homeassistant/components/roomba/vacuum.py",
        "old_line": 130,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/roomba/vacuum.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/61a57930737fa6cbb587cc9c194ee85542b13d99#diff-e43cbf963355748ca2e2da542f3e62af2930212fL135",
        "old_file": "homeassistant/components/roomba/vacuum.py",
        "old_line": 135,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/roomba/vacuum.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/75608ce3789350755551c0cc0811ae8c57145af9#diff-d608685632b2fa0b956967e7cd0edf356d71d516L60",
        "old_file": "tests/components/roku/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "tests/components/roku/test_media_player.py",
        "new_code": "async def test_idle_setup(hass: HomeAssistantType, requests_mock: Mocker) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/75608ce3789350755551c0cc0811ae8c57145af9#diff-d608685632b2fa0b956967e7cd0edf356d71d516L72",
        "old_file": "tests/components/roku/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 72,
        "new_file": "tests/components/roku/test_media_player.py",
        "new_code": "async def test_tv_setup(hass: HomeAssistantType, requests_mock: Mocker) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/75608ce3789350755551c0cc0811ae8c57145af9#diff-d608685632b2fa0b956967e7cd0edf356d71d516L49",
        "old_file": "tests/components/roku/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "tests/components/roku/test_media_player.py",
        "new_code": "async def test_setup(hass: HomeAssistantType, requests_mock: Mocker) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e5a861dc90f6bd3df1f4eed1fdbdf4ece71ca940#diff-1a8b24e93492db762e28450301fd7d37dc3154e6L90",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": 90,
        "old_code": "    def items_removed(mac_addresses: set) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e5a861dc90f6bd3df1f4eed1fdbdf4ece71ca940#diff-1a8b24e93492db762e28450301fd7d37dc3154e6L42",
        "old_file": "homeassistant/components/unifi/sensor.py",
        "old_line": 42,
        "old_code": "    def items_removed(mac_addresses: set) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e5a861dc90f6bd3df1f4eed1fdbdf4ece71ca940#diff-1a8b24e93492db762e28450301fd7d37dc3154e6L67",
        "old_file": "homeassistant/components/unifi/switch.py",
        "old_line": 67,
        "old_code": "    def items_removed(mac_addresses: set) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e5a861dc90f6bd3df1f4eed1fdbdf4ece71ca940#diff-1a8b24e93492db762e28450301fd7d37dc3154e6L112",
        "old_file": "homeassistant/components/unifi/unifi_client.py",
        "old_line": 112,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/unifi_client.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL53",
        "old_file": "homeassistant/components/deconz/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/deconz/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL22",
        "old_file": "homeassistant/components/elkm1/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "homeassistant/components/elkm1/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL25",
        "old_file": "homeassistant/components/fibaro/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/components/fibaro/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL306",
        "old_file": "homeassistant/components/homeassistant/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 306,
        "new_file": "homeassistant/components/homeassistant/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL101",
        "old_file": "homeassistant/components/hunterdouglas_powerview/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/hunterdouglas_powerview/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL70",
        "old_file": "homeassistant/components/knx/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/knx/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL68",
        "old_file": "homeassistant/components/lcn/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/lcn/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL77",
        "old_file": "homeassistant/components/lifx_cloud/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/lifx_cloud/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL44",
        "old_file": "homeassistant/components/litejet/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/components/litejet/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL34",
        "old_file": "homeassistant/components/lutron/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/lutron/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL38",
        "old_file": "homeassistant/components/lutron_caseta/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/lutron_caseta/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL53",
        "old_file": "homeassistant/components/nexia/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/nexia/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL91",
        "old_file": "homeassistant/components/scene/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/scene/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL96",
        "old_file": "homeassistant/components/scene/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/scene/__init__.py",
        "new_code": "    def state(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL100",
        "old_file": "homeassistant/components/scene/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "homeassistant/components/scene/__init__.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL104",
        "old_file": "homeassistant/components/scene/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/scene/__init__.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL22",
        "old_file": "homeassistant/components/smartthings/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 22,
        "new_file": "homeassistant/components/smartthings/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL33",
        "old_file": "homeassistant/components/tahoma/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/tahoma/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL34",
        "old_file": "homeassistant/components/tuya/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 34,
        "new_file": "homeassistant/components/tuya/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL28",
        "old_file": "homeassistant/components/velux/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/velux/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL49",
        "old_file": "homeassistant/components/vera/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/vera/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/bc5a2da7b72d685e687ff4860d873b1600fa1fb4#diff-4b8053d306276978754da1630d80b70c93e3894aL35",
        "old_file": "homeassistant/components/wink/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/wink/scene.py",
        "new_code": "    def activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/782d2d0b75b49f759974c6ab8bf7df7091e2a9fe#diff-d1ae36e2799264a6425492d467104cd6f1f2a0a8L68",
        "old_file": "homeassistant/components/lcn/scene.py",
        "old_line": 68,
        "old_code": "    def activate(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/lcn/scene.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/782d2d0b75b49f759974c6ab8bf7df7091e2a9fe#diff-d1ae36e2799264a6425492d467104cd6f1f2a0a8L68",
        "old_file": "homeassistant/components/lcn/scene.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/lcn/scene.py",
        "new_code": "    async def async_activate(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/96649a7e2775c6204eae4655bdba600aa06b8e55#diff-482c6ae822aceaf90290dce308f9a38e5801e2a8L123",
        "old_file": "homeassistant/helpers/entity_registry.py",
        "old_line": "",
        "old_code": "",
        "new_line": 123,
        "new_file": "homeassistant/helpers/entity_registry.py",
        "new_code": "    def async_get_device_class_lookup(self, domain_device_classes: set) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6dd836589c9704eb83ecd4edd15c2635fbe80e33#diff-0cc077be7d254484bf3965c0cc8fb9d32a7c9b65L100",
        "old_file": "tests/components/roku/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "tests/components/roku/test_media_player.py",
        "new_code": "async def test_availability(hass: HomeAssistantType, requests_mock: Mocker) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6dd836589c9704eb83ecd4edd15c2635fbe80e33#diff-0cc077be7d254484bf3965c0cc8fb9d32a7c9b65L59",
        "old_file": "tests/components/roku/test_media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "tests/components/roku/test_media_player.py",
        "new_code": "async def test_setup(hass: HomeAssistantType, requests_mock: Mocker) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dd03fcbeb37af0f3a70638a3acf5c2f6949894bb#diff-e183ee17a93a0c21e40551591d714ed98d6a348aL286",
        "old_file": "homeassistant/components/volvooncall/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 286,
        "new_file": "homeassistant/components/volvooncall/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL107",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 107,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL120",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 120,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL131",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 131,
        "old_code": "    def add_heartbeat_device(self, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL145",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 145,
        "old_code": "    def add_negative_node(self, child) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL164",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 164,
        "old_code": "    def _negative_node_control_handler(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL175",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 175,
        "old_code": "    def _positive_node_control_handler(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL199",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 199,
        "old_code": "    def on_update(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL216",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 216,
        "old_code": "    def value(self) -> object:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL233",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 233,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL248",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 248,
        "old_code": "    def device_class(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL107",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL120",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL131",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def add_heartbeat_device(self, device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL145",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def add_negative_node(self, child) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL164",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 164,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def _negative_node_control_handler(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL175",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def _positive_node_control_handler(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL199",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def on_update(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL216",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 216,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def value(self) -> object:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL233",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 233,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b022e08db9b722af39fe34ebd543d81be8e1744d#diff-60aa604825dd6a41c871eaca23e11f477bf2bafaL248",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 248,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/62bc02fddaecd07a716bef6b0ecd2d3295781fb9#diff-a88a9885dd4bdf4c19193141cfcae82e91b1c90dL352",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": 352,
        "old_code": "    def access_token(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/62bc02fddaecd07a716bef6b0ecd2d3295781fb9#diff-a88a9885dd4bdf4c19193141cfcae82e91b1c90dL404",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": 404,
        "old_code": "    def media_image_remotely_accessible(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/62bc02fddaecd07a716bef6b0ecd2d3295781fb9#diff-a88a9885dd4bdf4c19193141cfcae82e91b1c90dL352",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 352,
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": "    def access_token(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/62bc02fddaecd07a716bef6b0ecd2d3295781fb9#diff-a88a9885dd4bdf4c19193141cfcae82e91b1c90dL404",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 404,
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": "    def media_image_remotely_accessible(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L163",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 163,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L168",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 168,
        "old_code": "    def precision(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L175",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 175,
        "old_code": "    def capability_attributes(self) -> Optional[Dict[str, Any]]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L207",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 207,
        "old_code": "    def state_attributes(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L265",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 265,
        "old_code": "    def temperature_unit(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L270",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 270,
        "old_code": "    def current_humidity(self) -> Optional[int]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L275",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 275,
        "old_code": "    def target_humidity(self) -> Optional[int]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L281",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 281,
        "old_code": "    def hvac_mode(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L289",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 289,
        "old_code": "    def hvac_modes(self) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L296",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 296,
        "old_code": "    def hvac_action(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L304",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 304,
        "old_code": "    def current_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L309",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 309,
        "old_code": "    def target_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L314",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 314,
        "old_code": "    def target_temperature_step(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L319",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 319,
        "old_code": "    def target_temperature_high(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L327",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 327,
        "old_code": "    def target_temperature_low(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L335",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 335,
        "old_code": "    def preset_mode(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L343",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 343,
        "old_code": "    def preset_modes(self) -> Optional[List[str]]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L351",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 351,
        "old_code": "    def is_aux_heat(self) -> Optional[bool]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L359",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 359,
        "old_code": "    def fan_mode(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L367",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 367,
        "old_code": "    def fan_modes(self) -> Optional[List[str]]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L375",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 375,
        "old_code": "    def swing_mode(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L383",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 383,
        "old_code": "    def swing_modes(self) -> Optional[List[str]]:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L390",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 390,
        "old_code": "    def set_temperature(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L394",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 394,
        "old_code": "    async def async_set_temperature(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L400",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 400,
        "old_code": "    def set_humidity(self, humidity: int) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L404",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 404,
        "old_code": "    async def async_set_humidity(self, humidity: int) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L408",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 408,
        "old_code": "    def set_fan_mode(self, fan_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L412",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 412,
        "old_code": "    async def async_set_fan_mode(self, fan_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L416",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 416,
        "old_code": "    def set_hvac_mode(self, hvac_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L420",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 420,
        "old_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L424",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 424,
        "old_code": "    def set_swing_mode(self, swing_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L428",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 428,
        "old_code": "    async def async_set_swing_mode(self, swing_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L432",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 432,
        "old_code": "    def set_preset_mode(self, preset_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L436",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 436,
        "old_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L440",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 440,
        "old_code": "    def turn_aux_heat_on(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L444",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 444,
        "old_code": "    async def async_turn_aux_heat_on(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L448",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 448,
        "old_code": "    def turn_aux_heat_off(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L452",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 452,
        "old_code": "    async def async_turn_aux_heat_off(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L456",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 456,
        "old_code": "    async def async_turn_on(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L470",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 470,
        "old_code": "    async def async_turn_off(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L482",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 482,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L487",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 487,
        "old_code": "    def min_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L494",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 494,
        "old_code": "    def max_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L501",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 501,
        "old_code": "    def min_humidity(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L506",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": 506,
        "old_code": "    def max_humidity(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L163",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L168",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 168,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def precision(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L175",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def capability_attributes(self) -> Optional[Dict[str, Any]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L207",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 207,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def state_attributes(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L265",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 265,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L270",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 270,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def current_humidity(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L275",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 275,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_humidity(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L281",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 281,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L289",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 289,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L296",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 296,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L304",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 304,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L309",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 309,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L314",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 314,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature_step(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L319",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 319,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L327",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 327,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L335",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 335,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def preset_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L343",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 343,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L351",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 351,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def is_aux_heat(self) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L359",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 359,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def fan_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L367",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 367,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def fan_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L375",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 375,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def swing_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L383",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 383,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def swing_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L390",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 390,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L394",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 394,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L400",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 400,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_humidity(self, humidity: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L404",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 404,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_humidity(self, humidity: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L408",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 408,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L412",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 412,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L416",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 416,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L420",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 420,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L424",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 424,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L428",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 428,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L432",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 432,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L436",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 436,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_set_preset_mode(self, preset_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L440",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 440,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def turn_aux_heat_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L444",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 444,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_aux_heat_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L448",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 448,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def turn_aux_heat_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L452",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 452,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_aux_heat_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L456",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 456,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L470",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 470,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    async def async_turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L482",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 482,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L487",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 487,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L494",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 494,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L501",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 501,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def min_humidity(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L506",
        "old_file": "homeassistant/components/climate/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 506,
        "new_file": "homeassistant/components/climate/__init__.py",
        "new_code": "    def max_humidity(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L136",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 136,
        "old_code": "    def _static_info(self) -> ClimateInfo:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L140",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 140,
        "old_code": "    def _state(self) -> Optional[ClimateState]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L144",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 144,
        "old_code": "    def precision(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L154",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 154,
        "old_code": "    def temperature_unit(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L159",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 159,
        "old_code": "    def hvac_modes(self) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L188",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 188,
        "old_code": "    def target_temperature_step(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L194",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 194,
        "old_code": "    def min_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L199",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 199,
        "old_code": "    def max_temp(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L204",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 204,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L223",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 223,
        "old_code": "    def hvac_mode(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L228",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 228,
        "old_code": "    def hvac_action(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L251",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 251,
        "old_code": "    def current_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L256",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 256,
        "old_code": "    def target_temperature(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L261",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 261,
        "old_code": "    def target_temperature_low(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L266",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 266,
        "old_code": "    def target_temperature_high(self) -> Optional[float]:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L270",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 270,
        "old_code": "    async def async_set_temperature(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L283",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 283,
        "old_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L294",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 294,
        "old_code": "    async def async_set_fan_mode(self, fan_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L300",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": 300,
        "old_code": "    async def async_set_swing_mode(self, swing_mode: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L136",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 136,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def _static_info(self) -> ClimateInfo:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L140",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def _state(self) -> Optional[ClimateState]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L144",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def precision(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L154",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 154,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def temperature_unit(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L159",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 159,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L188",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 188,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature_step(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L194",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 194,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def min_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L199",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 199,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def max_temp(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L204",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 204,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L223",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 223,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def hvac_mode(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L228",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 228,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def hvac_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L251",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 251,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def current_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L256",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 256,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L261",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 261,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature_low(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L266",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 266,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    def target_temperature_high(self) -> Optional[float]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L270",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 270,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_temperature(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L283",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 283,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_hvac_mode(self, hvac_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L294",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 294,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_fan_mode(self, fan_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L300",
        "old_file": "homeassistant/components/esphome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 300,
        "new_file": "homeassistant/components/esphome/climate.py",
        "new_code": "    async def async_set_swing_mode(self, swing_mode: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L128",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 128,
        "old_code": "    def __init__(self, evo_broker, evo_device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L135",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 135,
        "old_code": "    def hvac_modes(self) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L140",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": 140,
        "old_code": "    def preset_modes(self) -> Optional[List[str]]:",
        "new_line": "",
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L128",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 128,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    def __init__(self, evo_broker, evo_device) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L135",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 135,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L140",
        "old_file": "homeassistant/components/evohome/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 140,
        "new_file": "homeassistant/components/evohome/climate.py",
        "new_code": "    def preset_modes(self) -> Optional[List[str]]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L52",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": 52,
        "old_code": "    def hvac_mode(self) -> str:",
        "new_line": "",
        "new_file": "tests/components/climate/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L60",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": 60,
        "old_code": "    def hvac_modes(self) -> List[str]:",
        "new_line": "",
        "new_file": "tests/components/climate/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L53",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "tests/components/climate/test_init.py",
        "new_code": "    def hvac_mode(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/29bc93ea988e2a76afb0a06fa5235dc182d2ed41#diff-cba963cfcf489b3e2addaba1adf47df3369ccbf5L61",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "tests/components/climate/test_init.py",
        "new_code": "    def hvac_modes(self) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L170",
        "old_file": "homeassistant/components/alarm_control_panel/__init__.py",
        "old_line": 170,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/alarm_control_panel/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L172",
        "old_file": "homeassistant/components/alarm_control_panel/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/alarm_control_panel/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L84",
        "old_file": "homeassistant/components/homekit_controller/alarm_control_panel.py",
        "old_line": 84,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/homekit_controller/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L84",
        "old_file": "homeassistant/components/homekit_controller/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/homekit_controller/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L41",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 41,
        "old_code": "    def __init__(self, hap: HomematicipHAP) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L47",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 47,
        "old_code": "    def device_info(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L58",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 58,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L75",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 75,
        "old_code": "    def _security_and_alarm(self) -> SecurityAndAlarmHome:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L79",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 79,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L83",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 83,
        "old_code": "    async def async_alarm_disarm(self, code=None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L87",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 87,
        "old_code": "    async def async_alarm_arm_home(self, code=None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L91",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 91,
        "old_code": "    async def async_alarm_arm_away(self, code=None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L95",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 95,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L100",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 100,
        "old_code": "    def _async_device_changed(self, *args, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L113",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 113,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L121",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 121,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L126",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 126,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L131",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": 131,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L41",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def __init__(self, hap: HomematicipHAP) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L47",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def device_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L58",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L75",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 75,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def _security_and_alarm(self) -> SecurityAndAlarmHome:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L79",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L83",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    async def async_alarm_disarm(self, code=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L87",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    async def async_alarm_arm_home(self, code=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L91",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    async def async_alarm_arm_away(self, code=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L95",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 95,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L100",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 100,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def _async_device_changed(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L113",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 113,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L121",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 121,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L126",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 126,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6f7f5b4034bc55246a8fa170dd330b1edec9ea57#diff-ac4771dbf94eb43ce8f064a74cf51ae4c9416118L131",
        "old_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "old_line": "",
        "old_code": "",
        "new_line": 131,
        "new_file": "homeassistant/components/homematicip_cloud/alarm_control_panel.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L234",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": 234,
        "old_code": "    def open_cover(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L242",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": 242,
        "old_code": "    def close_cover(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L250",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": 250,
        "old_code": "    def toggle(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L278",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": 278,
        "old_code": "    def open_cover_tilt(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L285",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": 285,
        "old_code": "    def close_cover_tilt(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L308",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": 308,
        "old_code": "    def toggle_tilt(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L234",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 234,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def open_cover(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L242",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def close_cover(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L250",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 250,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def toggle(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L278",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 278,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def open_cover_tilt(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L285",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 285,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def close_cover_tilt(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L308",
        "old_file": "homeassistant/components/cover/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 308,
        "new_file": "homeassistant/components/cover/__init__.py",
        "new_code": "    def toggle_tilt(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L46",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 46,
        "old_code": "    def current_cover_position(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L53",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 53,
        "old_code": "    def is_closed(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L58",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 58,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L64",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 64,
        "old_code": "    def open_cover(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L69",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 69,
        "old_code": "    def close_cover(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L46",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def current_cover_position(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L53",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def is_closed(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L58",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L64",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def open_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8c5c963b9617c3d0419cd6e52e2ba7d6ba9aaba3#diff-a0dea600b5d1175572c63bdb68aca140ed1022a2L69",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def close_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L129",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": 129,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L133",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": 133,
        "old_code": "    def send_command(self, command: Iterable[str], **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L137",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": 137,
        "old_code": "    async def async_send_command(self, command: Iterable[str], **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L144",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": 144,
        "old_code": "    def learn_command(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L148",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": 148,
        "old_code": "    async def async_learn_command(self, **kwargs: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L129",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L133",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    def send_command(self, command: Iterable[str], **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L137",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 137,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    async def async_send_command(self, command: Iterable[str], **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L144",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 144,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    def learn_command(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/aa60d362fd92769afe95825e4cb2776d05ce1a96#diff-6b660e69d331f18eeb699af56d6cc764b626e197L148",
        "old_file": "homeassistant/components/remote/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 148,
        "new_file": "homeassistant/components/remote/__init__.py",
        "new_code": "    async def async_learn_command(self, **kwargs: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c97ce05b09416400bc50d619acbccbddca9691f2#diff-9aeee18348fc35c6be54544e822d7ae62f481948L50",
        "old_file": "script/translations/download.py",
        "old_line": 50,
        "old_code": "def load_json(filename: str) -> Union[List, Dict]:",
        "new_line": "",
        "new_file": "script/translations/download.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L49",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L54",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def _async_handle_any_update(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L64",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def _async_handle_update(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L82",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L87",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L92",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/481b2035dbd99dc859f6c0fa9bff71f9e121b2b2#diff-a94734e847fbe36a4cb021be5d43d6191ffc1b04L97",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6ae7f31947d6ef8aaf58fa3ab94cab5a71dbc284#diff-792a5103cfbe83e7403b4f0a207c3b3a4b3aa18cL55",
        "old_file": "homeassistant/components/smartthings/smartapp.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/smartthings/smartapp.py",
        "new_code": "def format_unique_id(app_id: str, location_id: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6ae7f31947d6ef8aaf58fa3ab94cab5a71dbc284#diff-792a5103cfbe83e7403b4f0a207c3b3a4b3aa18cL92",
        "old_file": "homeassistant/components/smartthings/smartapp.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/smartthings/smartapp.py",
        "new_code": "def validate_webhook_requirements(hass: HomeAssistantType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ec47216388059166c925991cdc6606e6ce8d8c31#diff-ee62fe48e19eda0051d36f5a2545df9f245c2e89L100",
        "old_file": "homeassistant/components/smhi/weather.py",
        "old_line": 100,
        "old_code": "    async def async_update(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/smhi/weather.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ec47216388059166c925991cdc6606e6ce8d8c31#diff-ee62fe48e19eda0051d36f5a2545df9f245c2e89L166",
        "old_file": "tests/components/switcher_kis/conftest.py",
        "old_line": 166,
        "old_code": "def mock_api_fixture() -> Generator[CoroutineMock, Any, None]:",
        "new_line": 167,
        "new_file": "tests/components/switcher_kis/conftest.py",
        "new_code": "def mock_api_fixture() -> Generator[AsyncMock, Any, None]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4e55fa6c5c50bebae504a075c32ef0b3bc7e2cf7#diff-4d3267fa86e2e44dba2a2039123d8d3cd1c6575eL84",
        "old_file": "homeassistant/components/panasonic_viera/media_player.py",
        "old_line": 84,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/panasonic_viera/media_player.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/793592b2b841de658c75147b65d44f1e13546867#diff-3784cce50598752fc75ef6993425235e90793cd6L15",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": 15,
        "old_code": "def _convert_filter(config: Dict[str, List[str]]) -> Callable[[str], bool]:",
        "new_line": "",
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/793592b2b841de658c75147b65d44f1e13546867#diff-3784cce50598752fc75ef6993425235e90793cd6L15",
        "old_file": "homeassistant/helpers/entityfilter.py",
        "old_line": "",
        "old_code": "",
        "new_line": 15,
        "new_file": "homeassistant/helpers/entityfilter.py",
        "new_code": "def convert_filter(config: Dict[str, List[str]]) -> Callable[[str], bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/793592b2b841de658c75147b65d44f1e13546867#diff-3784cce50598752fc75ef6993425235e90793cd6L883",
        "old_file": "tests/components/homekit/test_homekit.py",
        "old_line": "",
        "old_code": "",
        "new_line": 883,
        "new_file": "tests/components/homekit/test_homekit.py",
        "new_code": "def _write_data(path: str, data: Dict) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e7157f216409a6536661e091e8d29b39b1bfa72c#diff-dc13ed8e4f8474613cbadede4d219ae1f9f9df98L77",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab08c1bef856209fb3919b24b8216e9c61a263ad#diff-600a1957ab87aceb624241dcbc70f9404e7e1be8L20",
        "old_file": "homeassistant/components/vera/config_flow.py",
        "old_line": 20,
        "old_code": "def str_to_int_list(data: str) -> List[str]:",
        "new_line": 25,
        "new_file": "homeassistant/components/vera/config_flow.py",
        "new_code": "def str_to_int_list(data: str) -> List[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab08c1bef856209fb3919b24b8216e9c61a263ad#diff-600a1957ab87aceb624241dcbc70f9404e7e1be8L28",
        "old_file": "homeassistant/components/vera/config_flow.py",
        "old_line": 28,
        "old_code": "def int_list_to_str(data: List[str]) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/vera/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab08c1bef856209fb3919b24b8216e9c61a263ad#diff-600a1957ab87aceb624241dcbc70f9404e7e1be8L20",
        "old_file": "homeassistant/components/vera/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 20,
        "new_file": "homeassistant/components/vera/config_flow.py",
        "new_code": "def fix_device_id_list(data: List[Any]) -> List[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab08c1bef856209fb3919b24b8216e9c61a263ad#diff-600a1957ab87aceb624241dcbc70f9404e7e1be8L30",
        "old_file": "homeassistant/components/vera/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/vera/config_flow.py",
        "new_code": "def list_to_str(data: List[Any]) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab08c1bef856209fb3919b24b8216e9c61a263ad#diff-600a1957ab87aceb624241dcbc70f9404e7e1be8L20",
        "old_file": "homeassistant/components/vera/config_flow.py",
        "old_line": 20,
        "old_code": "def str_to_int_list(data: str) -> List[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/vera/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab08c1bef856209fb3919b24b8216e9c61a263ad#diff-600a1957ab87aceb624241dcbc70f9404e7e1be8L33",
        "old_file": "homeassistant/components/vera/config_flow.py",
        "old_line": 33,
        "old_code": "def new_options(lights: List[str], exclude: List[str]) -> dict:",
        "new_line": 35,
        "new_file": "homeassistant/components/vera/config_flow.py",
        "new_code": "def new_options(lights: List[int], exclude: List[int]) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L40",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    async def async_discover(cls, hass: HomeAssistantType) -> List[Mapping]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L106",
        "old_file": "homeassistant/components/upnp/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 106,
        "new_file": "homeassistant/components/upnp/device.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L31",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": 31,
        "old_code": "    def udn(self) -> str:",
        "new_line": "",
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L36",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": 36,
        "old_code": "    def manufacturer(self) -> str:",
        "new_line": "",
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L41",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": 41,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L46",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": 46,
        "old_code": "    def model_name(self) -> str:",
        "new_line": "",
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6afb42bf7a15888a49ec763bedc121cf32f6a1ee#diff-ed4925add365e6928559720e230636d23c26b6e1L51",
        "old_file": "tests/components/upnp/test_init.py",
        "old_line": 51,
        "old_code": "    def device_type(self) -> str:",
        "new_line": "",
        "new_file": "tests/components/upnp/test_init.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL311",
        "old_file": "homeassistant/components/zha/api.py",
        "old_line": "",
        "old_code": "",
        "new_line": 311,
        "new_file": "homeassistant/components/zha/api.py",
        "new_code": "def cv_group_member(value: Any) -> GroupMember:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL48",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 48,
        "old_code": "    def members(self) -> List[ZhaDeviceType]:",
        "new_line": 139,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def members(self) -> List[ZHAGroupMember]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL111",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 111,
        "old_code": "    def async_get_info(self) -> Dict[str, Any]:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL41",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def group(self) -> ZhaGroupType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL46",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def endpoint_id(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL51",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def endpoint(self) -> ZigpyEndpointType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL56",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def device(self) -> ZhaDeviceType:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL61",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def member_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL70",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def associated_entities(self) -> List[GroupEntityReference]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL87",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    async def async_remove_from_group(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL102",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 102,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def log(self, level: int, msg: str, *args) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL206",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": "",
        "old_code": "",
        "new_line": 206,
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": "    def group_info(self) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL56",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 56,
        "old_code": "    async def async_add_members(self, member_ieee_addresses: List[EUI64]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8279efc16473e047b5d6952ab6e45fb6b8d51148#diff-0aed1e4a1f7272f110283817f877dc64ed6ec0bdL70",
        "old_file": "homeassistant/components/zha/core/group.py",
        "old_line": 70,
        "old_code": "    async def async_remove_members(self, member_ieee_addresses: List[EUI64]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/zha/core/group.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/710deb83161f59e425066871f99644030f0bd346#diff-feec2ab10cff1fd01fc38dcc72c6febbe365a27eL58",
        "old_file": "homeassistant/components/dynalite/convert_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 58,
        "new_file": "homeassistant/components/dynalite/convert_config.py",
        "new_code": "def convert_channel(config: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/710deb83161f59e425066871f99644030f0bd346#diff-feec2ab10cff1fd01fc38dcc72c6febbe365a27eL68",
        "old_file": "homeassistant/components/dynalite/convert_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "homeassistant/components/dynalite/convert_config.py",
        "new_code": "def convert_preset(config: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/710deb83161f59e425066871f99644030f0bd346#diff-feec2ab10cff1fd01fc38dcc72c6febbe365a27eL77",
        "old_file": "homeassistant/components/dynalite/convert_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/dynalite/convert_config.py",
        "new_code": "def convert_area(config: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/710deb83161f59e425066871f99644030f0bd346#diff-feec2ab10cff1fd01fc38dcc72c6febbe365a27eL109",
        "old_file": "homeassistant/components/dynalite/convert_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 109,
        "new_file": "homeassistant/components/dynalite/convert_config.py",
        "new_code": "def convert_default(config: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/710deb83161f59e425066871f99644030f0bd346#diff-feec2ab10cff1fd01fc38dcc72c6febbe365a27eL114",
        "old_file": "homeassistant/components/dynalite/convert_config.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/dynalite/convert_config.py",
        "new_code": "def convert_template(config: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL107",
        "old_file": "homeassistant/components/isy994/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/isy994/__init__.py",
        "new_code": "    def stop(event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL102",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 102,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL228",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 228,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL229",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL63",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 63,
        "old_code": "    def __init__(self, name: str, node: object, actions: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL42",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 42,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL49",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 49,
        "old_code": "    def open_cover(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL54",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 54,
        "old_code": "    def close_cover(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL43",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL50",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def open_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL55",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def close_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL51",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 51,
        "old_code": "    def speed(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL56",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 56,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL60",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 60,
        "old_code": "    def set_speed(self, speed: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL64",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 64,
        "old_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL68",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 68,
        "old_code": "    def turn_off(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL73",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 73,
        "old_code": "    def speed_list(self) -> list:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL78",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 78,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL86",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": 86,
        "old_code": "    def __init__(self, name: str, node, actions) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL52",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 52,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL57",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL61",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL65",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL69",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL74",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL79",
        "old_file": "homeassistant/components/isy994/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/isy994/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL32",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 32,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL38",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 38,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL45",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 45,
        "old_code": "    def brightness(self) -> float:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL49",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 49,
        "old_code": "    def turn_off(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL55",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 55,
        "old_code": "    def on_update(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL62",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 62,
        "old_code": "    def turn_on(self, brightness=None, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL79",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": 79,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL33",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL39",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL46",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def brightness(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL50",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL56",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def on_update(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL63",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 63,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def turn_on(self, brightness=None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL80",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL31",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 31,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL37",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 37,
        "old_code": "    def is_locked(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL42",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 42,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL48",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 48,
        "old_code": "    def lock(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL59",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 59,
        "old_code": "    def unlock(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL32",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 32,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL38",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 38,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def is_locked(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL43",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL49",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def lock(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL60",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": "    def unlock(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL74",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 74,
        "old_code": "    def __init__(self, name: str, node, actions) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL32",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": 32,
        "old_code": "    def raw_unit_of_measurement(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL44",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": 44,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL33",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def raw_unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL45",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL30",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": 30,
        "old_code": "    def is_on(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL34",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": 34,
        "old_code": "    def turn_off(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL39",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": 39,
        "old_code": "    def turn_on(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL48",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": 48,
        "old_code": "    def __init__(self, name: str, node, actions) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL31",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 31,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL35",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL40",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e45f2cf5a298251b511105019b357aae0db53f46#diff-3334899ab3df169f74c894fc3288eed0fe23206fL65",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2581b031d9f6b2cfe8f5384d6f12e04e1aab324d#diff-f137f80fd4c2e1ffa4d5d2e9e5bc9e4047720897L90",
        "old_file": "homeassistant/components/demo/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/demo/fan.py",
        "new_code": "    def oscillate(self, oscillating: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c71a7b901fea74cd2ce3b2a5305877f0cca2ae45#diff-0b525a0f61250162e1c997fa0644d329374c79d9L145",
        "old_file": "homeassistant/components/zha/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 145,
        "new_file": "homeassistant/components/zha/__init__.py",
        "new_code": "async def async_load_entities(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/19734e7b2cdd8169159c1e6227f2216cdb79e3b4#diff-ef9266b0f35d2e0e0c1714ec68e538820a4b7977L538",
        "old_file": "homeassistant/components/onvif/camera.py",
        "old_line": 538,
        "old_code": "    def unique_id(self) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/components/onvif/camera.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/19734e7b2cdd8169159c1e6227f2216cdb79e3b4#diff-ef9266b0f35d2e0e0c1714ec68e538820a4b7977L86",
        "old_file": "homeassistant/components/onvif/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "homeassistant/components/onvif/camera.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/19734e7b2cdd8169159c1e6227f2216cdb79e3b4#diff-ef9266b0f35d2e0e0c1714ec68e538820a4b7977L91",
        "old_file": "homeassistant/components/onvif/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/onvif/camera.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/19734e7b2cdd8169159c1e6227f2216cdb79e3b4#diff-ef9266b0f35d2e0e0c1714ec68e538820a4b7977L96",
        "old_file": "homeassistant/components/onvif/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/onvif/camera.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/19734e7b2cdd8169159c1e6227f2216cdb79e3b4#diff-ef9266b0f35d2e0e0c1714ec68e538820a4b7977L103",
        "old_file": "homeassistant/components/onvif/camera.py",
        "old_line": "",
        "old_code": "",
        "new_line": 103,
        "new_file": "homeassistant/components/onvif/camera.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/19734e7b2cdd8169159c1e6227f2216cdb79e3b4#diff-ef9266b0f35d2e0e0c1714ec68e538820a4b7977L297",
        "old_file": "homeassistant/components/onvif/config_flow.py",
        "old_line": 297,
        "old_code": "def get_device(hass, host, port, username, password) -> ONVIFCamera:",
        "new_line": "",
        "new_file": "homeassistant/components/onvif/config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f1ecac92df101eb8aae91102259f7f566d22711d#diff-cbe839d09b82b603245c99cac03335b79fa043f5L132",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 132,
        "old_code": "    def log_exception(*args: Any) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f1ecac92df101eb8aae91102259f7f566d22711d#diff-cbe839d09b82b603245c99cac03335b79fa043f5L127",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "def log_exception(format_err: Callable[..., Any], *args: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33077f0cdd499c58a8b3d82e6c0d063b2573a511#diff-cfea63938447f0158a57b11dc2d1623b46513fceL26",
        "old_file": "homeassistant/components/songpal/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/songpal/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: OrderedDict) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33077f0cdd499c58a8b3d82e6c0d063b2573a511#diff-cfea63938447f0158a57b11dc2d1623b46513fceL40",
        "old_file": "homeassistant/components/songpal/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/songpal/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/33077f0cdd499c58a8b3d82e6c0d063b2573a511#diff-cfea63938447f0158a57b11dc2d1623b46513fceL48",
        "old_file": "homeassistant/components/songpal/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 48,
        "new_file": "homeassistant/components/songpal/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/53f64bae09b3b3128b0b6eb43361400f5db02c21#diff-d0e70210b7d43e9b780d194a8d01d5014ca53b18L358",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 358,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2223592486179547f7429419a40e107db616562f#diff-1a9b03494ca646f7f14dd2099b9e3b43898441b3L1450",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 1450,
        "new_file": "homeassistant/core.py",
        "new_code": "    async def async_load(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2223592486179547f7429419a40e107db616562f#diff-1a9b03494ca646f7f14dd2099b9e3b43898441b3L14",
        "old_file": "homeassistant/helpers/network.py",
        "old_line": 14,
        "old_code": "def async_get_external_url(hass: HomeAssistant) -> Optional[str]:",
        "new_line": "",
        "new_file": "homeassistant/helpers/network.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2223592486179547f7429419a40e107db616562f#diff-1a9b03494ca646f7f14dd2099b9e3b43898441b3L46",
        "old_file": "homeassistant/util/network.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/util/network.py",
        "new_code": "def is_ip_address(address: str) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/2223592486179547f7429419a40e107db616562f#diff-1a9b03494ca646f7f14dd2099b9e3b43898441b3L56",
        "old_file": "homeassistant/util/network.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/util/network.py",
        "new_code": "def normalize_url(address: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L21",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def __init__(self, node) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L28",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 28,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L35",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 35,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def on_update(self, event: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L39",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 39,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def on_control(self, event: NodeProperty) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L57",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L64",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 64,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L69",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L74",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def value(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L90",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def device_state_attributes(self) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L115",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": "",
        "old_code": "",
        "new_line": 115,
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": "    def __init__(self, name: str, status, actions=None) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L237",
        "old_file": "homeassistant/components/isy994/helpers.py",
        "old_line": 237,
        "old_code": "def _categorize_weather(hass: HomeAssistantType, climate) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/helpers.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L206",
        "old_file": "homeassistant/components/isy994/helpers.py",
        "old_line": 206,
        "old_code": "def _categorize_programs(hass: HomeAssistantType, programs: dict) -> None:",
        "new_line": 214,
        "new_file": "homeassistant/components/isy994/helpers.py",
        "new_code": "def _categorize_programs(hass: HomeAssistantType, programs: Programs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L147",
        "old_file": "homeassistant/components/isy994/helpers.py",
        "old_line": 147,
        "old_code": "def _is_sensor_a_binary_sensor(hass: HomeAssistantType, node) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/helpers.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L79",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 79,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    def device_state_attributes(self) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L32",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 32,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L86",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": 86,
        "old_code": "    def raw_units(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L95",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": 95,
        "old_code": "    def state(self) -> object:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L33",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": 33,
        "old_code": "    def raw_unit_of_measurement(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4ec88b41dcb18caeebf9eb3eb60e5874ec815776#diff-8eb7b8cef17ddf6940b03133d02f4a44ebbe92b6L50",
        "old_file": "homeassistant/components/isy994/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/switch.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/12caf17848a884d6decdf91c7882514d468d31a3#diff-9eb0e0006beef0214898f37635f6c4a83b88fbd4L33",
        "old_file": "homeassistant/components/daikin/sensor.py",
        "old_line": 33,
        "old_code": "    def __init__(self, api, monitored_state) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/daikin/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/12caf17848a884d6decdf91c7882514d468d31a3#diff-9eb0e0006beef0214898f37635f6c4a83b88fbd4L61",
        "old_file": "homeassistant/components/daikin/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/components/daikin/sensor.py",
        "new_code": "    def __init__(self, api: DaikinApi, monitored_state: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c8deae64450312d0be0dfa458b367aacad5ad5fa#diff-be26b3b15752b3ccd934983cc8e3681739a0032bL358",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": 358,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c8deae64450312d0be0dfa458b367aacad5ad5fa#diff-be26b3b15752b3ccd934983cc8e3681739a0032bL149",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 149,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    async def async_will_remove_from_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c8deae64450312d0be0dfa458b367aacad5ad5fa#diff-be26b3b15752b3ccd934983cc8e3681739a0032bL258",
        "old_file": "homeassistant/components/unifi/switch.py",
        "old_line": "",
        "old_code": "",
        "new_line": 258,
        "new_file": "homeassistant/components/unifi/switch.py",
        "new_code": "    def async_update_callback(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c8deae64450312d0be0dfa458b367aacad5ad5fa#diff-be26b3b15752b3ccd934983cc8e3681739a0032bL66",
        "old_file": "homeassistant/components/unifi/unifi_client.py",
        "old_line": 66,
        "old_code": "    def async_update_callback(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/unifi_client.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c8deae64450312d0be0dfa458b367aacad5ad5fa#diff-be26b3b15752b3ccd934983cc8e3681739a0032bL73",
        "old_file": "homeassistant/components/unifi/unifi_entity_base.py",
        "old_line": "",
        "old_code": "",
        "new_line": 73,
        "new_file": "homeassistant/components/unifi/unifi_entity_base.py",
        "new_code": "    def async_update_callback(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L34",
        "old_file": "homeassistant/components/roku/__init__.py",
        "old_line": 34,
        "old_code": "def get_roku_data(host: str) -> dict:",
        "new_line": "",
        "new_file": "homeassistant/components/roku/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L107",
        "old_file": "homeassistant/components/roku/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/roku/__init__.py",
        "new_code": "    async def _async_update_data(self) -> Device:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L30",
        "old_file": "homeassistant/components/roku/config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/roku/config_flow.py",
        "new_code": "async def validate_input(hass: HomeAssistantType, data: Dict) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L49",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 49,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def __init__(self, unique_id: str, coordinator: RokuDataUpdateCoordinator) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L65",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 65,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def state(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L93",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 93,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def media_content_type(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L104",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 104,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def media_image_url(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L112",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 112,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def app_name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L120",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 120,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def app_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L150",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 150,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def source(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L158",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 158,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    def source_list(self) -> List:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L162",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 162,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_turn_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L166",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 166,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L170",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 170,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_play_pause(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L174",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 174,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_previous_track(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L178",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 178,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_next_track(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L182",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 182,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_mute_volume(self, mute) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L186",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 186,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_volume_up(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L190",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 190,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_volume_down(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L194",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 194,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_play_media(self, media_type: str, media_id: str, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L206",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 206,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_select_source(self, source: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L26",
        "old_file": "homeassistant/components/roku/remote.py",
        "old_line": "",
        "old_code": "",
        "new_line": 26,
        "new_file": "homeassistant/components/roku/remote.py",
        "new_code": "    def __init__(self, unique_id: str, coordinator: RokuDataUpdateCoordinator) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L42",
        "old_file": "homeassistant/components/roku/remote.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/components/roku/remote.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L46",
        "old_file": "homeassistant/components/roku/remote.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/roku/remote.py",
        "new_code": "    async def async_send_command(self, command: List, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L124",
        "old_file": "tests/components/roku/test_config_flow.py",
        "old_line": 124,
        "old_code": "async def test_form_cannot_connect_request(hass: HomeAssistantType) -> None:",
        "new_line": "",
        "new_file": "tests/components/roku/test_config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3feb55a8e474cf85e3f3eb484405ca7be43a59be#diff-25d6f13c3fe0aa64a12065322e47ecb1d8591db0L146",
        "old_file": "tests/components/roku/test_config_flow.py",
        "old_line": 146,
        "old_code": "async def test_form_cannot_connect_socket(hass: HomeAssistantType) -> None:",
        "new_line": "",
        "new_file": "tests/components/roku/test_config_flow.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L76",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 76,
        "old_code": "def _detect_device_type(node) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L113",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 113,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L124",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 124,
        "old_code": "    def add_heartbeat_device(self, device) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L138",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 138,
        "old_code": "    def add_negative_node(self, child) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L156",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 156,
        "old_code": "    def _negative_node_control_handler(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L167",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 167,
        "old_code": "    def _positive_node_control_handler(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L191",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 191,
        "old_code": "    def on_update(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e65f72f2ed775f6d3c7811877e1b15085cbc0d3b#diff-7bf53884fde265669fb1cfd03ea8b503df99ab47L208",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 208,
        "old_code": "    def value(self) -> object:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b62c7abc5de2731a78533e30bc73ba31d080678e#diff-fdc19a7afaadf7a8b3a2971eae03db381857cbffL27",
        "old_file": "homeassistant/components/unifi/unifi_client.py",
        "old_line": 27,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/unifi_client.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b62c7abc5de2731a78533e30bc73ba31d080678e#diff-fdc19a7afaadf7a8b3a2971eae03db381857cbffL32",
        "old_file": "homeassistant/components/unifi/unifi_client.py",
        "old_line": 32,
        "old_code": "    async def async_will_remove_from_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/unifi/unifi_client.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/85f129492a5947df359129e5241e59778ab1a81e#diff-f54ed818b758959cb2aa93ee26219fcdd8cba042L178",
        "old_file": "homeassistant/components/zha/core/const.py",
        "old_line": "",
        "old_code": "",
        "new_line": 178,
        "new_file": "homeassistant/components/zha/core/const.py",
        "new_code": "    def list(cls) -> List[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/85f129492a5947df359129e5241e59778ab1a81e#diff-f54ed818b758959cb2aa93ee26219fcdd8cba042L183",
        "old_file": "homeassistant/components/zha/core/const.py",
        "old_line": "",
        "old_code": "",
        "new_line": 183,
        "new_file": "homeassistant/components/zha/core/const.py",
        "new_code": "    def get_by_description(cls, description: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/85f129492a5947df359129e5241e59778ab1a81e#diff-f54ed818b758959cb2aa93ee26219fcdd8cba042L196",
        "old_file": "homeassistant/components/zha/core/const.py",
        "old_line": "",
        "old_code": "",
        "new_line": 196,
        "new_file": "homeassistant/components/zha/core/const.py",
        "new_code": "    def controller(self) -> CALLABLE_T:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L98",
        "old_file": "homeassistant/components/isy994/__init__.py",
        "old_line": 98,
        "old_code": "    def stop(event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L21",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 21,
        "old_code": "    def __init__(self, node) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L28",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 28,
        "old_code": "    async def async_added_to_hass(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L35",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 35,
        "old_code": "    def on_update(self, event: object) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L39",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 39,
        "old_code": "    def on_control(self, event: NodeProperty) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L57",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 57,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L64",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 64,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L69",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 69,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L74",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 74,
        "old_code": "    def value(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L90",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 90,
        "old_code": "    def device_state_attributes(self) -> Dict:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d7f736ed6caca65a5f57fcf80e8de72180e20874#diff-3d0360a7561baca950d2d1544398836f3d5a2ce4L115",
        "old_file": "homeassistant/components/isy994/entity.py",
        "old_line": 115,
        "old_code": "    def __init__(self, name: str, status, actions=None) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/entity.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/06ddda8c95764a5e56c4847fc417d98cbddfc627#diff-079059450528b525340e6d8ce3cc9c706849f71dL46",
        "old_file": "homeassistant/components/roku/remote.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/roku/remote.py",
        "new_code": "    async def async_turn_on(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/06ddda8c95764a5e56c4847fc417d98cbddfc627#diff-079059450528b525340e6d8ce3cc9c706849f71dL50",
        "old_file": "homeassistant/components/roku/remote.py",
        "old_line": "",
        "old_code": "",
        "new_line": 50,
        "new_file": "homeassistant/components/roku/remote.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/799cdbe64d5edbe523546c4d586a605ff3e5bc06#diff-4cd921d0d99d5ed7e8074be62864e6b4bd18f4dcL96",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def __init__(self, vname: str, vobj: object) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/799cdbe64d5edbe523546c4d586a605ff3e5bc06#diff-4cd921d0d99d5ed7e8074be62864e6b4bd18f4dcL107",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 107,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def device_state_attributes(self) -> Dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/c71b6c8a71dfc0bd89f7ff55600e4b54502118db#diff-c38bb458ff8675e9875c1dfe0a6c41944a59459dL356",
        "old_file": "homeassistant/components/unifi/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 356,
        "new_file": "homeassistant/components/unifi/device_tracker.py",
        "new_code": "    async def async_update_device_registry(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3315c4c6c392ef1bbcf68bc2c0018d229a28a37a#diff-939a90dc55ab2459cf9c9301aa86251c6c36187cL83",
        "old_file": "homeassistant/components/zeroconf/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 83,
        "new_file": "homeassistant/components/zeroconf/__init__.py",
        "new_code": "    def update_record(self, zc: \"Zeroconf\", now: float, record: DNSRecord) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b1d59679e59f2b7c5b2e040c4b38cdc4c41a155f#diff-566113538017408fb705a9a254820096456f4980L357",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": 357,
        "old_code": "    def value(self) -> object:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b1d59679e59f2b7c5b2e040c4b38cdc4c41a155f#diff-566113538017408fb705a9a254820096456f4980L217",
        "old_file": "homeassistant/components/isy994/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 217,
        "new_file": "homeassistant/components/isy994/binary_sensor.py",
        "new_code": "    def is_on(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b1d59679e59f2b7c5b2e040c4b38cdc4c41a155f#diff-566113538017408fb705a9a254820096456f4980L58",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": 58,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b1d59679e59f2b7c5b2e040c4b38cdc4c41a155f#diff-566113538017408fb705a9a254820096456f4980L46",
        "old_file": "homeassistant/components/isy994/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 46,
        "new_file": "homeassistant/components/isy994/cover.py",
        "new_code": "    def is_closed(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b1d59679e59f2b7c5b2e040c4b38cdc4c41a155f#diff-566113538017408fb705a9a254820096456f4980L47",
        "old_file": "homeassistant/components/isy994/lock.py",
        "old_line": 47,
        "old_code": "    def state(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/isy994/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/b1d59679e59f2b7c5b2e040c4b38cdc4c41a155f#diff-566113538017408fb705a9a254820096456f4980L49",
        "old_file": "homeassistant/components/isy994/sensor.py",
        "old_line": 49,
        "old_code": "    def raw_unit_of_measurement(self) -> str:",
        "new_line": 50,
        "new_file": "homeassistant/components/isy994/sensor.py",
        "new_code": "    def raw_unit_of_measurement(self) -> Union[dict, str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4099815a08d70a8c6bbcaabd2892812338b8edbc#diff-bbbf2f07141e7e44bae2d47519db15eb1ddbfb08L220",
        "old_file": "homeassistant/components/atag/__init__.py",
        "old_line": 220,
        "old_code": "    def icon(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/atag/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4099815a08d70a8c6bbcaabd2892812338b8edbc#diff-bbbf2f07141e7e44bae2d47519db15eb1ddbfb08L191",
        "old_file": "homeassistant/components/atag/__init__.py",
        "old_line": 191,
        "old_code": "    def __init__(self, coordinator: AtagDataUpdateCoordinator, atag_type: dict) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/atag/__init__.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4099815a08d70a8c6bbcaabd2892812338b8edbc#diff-bbbf2f07141e7e44bae2d47519db15eb1ddbfb08L94",
        "old_file": "homeassistant/components/atag/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 94,
        "new_file": "homeassistant/components/atag/__init__.py",
        "new_code": "    def __init__(self, coordinator: AtagDataUpdateCoordinator, atag_id: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d8b8ecfa90d4639965873522e37521acff2d63c#diff-e376e3d8c62e8254a71b9480af0ebf7ecdbe2333L197",
        "old_file": "tests/components/isy994/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 197,
        "new_file": "tests/components/isy994/test_config_flow.py",
        "new_code": "async def test_import_flow_with_https(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d8b8ecfa90d4639965873522e37521acff2d63c#diff-e376e3d8c62e8254a71b9480af0ebf7ecdbe2333L243",
        "old_file": "tests/components/isy994/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "tests/components/isy994/test_config_flow.py",
        "new_code": "async def test_form_ssdp_already_configured(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6d8b8ecfa90d4639965873522e37521acff2d63c#diff-e376e3d8c62e8254a71b9480af0ebf7ecdbe2333L177",
        "old_file": "tests/components/isy994/test_config_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 177,
        "new_file": "tests/components/isy994/test_config_flow.py",
        "new_code": "async def test_import_flow_some_fields(hass: HomeAssistantType) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3bf1cf4f853ea22b63ab171c87cb5760a91fe5c9#diff-792a5103cfbe83e7403b4f0a207c3b3a4b3aa18cL55",
        "old_file": "homeassistant/components/smartthings/smartapp.py",
        "old_line": "",
        "old_code": "",
        "new_line": 55,
        "new_file": "homeassistant/components/smartthings/smartapp.py",
        "new_code": "def format_unique_id(app_id: str, location_id: str) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3bf1cf4f853ea22b63ab171c87cb5760a91fe5c9#diff-792a5103cfbe83e7403b4f0a207c3b3a4b3aa18cL92",
        "old_file": "homeassistant/components/smartthings/smartapp.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/smartthings/smartapp.py",
        "new_code": "def validate_webhook_requirements(hass: HomeAssistantType) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/42dd3ba748c0d525ec1202b4e64ab50ef82435e9#diff-8ca62ff867159e8ecf20dcdcd7a1d9660e9195c0L77",
        "old_file": "homeassistant/components/isy994/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/isy994/light.py",
        "new_code": "    async def async_added_to_hass(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8cf354c042d054840e101c1d66ab1adfb516b471#diff-bd58a751535bc361168ddcfcb6a84bf0968b046aL291",
        "old_file": "homeassistant/components/yeelight/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 291,
        "new_file": "homeassistant/components/yeelight/__init__.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8cf354c042d054840e101c1d66ab1adfb516b471#diff-bd58a751535bc361168ddcfcb6a84bf0968b046aL43",
        "old_file": "homeassistant/components/yeelight/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 43,
        "new_file": "homeassistant/components/yeelight/binary_sensor.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8cf354c042d054840e101c1d66ab1adfb516b471#diff-bd58a751535bc361168ddcfcb6a84bf0968b046aL475",
        "old_file": "homeassistant/components/yeelight/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 475,
        "new_file": "homeassistant/components/yeelight/light.py",
        "new_code": "    def unique_id(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/92756f9b128feebd651e106452edb57c029e5ab3#diff-e9a0e53852eff180d0053ddda2a491162ef70fbeL53",
        "old_file": "homeassistant/components/yeelight/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 53,
        "new_file": "homeassistant/components/yeelight/binary_sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L15",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 15,
        "old_code": "    def __init__(self, text: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L51",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 51,
        "old_code": "    def close(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L55",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 55,
        "old_code": "    async def async_close(self, blocking: bool = False) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L66",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 66,
        "old_code": "    def emit(self, record: Optional[logging.LogRecord]) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L77",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 77,
        "old_code": "    def __repr__(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L81",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 81,
        "old_code": "    def _process(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L97",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 97,
        "old_code": "    def createLock(self) -> None:  # pylint: disable=invalid-name",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L100",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 100,
        "old_code": "    def acquire(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L103",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 103,
        "old_code": "    def release(self) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L107",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 107,
        "old_code": "    def level(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L112",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 112,
        "old_code": "    def formatter(self) -> Optional[logging.Formatter]:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L33",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 33,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def emit(self, record: logging.LogRecord) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L69",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 69,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def _async_stop_queue_handler(_: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L44",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 44,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "def async_activate_log_queue_handler(hass: HomeAssistant) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L30",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 30,
        "old_code": "    def __init__(self, loop: AbstractEventLoop, handler: logging.Handler) -> None:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/73616520c004d3e8360d0f59ba345775810f73ac#diff-b3845672fff5aafdb7393c3638e450e65ca468d7L117",
        "old_file": "homeassistant/util/logging.py",
        "old_line": 117,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/util/logging.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/11b786a4fc39d3a31c8ab27045d88c9a437003b5#diff-913486d1846314b6ce161b099e110669203a9e69L10",
        "old_file": "homeassistant/components/gogogate2/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 10,
        "new_file": "homeassistant/components/gogogate2/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistant, base_config: dict) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/11b786a4fc39d3a31c8ab27045d88c9a437003b5#diff-913486d1846314b6ce161b099e110669203a9e69L15",
        "old_file": "homeassistant/components/gogogate2/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 15,
        "new_file": "homeassistant/components/gogogate2/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistant, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/11b786a4fc39d3a31c8ab27045d88c9a437003b5#diff-913486d1846314b6ce161b099e110669203a9e69L30",
        "old_file": "homeassistant/components/gogogate2/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "homeassistant/components/gogogate2/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistant, config_entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1297a093443ac2243b4fcca402434f7cdf364d3f#diff-d5011b20f852788a799c77581adf1b600b0aab47L42",
        "old_file": "homeassistant/util/logging.py",
        "old_line": "",
        "old_code": "",
        "new_line": 42,
        "new_file": "homeassistant/util/logging.py",
        "new_code": "    def handle(self, record: logging.LogRecord) -> Any:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L46",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": 46,
        "old_code": "    def speed(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L51",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": 51,
        "old_code": "    def speed_list(self) -> list:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L56",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": 56,
        "old_code": "    def supported_features(self) -> int:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L60",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": 60,
        "old_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L66",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": 66,
        "old_code": "    async def async_turn_off(self, **kwargs) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L70",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": 70,
        "old_code": "    async def async_set_speed(self, speed: str) -> None:",
        "new_line": "",
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L40",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 40,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    def speed(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L51",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 51,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    def speed_list(self) -> list:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L56",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 56,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    def supported_features(self) -> int:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L60",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    async def async_turn_on(self, speed: str = None, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L66",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 66,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    async def async_turn_off(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L70",
        "old_file": "homeassistant/components/insteon/fan.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/insteon/fan.py",
        "new_code": "    async def async_set_speed(self, speed: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/dbd821a564fb3adb0e9e9720ba7e8716a3fc597e#diff-fd87624f85da6c3772d3b9fcf0b59bd71fdce9f7L110",
        "old_file": "homeassistant/components/insteon/ipdb.py",
        "old_line": "",
        "old_code": "",
        "new_line": 110,
        "new_file": "homeassistant/components/insteon/ipdb.py",
        "new_code": "def get_platform_groups(device, domain) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f317353e08d28661d67682e5f6437802ae8b5dc#diff-6421e6cddf98f9a49f917503e3def14565886886L88",
        "old_file": "homeassistant/components/nuki/lock.py",
        "old_line": 88,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/nuki/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f317353e08d28661d67682e5f6437802ae8b5dc#diff-6421e6cddf98f9a49f917503e3def14565886886L112",
        "old_file": "homeassistant/components/nuki/lock.py",
        "old_line": 112,
        "old_code": "    def available(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/nuki/lock.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f317353e08d28661d67682e5f6437802ae8b5dc#diff-6421e6cddf98f9a49f917503e3def14565886886L92",
        "old_file": "homeassistant/components/nuki/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/nuki/lock.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/4f317353e08d28661d67682e5f6437802ae8b5dc#diff-6421e6cddf98f9a49f917503e3def14565886886L116",
        "old_file": "homeassistant/components/nuki/lock.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/components/nuki/lock.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9907e95c34d0763838756e06497cc0bf905d78e4#diff-4bedb781fe0cc30363b64dc2c52b5351c39c2644L57",
        "old_file": "homeassistant/components/zha/core/channels/hvac.py",
        "old_line": "",
        "old_code": "",
        "new_line": 57,
        "new_file": "homeassistant/components/zha/core/channels/hvac.py",
        "new_code": "    def fan_mode(self) -> Optional[int]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9907e95c34d0763838756e06497cc0bf905d78e4#diff-4bedb781fe0cc30363b64dc2c52b5351c39c2644L70",
        "old_file": "homeassistant/components/zha/core/channels/hvac.py",
        "old_line": "",
        "old_code": "",
        "new_line": 70,
        "new_file": "homeassistant/components/zha/core/channels/hvac.py",
        "new_code": "    async def async_update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/9907e95c34d0763838756e06497cc0bf905d78e4#diff-4bedb781fe0cc30363b64dc2c52b5351c39c2644L80",
        "old_file": "homeassistant/components/zha/core/channels/hvac.py",
        "old_line": "",
        "old_code": "",
        "new_line": 80,
        "new_file": "homeassistant/components/zha/core/channels/hvac.py",
        "new_code": "    def attribute_updated(self, attrid: int, value: Any) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1593bdf2e9cc4840a7dc3cbca843c98f10a023c9#diff-2157042cf850f78a37104d38e79fbbbb89518bf1L68",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 68,
        "new_file": "tests/components/climate/test_init.py",
        "new_code": "    def turn_on(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1593bdf2e9cc4840a7dc3cbca843c98f10a023c9#diff-2157042cf850f78a37104d38e79fbbbb89518bf1L71",
        "old_file": "tests/components/climate/test_init.py",
        "old_line": "",
        "old_code": "",
        "new_line": 71,
        "new_file": "tests/components/climate/test_init.py",
        "new_code": "    def turn_off(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b8aa198faeff3060d13f7d851b8b920557ec48e#diff-d6a4c647c212bf86c439dfd237dc919d1dc91763L37",
        "old_file": "homeassistant/components/iaqualink/sensor.py",
        "old_line": 37,
        "old_code": "    def unit_of_measurement(self) -> str:",
        "new_line": 37,
        "new_file": "homeassistant/components/iaqualink/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/8b8aa198faeff3060d13f7d851b8b920557ec48e#diff-d6a4c647c212bf86c439dfd237dc919d1dc91763L44",
        "old_file": "homeassistant/components/iaqualink/sensor.py",
        "old_line": 44,
        "old_code": "    def state(self) -> str:",
        "new_line": 46,
        "new_file": "homeassistant/components/iaqualink/sensor.py",
        "new_code": "    def state(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/765bf760b4a788e38e1327bef6cf55fa8d4a5445#diff-8d142a33cfae5e49d48a26c4b19b8c0682fd1f81L172",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_pause(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/765bf760b4a788e38e1327bef6cf55fa8d4a5445#diff-8d142a33cfae5e49d48a26c4b19b8c0682fd1f81L176",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_play(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04cfd36d06ce4becf8567ca27ea589f0550037f5#diff-06a282673d15bfb78b72a1fb39441664e6962c99L243",
        "old_file": "homeassistant/components/zha/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 243,
        "new_file": "homeassistant/components/zha/climate.py",
        "new_code": "    def _rm_rs_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/04cfd36d06ce4becf8567ca27ea589f0550037f5#diff-06a282673d15bfb78b72a1fb39441664e6962c99L262",
        "old_file": "homeassistant/components/zha/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 262,
        "new_file": "homeassistant/components/zha/climate.py",
        "new_code": "    def _pi_demand_action(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4c5b9f8f8f30fb905651383d2248fae37529878#diff-f123d9560518e4ae2ae8d24b8b53892ff7001c3fL200",
        "old_file": "homeassistant/components/zha/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 200,
        "new_file": "homeassistant/components/zha/cover.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4c5b9f8f8f30fb905651383d2248fae37529878#diff-f123d9560518e4ae2ae8d24b8b53892ff7001c3fL205",
        "old_file": "homeassistant/components/zha/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 205,
        "new_file": "homeassistant/components/zha/cover.py",
        "new_code": "    def is_closed(self) -> Optional[bool]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4c5b9f8f8f30fb905651383d2248fae37529878#diff-f123d9560518e4ae2ae8d24b8b53892ff7001c3fL229",
        "old_file": "homeassistant/components/zha/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 229,
        "new_file": "homeassistant/components/zha/cover.py",
        "new_code": "    def async_set_open_closed(self, attr_id: int, attr_name: str, value: bool) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4c5b9f8f8f30fb905651383d2248fae37529878#diff-f123d9560518e4ae2ae8d24b8b53892ff7001c3fL235",
        "old_file": "homeassistant/components/zha/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 235,
        "new_file": "homeassistant/components/zha/cover.py",
        "new_code": "    def async_set_level(self, value: int) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f4c5b9f8f8f30fb905651383d2248fae37529878#diff-f123d9560518e4ae2ae8d24b8b53892ff7001c3fL275",
        "old_file": "homeassistant/components/zha/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 275,
        "new_file": "homeassistant/components/zha/cover.py",
        "new_code": "    async def async_stop_cover(self, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fe45935f38274a3c34d6dbf5f9ab06e1d368031d#diff-01ca5889e8c0bf39422ce98aa18228dab9a1a118L202",
        "old_file": "homeassistant/components/zha/cover.py",
        "old_line": "",
        "old_code": "",
        "new_line": 202,
        "new_file": "homeassistant/components/zha/cover.py",
        "new_code": "    def device_class(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/376e0e0e938440cc8758599cb5ee724f153ec812#diff-a4aac5a90bea2ba3506b2fa5ccbb9c5fdcd25bfaL151",
        "old_file": "homeassistant/components/axis/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "homeassistant/components/axis/device.py",
        "new_code": "    async def use_mqtt(self, hass: HomeAssistant, component: str) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/376e0e0e938440cc8758599cb5ee724f153ec812#diff-a4aac5a90bea2ba3506b2fa5ccbb9c5fdcd25bfaL163",
        "old_file": "homeassistant/components/axis/device.py",
        "old_line": "",
        "old_code": "",
        "new_line": 163,
        "new_file": "homeassistant/components/axis/device.py",
        "new_code": "    def mqtt_message(self, message: Message) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/3a97d96dc0bf4b633cfc92a6c8c592f7ea648ca8#diff-051e050de6264717001895e386ed8170fb66154aL77",
        "old_file": "homeassistant/components/nws/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 77,
        "new_file": "homeassistant/components/nws/__init__.py",
        "new_code": "    def _schedule_refresh(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL175",
        "old_file": "homeassistant/components/calendar/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "homeassistant/components/calendar/__init__.py",
        "new_code": "    def __init__(self, component: EntityComponent) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL207",
        "old_file": "homeassistant/components/calendar/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 207,
        "new_file": "homeassistant/components/calendar/__init__.py",
        "new_code": "    async def get(self, request: web.Request) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL481",
        "old_file": "homeassistant/components/camera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 481,
        "new_file": "homeassistant/components/camera/__init__.py",
        "new_code": "    def __init__(self, component: EntityComponent) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL485",
        "old_file": "homeassistant/components/camera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 485,
        "new_file": "homeassistant/components/camera/__init__.py",
        "new_code": "    async def get(self, request: web.Request, entity_id: str) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL517",
        "old_file": "homeassistant/components/camera/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 517,
        "new_file": "homeassistant/components/camera/__init__.py",
        "new_code": "    async def handle(self, request: web.Request, camera: Camera) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL25",
        "old_file": "homeassistant/components/http/data_validator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 25,
        "new_file": "homeassistant/components/http/data_validator.py",
        "new_code": "    def __init__(self, schema: vol.Schema, allow_empty: bool = False) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL36",
        "old_file": "homeassistant/components/http/view.py",
        "old_line": "",
        "old_code": "",
        "new_line": 36,
        "new_file": "homeassistant/components/http/view.py",
        "new_code": "    def context(request: web.Request) -> Context:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL203",
        "old_file": "homeassistant/components/mailbox/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 203,
        "new_file": "homeassistant/components/mailbox/__init__.py",
        "new_code": "    async def get(self, request: web.Request) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL867",
        "old_file": "homeassistant/components/media_player/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 867,
        "new_file": "homeassistant/components/media_player/__init__.py",
        "new_code": "    async def get(self, request: web.Request, entity_id: str) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL533",
        "old_file": "homeassistant/components/tts/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 533,
        "new_file": "homeassistant/components/tts/__init__.py",
        "new_code": "    async def post(self, request: web.Request) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL573",
        "old_file": "homeassistant/components/tts/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 573,
        "new_file": "homeassistant/components/tts/__init__.py",
        "new_code": "    async def get(self, request: web.Request, filename: str) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL45",
        "old_file": "homeassistant/components/websocket_api/http.py",
        "old_line": "",
        "old_code": "",
        "new_line": 45,
        "new_file": "homeassistant/components/websocket_api/http.py",
        "new_code": "    async def get(self, request: web.Request) -> web.WebSocketResponse:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL18",
        "old_file": "homeassistant/helpers/data_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 18,
        "new_file": "homeassistant/helpers/data_entry_flow.py",
        "new_code": "    def __init__(self, flow_mgr: data_entry_flow.FlowManager) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL23",
        "old_file": "homeassistant/helpers/data_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 23,
        "new_file": "homeassistant/helpers/data_entry_flow.py",
        "new_code": "    def _prepare_result_json(self, result: Dict[str, Any]) -> Dict[str, Any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL61",
        "old_file": "homeassistant/helpers/data_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 61,
        "new_file": "homeassistant/helpers/data_entry_flow.py",
        "new_code": "    async def post(self, request: web.Request, data: Dict[str, Any]) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL89",
        "old_file": "homeassistant/helpers/data_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 89,
        "new_file": "homeassistant/helpers/data_entry_flow.py",
        "new_code": "    async def get(self, request: web.Request, flow_id: str) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/f8416484f86db4031764f25832c6ed38802d693f#diff-45b0a0a59c4c54d17cadb4f290e56ea74138ce5cL116",
        "old_file": "homeassistant/helpers/data_entry_flow.py",
        "old_line": "",
        "old_code": "",
        "new_line": 116,
        "new_file": "homeassistant/helpers/data_entry_flow.py",
        "new_code": "    async def delete(self, request: web.Request, flow_id: str) -> web.Response:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/6609bd94e5f603e6abebb532413ef7d5d00c7825#diff-2221ef2bc203c6144ce3b13b7bfa1d9c9998ad05L379",
        "old_file": "homeassistant/components/airvisual/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 379,
        "new_file": "homeassistant/components/airvisual/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7e693afcf317a34fa23ddefc36c33a07ca4b0140#diff-eee6fba6342c70b642ce7ee5297274a92bd762d9L130",
        "old_file": "homeassistant/components/plugwise/climate.py",
        "old_line": "",
        "old_code": "",
        "new_line": 130,
        "new_file": "homeassistant/components/plugwise/climate.py",
        "new_code": "    def device_info(self) -> Dict[str, any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fbe7b4ddfa813e300f99175d254ec509c8d65e33#diff-9f57ec4ce4e4f8131abaea93ffbc8c482ca8e86dL213",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 213,
        "new_file": "homeassistant/core.py",
        "new_code": "    def is_stopping(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ed014e3c96547451f8bd07033b3cb5d0fb7575e9#diff-172f794dfc2f90549e24f8e735794b7c84f46c7fL213",
        "old_file": "homeassistant/core.py",
        "old_line": 213,
        "old_code": "    def is_stopping(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/core.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/940249f45e4f5bf93161e167f0bd2573a259c385#diff-0dc1bffbd0938832acff8ad0c670a1c66ba8db64L41",
        "old_file": "homeassistant/components/sonarr/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 41,
        "new_file": "homeassistant/components/sonarr/__init__.py",
        "new_code": "async def async_setup(hass: HomeAssistantType, config: Dict) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/940249f45e4f5bf93161e167f0bd2573a259c385#diff-0dc1bffbd0938832acff8ad0c670a1c66ba8db64L47",
        "old_file": "homeassistant/components/sonarr/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 47,
        "new_file": "homeassistant/components/sonarr/__init__.py",
        "new_code": "async def async_setup_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/940249f45e4f5bf93161e167f0bd2573a259c385#diff-0dc1bffbd0938832acff8ad0c670a1c66ba8db64L90",
        "old_file": "homeassistant/components/sonarr/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 90,
        "new_file": "homeassistant/components/sonarr/__init__.py",
        "new_code": "async def async_unload_entry(hass: HomeAssistantType, entry: ConfigEntry) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/940249f45e4f5bf93161e167f0bd2573a259c385#diff-0dc1bffbd0938832acff8ad0c670a1c66ba8db64L109",
        "old_file": "homeassistant/components/sonarr/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 109,
        "new_file": "homeassistant/components/sonarr/__init__.py",
        "new_code": "async def _async_update_listener(hass: HomeAssistantType, entry: ConfigEntry) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7197ef76a67a720ef682c765d6d8c24afce557e8#diff-4e769e9888a0e236efa3040e53563655d3f80ec9L82",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 82,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7197ef76a67a720ef682c765d6d8c24afce557e8#diff-4e769e9888a0e236efa3040e53563655d3f80ec9L87",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 87,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7197ef76a67a720ef682c765d6d8c24afce557e8#diff-4e769e9888a0e236efa3040e53563655d3f80ec9L92",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 92,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7197ef76a67a720ef682c765d6d8c24afce557e8#diff-4e769e9888a0e236efa3040e53563655d3f80ec9L97",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 97,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7197ef76a67a720ef682c765d6d8c24afce557e8#diff-4e769e9888a0e236efa3040e53563655d3f80ec9L74",
        "old_file": "homeassistant/components/rachio/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 74,
        "new_file": "homeassistant/components/rachio/binary_sensor.py",
        "new_code": "    def _async_handle_update(self, *args, **kwargs) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d0fedad000019e4ebe9193a121c18542bd96bdd6#diff-552d72832264d53620cc88e33d7a95151359701fL173",
        "old_file": "homeassistant/components/plugwise/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 173,
        "new_file": "homeassistant/components/plugwise/__init__.py",
        "new_code": "    def device_info(self) -> Dict[str, any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/d0fedad000019e4ebe9193a121c18542bd96bdd6#diff-552d72832264d53620cc88e33d7a95151359701fL130",
        "old_file": "homeassistant/components/plugwise/climate.py",
        "old_line": 130,
        "old_code": "    def device_info(self) -> Dict[str, any]:",
        "new_line": "",
        "new_file": "homeassistant/components/plugwise/climate.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L273",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 273,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "        def unsubscribe() -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L350",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 350,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def unique_id(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L355",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 355,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def name(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L360",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 360,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def icon(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L365",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 365,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def unit_of_measurement(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L372",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 372,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def device_class(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L377",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 377,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L382",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 382,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def device_info(self) -> Dict[str, any]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L393",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 393,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def entity_registry_enabled_default(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L398",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 398,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L463",
        "old_file": "homeassistant/components/synology_dsm/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 463,
        "new_file": "homeassistant/components/synology_dsm/__init__.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L95",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 95,
        "old_code": "    def unique_id(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L100",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 100,
        "old_code": "    def name(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L105",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 105,
        "old_code": "    def icon(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L110",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 110,
        "old_code": "    def unit_of_measurement(self) -> str:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L117",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 117,
        "old_code": "    def device_state_attributes(self) -> Dict[str, any]:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L122",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 122,
        "old_code": "    def device_info(self) -> Dict[str, any]:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L133",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": 133,
        "old_code": "    def should_poll(self) -> bool:",
        "new_line": "",
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/home-assistant/core/commit/26cbca101ade36886ef387b66d944d02c24733f2#diff-e47991e1c199aded616a510330a0276574304034L84",
        "old_file": "homeassistant/components/synology_dsm/sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 84,
        "new_file": "homeassistant/components/synology_dsm/sensor.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/db8d4053d668e8c63b63e8d5c3260a1dd6fe013e#diff-6b06ea985385eea4e5f00ac21ae837776e609f06L129",
        "old_file": "homeassistant/components/hassio/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 129,
        "new_file": "homeassistant/components/hassio/__init__.py",
        "new_code": "async def async_get_addon_info(hass: HomeAssistantType, addon_id: str) -> dict:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/578d4a9b6ad66ebbb6949904ee956d75f2e597e5#diff-d9c053ea6b20142da3d39485bc281d97c868f1a8L213",
        "old_file": "homeassistant/core.py",
        "old_line": "",
        "old_code": "",
        "new_line": 213,
        "new_file": "homeassistant/core.py",
        "new_code": "    def is_stopping(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab741535f7c0d1627fda950632773c929306af7a#diff-8d142a33cfae5e49d48a26c4b19b8c0682fd1f81L172",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 172,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_pause(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ab741535f7c0d1627fda950632773c929306af7a#diff-8d142a33cfae5e49d48a26c4b19b8c0682fd1f81L176",
        "old_file": "homeassistant/components/roku/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 176,
        "new_file": "homeassistant/components/roku/media_player.py",
        "new_code": "    async def async_media_play(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fad79046a876f11a2eefc90138063ebd6c26a811#diff-d6a4c647c212bf86c439dfd237dc919d1dc91763L37",
        "old_file": "homeassistant/components/iaqualink/sensor.py",
        "old_line": 37,
        "old_code": "    def unit_of_measurement(self) -> str:",
        "new_line": 37,
        "new_file": "homeassistant/components/iaqualink/sensor.py",
        "new_code": "    def unit_of_measurement(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fad79046a876f11a2eefc90138063ebd6c26a811#diff-d6a4c647c212bf86c439dfd237dc919d1dc91763L44",
        "old_file": "homeassistant/components/iaqualink/sensor.py",
        "old_line": 44,
        "old_code": "    def state(self) -> str:",
        "new_line": 46,
        "new_file": "homeassistant/components/iaqualink/sensor.py",
        "new_code": "    def state(self) -> Optional[str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/ca0149c6355efb5eadda7006dcf1febede00837e#diff-2221ef2bc203c6144ce3b13b7bfa1d9c9998ad05L379",
        "old_file": "homeassistant/components/airvisual/__init__.py",
        "old_line": "",
        "old_code": "",
        "new_line": 379,
        "new_file": "homeassistant/components/airvisual/__init__.py",
        "new_code": "    def should_poll(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/fcef2590214c07ebb0e61dc3c60b4a03111735fa#diff-83969cb3c071bad5a38720d46893f72814e7c13dL347",
        "old_file": "homeassistant/components/withings/common.py",
        "old_line": "",
        "old_code": "",
        "new_line": 347,
        "new_file": "homeassistant/components/withings/common.py",
        "new_code": "    def redirect_uri(self) -> str:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/0950ab0dd8ceb0fc6030a1032cf26e4d1585f2e7#diff-b5fd697f32bab30be615786144895476ef004e6dL114",
        "old_file": "homeassistant/components/wled/light.py",
        "old_line": "",
        "old_code": "",
        "new_line": 114,
        "new_file": "homeassistant/components/wled/light.py",
        "new_code": "    def available(self) -> bool:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1186c2c48cd4e8b39b9f3b3f0238503fd962a222#diff-90381b471df9ef5c78a7ed35927d1d081888f372L91",
        "old_file": "homeassistant/components/nad/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 91,
        "new_file": "homeassistant/components/nad/media_player.py",
        "new_code": "    def _instantiate_nad_receiver(self) -> NADReceiver:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/1510d5625a286b0b1abcc5f6c3a40d055c2ce8b5#diff-c03fe1c30397ba35d17620e2ade4433d0b53ffe1L175",
        "old_file": "homeassistant/components/nad/media_player.py",
        "old_line": "",
        "old_code": "",
        "new_line": 175,
        "new_file": "homeassistant/components/nad/media_player.py",
        "new_code": "    def update(self) -> None:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/e08ba6703cdc99dbe5d72966ec7d498605e8ebb5#diff-477dfb187bdfc0e34e6d394b513834742de45a2aL59",
        "old_file": "homeassistant/components/synology_dsm/binary_sensor.py",
        "old_line": "",
        "old_code": "",
        "new_line": 59,
        "new_file": "homeassistant/components/synology_dsm/binary_sensor.py",
        "new_code": "    def device_state_attributes(self) -> Dict[str, str]:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7a3c2e1f6c87da6447bd80d741aac16927bab6a2#diff-059c0e48f9fad1f01d1c8d624606b134f565d2f9L96",
        "old_file": "homeassistant/components/tile/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 96,
        "new_file": "homeassistant/components/tile/device_tracker.py",
        "new_code": "    def latitude(self) -> float:"
    },
    {
        "url": "https://github.com/home-assistant/core/commit/7a3c2e1f6c87da6447bd80d741aac16927bab6a2#diff-059c0e48f9fad1f01d1c8d624606b134f565d2f9L101",
        "old_file": "homeassistant/components/tile/device_tracker.py",
        "old_line": "",
        "old_code": "",
        "new_line": 101,
        "new_file": "homeassistant/components/tile/device_tracker.py",
        "new_code": "    def longitude(self) -> float:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L86",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 86,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_c_parser(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L127",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 127,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_lookahead(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L139",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 139,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_negative_lookahead(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L151",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 151,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_cut(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L167",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 167,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_gather(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L179",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 179,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_left_recursion(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L191",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 191,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_advanced_left_recursive(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L202",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 202,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_mutually_left_recursive(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L214",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 214,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_nasty_mutually_left_recursive(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L227",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 227,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_return_stmt_noexpr_action(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L242",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 242,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_gather_action_ast(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L253",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 253,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_pass_stmt_action(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L268",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 268,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_if_stmt_action(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L295",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 295,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_same_name_different_types(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L315",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 315,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_with_stmt_with_paren(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L344",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 344,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_ternary_operator(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L362",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 362,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_syntax_error_for_string(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L378",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 378,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_headers_and_trailer(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/24ffe705c30e36c82940d75fd1454256634d0b3c#diff-48ee579367e42c39e3cbad79b036ddacb83a4633L393",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 393,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_error_in_rules(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/5b9f4988c94f47fa35e84f154a7b5aa17bc04722#diff-71c1181de4b2f9daa54d94ae408d9996cc0c0082L21",
        "old_file": "Tools/peg_generator/pegen/build.py",
        "old_line": "",
        "old_code": "",
        "new_line": 21,
        "new_file": "Tools/peg_generator/pegen/build.py",
        "new_code": "def get_extra_flags(compiler_flags: str, compiler_py_flags_nodist: str) -> List[str]:"
    },
    {
        "url": "https://github.com/python/cpython/commit/4db245ee9ddbe6c53d375de59a35ff59dea2a8e0#diff-2e35df01593f5df9e8d9bc6a7d1162b12c99a580L124",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": 124,
        "old_code": "def dedupe(name: str, names: List[str]) -> str:",
        "new_line": "",
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/4db245ee9ddbe6c53d375de59a35ff59dea2a8e0#diff-2e35df01593f5df9e8d9bc6a7d1162b12c99a580L54",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 54,
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": "    def local_variable_context(self) -> Iterator[None]:"
    },
    {
        "url": "https://github.com/python/cpython/commit/4db245ee9ddbe6c53d375de59a35ff59dea2a8e0#diff-2e35df01593f5df9e8d9bc6a7d1162b12c99a580L60",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": "    def local_variable_names(self) -> List[str]:"
    },
    {
        "url": "https://github.com/python/cpython/commit/4db245ee9ddbe6c53d375de59a35ff59dea2a8e0#diff-2e35df01593f5df9e8d9bc6a7d1162b12c99a580L133",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 133,
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": "    def dedupe(self, name: str) -> str:"
    },
    {
        "url": "https://github.com/python/cpython/commit/4db245ee9ddbe6c53d375de59a35ff59dea2a8e0#diff-2e35df01593f5df9e8d9bc6a7d1162b12c99a580L53",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": 53,
        "old_code": "    def generate(self, filename: str) -> None:",
        "new_line": "",
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/7ba08ff7b41911f972d0750e068a2270e0dbd68f#diff-9a67420fe4d4fa625c8628fb47c56fcec5cc622fL115",
        "old_file": "Tools/peg_generator/pegen/build.py",
        "old_line": 115,
        "old_code": "def generate_token_definitions(tokens: IO[str]) -> Tuple[Dict[str, int], Set[str]]:",
        "new_line": 117,
        "new_file": "Tools/peg_generator/pegen/build.py",
        "new_code": "def generate_token_definitions(tokens: IO[str]) -> TokenDefinitions:"
    },
    {
        "url": "https://github.com/python/cpython/commit/ac7a92cc0a821699df48bc2e30a02c25d6338f78#diff-80826908a90a4970c4a40bee7277f1cc79458e43L30",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 30,
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": "    def visit_NamedItem(self, node: NameLeaf) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/d10fef35c6ce8a3193b974be7e8c8304b1146153#diff-5a89c73b68142ca20275e0ed78e3576a1a19aeaaL60",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": "",
        "old_code": "",
        "new_line": 60,
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": "    def validate_rule_names(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/d10fef35c6ce8a3193b974be7e8c8304b1146153#diff-5a89c73b68142ca20275e0ed78e3576a1a19aeaaL30",
        "old_file": "Tools/peg_generator/pegen/parser_generator.py",
        "old_line": 30,
        "old_code": "    def visit_NamedItem(self, node: NameLeaf) -> None:",
        "new_line": 30,
        "new_file": "Tools/peg_generator/pegen/parser_generator.py",
        "new_code": "    def visit_NamedItem(self, node: NamedItem) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/9645930b5bc1833ef495891d22052d1ba65ab7ea#diff-a08159b89eb8444dd4f438aae66c03f05dbc52a6L57",
        "old_file": "Tools/peg_generator/scripts/test_pypi_packages.py",
        "old_line": 57,
        "old_code": "def run_tests(dirname: str, tree: int, extension: Any) -> int:",
        "new_line": "",
        "new_file": "Tools/peg_generator/scripts/test_pypi_packages.py",
        "new_code": ""
    },
    {
        "url": "https://github.com/python/cpython/commit/b45af1a5691e83b86321fc52d173f66cf891ce5f#diff-cfa966e448295ee07f39185e9dc0dc8ddd674ff9L409",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 409,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_no_soft_keywords(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/b45af1a5691e83b86321fc52d173f66cf891ce5f#diff-cfa966e448295ee07f39185e9dc0dc8ddd674ff9L418",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 418,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_soft_keywords(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/b45af1a5691e83b86321fc52d173f66cf891ce5f#diff-cfa966e448295ee07f39185e9dc0dc8ddd674ff9L427",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 427,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_soft_keywords_parse(self) -> None:"
    },
    {
        "url": "https://github.com/python/cpython/commit/404b23b85b17c84e022779f31fc89cb0ed0d37e8#diff-9fe9e34735a4f6117b11203f0d017f0ffccb1cf7L439",
        "old_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "old_line": "",
        "old_code": "",
        "new_line": 439,
        "new_file": "Lib/test/test_peg_generator/test_c_parser.py",
        "new_code": "    def test_soft_keywords_lookahead(self) -> None:"
    }
]