[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 7379,
        "commit_year_dict": {
            "2015": 1236,
            "2016": 1206,
            "2017": 947,
            "2018": 934,
            "2019": 1346,
            "2020": 1298,
            "2021": 412
        },
        "loc_year_edit": {
            "2015": 177037,
            "2016": 107793,
            "2017": 59069,
            "2018": 79271,
            "2019": 88045,
            "2020": 63882,
            "2021": 7996
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 229,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 2011,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2018": 4,
            "2019": 809,
            "2020": 422,
            "2021": 60
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2018": 4,
            "2019": 293,
            "2020": 241,
            "2021": 11
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2019": 107,
            "2020": 50,
            "2021": 10
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 1295,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "ndsi.sensor": 1,
            "dict [str,remote_recording_state]": 1,
            "ndsi.network": 1,
            "callable [...,none]": 1,
            "str": 260,
            "np.ndarray": 34,
            "sequence [str]": 1,
            "sequence [video]": 3,
            "iterator [video]": 1,
            "np.recarray": 1,
            "none": 4,
            "bool": 147,
            "int": 121,
            "float": 115,
            "color_rgb": 2,
            "'color_rgb'": 3,
            "'color_rgba'": 3,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,int,int]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float,float,float,float]": 2,
            "dict": 63,
            "fm.serialized_dict": 4,
            "msgpack_serialized_segment": 4,
            "'time_range'": 4,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['time_range']": 2,
            "immutable_capture": 3,
            "gaze_data": 3,
            "offline_detection_task_args": 1,
            "offline_detection_task_function": 1,
            "offline_detection_task_generator": 1,
            "time_range": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [classified_segment]": 5,
            "classified_segment": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int]": 1,
            "\"color_bgr\"": 5,
            "\"color_rgb\"": 2,
            "\"color_rgba\"": 2,
            "\"color_bgra\"": 5,
            "typing.iterable": 2,
            "unique_key_getter": 2,
            "unique_select": 2,
            "tuple": 19,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['surface_base_marker']": 1,
            "list": 20,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['_square_marker_detection']": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['_apriltag_v2_marker_detection']": 1,
            "'surface_marker'": 6,
            "param_t": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker]": 7,
            "surface_marker": 3,
            "apriltag.detectionbase": 2,
            "surface_marker_type": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker]": 5,
            "surface_marker_tagid": 6,
            "surface_marker_uid": 7,
            "surface_marker_uid_to_aggregate_mapping": 9,
            "apriltag_v2_detection": 1,
            "'surface_base_marker'": 1,
            "'_square_marker_detection'": 1,
            "'_apriltag_v2_marker_detection'": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float,float]": 1,
            "\"surface\"": 2,
            "surface": 5,
            "surface_marker_aggregate": 6,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [surface,dict]]": 16,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [surface_marker_aggregate,dict]]": 19,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dict]": 29,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface]": 16,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker_aggregate]": 16,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [np,bool]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [frame]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,int]": 2,
            "csv_utils.csv_export_raw_type": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [csv_utils,...]": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "_infofiletype": 1,
            "recordinginfo": 3,
            "\"pupil_recording.filefilter\"": 7,
            "path": 7,
            "pm.pupil_recording": 1,
            "filtertype": 26,
            "filtermode": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='sequence',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [path]": 1,
            "\"pupilrecording.filefilter\"": 1,
            "uuid.uuid": 6,
            "recordingversion": 11,
            "\"recordinginfo\"": 6,
            "\"recordinginfoinvaliderror\"": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,_publicproperty]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [_publicproperty,_publicproperty]]": 1,
            "\"recordinginfofile\"": 3,
            "_keyvalueschema": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='set',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "recordinginfofile._keyvalueschema": 4,
            "recordinginfofile": 13,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,none]": 2,
            "recordingtype": 2,
            "pupilrecording": 10,
            "np.array": 1,
            "t.any": 7,
            "argparse.argumentparser": 2,
            "version": 4,
            "detector2d": 1,
            "pupildetector": 4,
            "detector3d": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pupildetectorplugin,t [pupildetectorplugin]]": 1,
            "roimodel": 3,
            "gazedimensionality": 2,
            "choreographymode": 13,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,\"gazer\"]": 1,
            "t.iterator": 1,
            "\"guimonitor.videomode\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"guimonitor\"]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,\"guimonitor\"]": 1,
            "\"guimonitor\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"guimonitor\"]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 3,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float,float]": 1,
            "calibrationresult": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,\"calibrationchoreographyplugin\"]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dict]": 4,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"singlemarkermode\"]": 1,
            "\"singlemarkermode\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t [dict],t [dict]]": 1,
            "model": 6,
            "t.namedtuple": 1,
            "calibrationresultnotification": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t]": 6,
            "\"choreographynotification\"": 1,
            "model.calibration": 1,
            "\"calibrationv1\"": 1,
            "calibration": 1,
            "\"pupildatasource\"": 1,
            "\"pupildatastore.bisectors\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"frameformat\"]": 2,
            "frameformat": 4,
            "framepublishercontroller": 2,
            "pupilremotecontroller": 2,
            "singlemarkermode": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [path]": 1,
            "_version": 2,
            "_rectangle": 10,
            "_margins": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [_rectangle]": 1,
            "\"_rectangle\"": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"_rectangle\"]": 2,
            "_cacherelevantdetectorparams": 4,
            "markerdetectorcontroller": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [markerdetectormode]": 1,
            "markerdetectormode": 1,
            "detectorbase": 1,
            "detectorpropertyproxy": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 2,
            "\"correlatedandcoordinatetransformedresult\"": 1,
            "correlatedandcoordinatetransformedresult": 4,
            "calculationresult": 2,
            "\"accuracyprecisionresult\"": 1,
            "accuracyprecisionresult": 1,
            "pathlib.path": 1,
            "componenttype": 3,
            "\"color[int]\"": 2,
            "\"color[componenttype]\"": 1,
            "\"color[float]\"": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 549,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "ndsi.sensor": 1,
            "dict [str,remote_recording_state]": 1,
            "ndsi.network": 1,
            "callable [...,none]": 1,
            "str": 101,
            "np.ndarray": 12,
            "sequence [str]": 1,
            "sequence [video]": 1,
            "dict": 15,
            "fm.serialized_dict": 4,
            "msgpack_serialized_segment": 4,
            "bool": 44,
            "tuple": 9,
            "float": 53,
            "int": 52,
            "param_t": 2,
            "apriltag.detectionbase": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker]": 1,
            "surface_marker": 1,
            "'surface_base_marker'": 1,
            "surface_marker_uid": 4,
            "surface_marker_tagid": 4,
            "list": 7,
            "surface_marker_type": 2,
            "'_square_marker_detection'": 1,
            "'_apriltag_v2_marker_detection'": 1,
            "'surface_marker'": 4,
            "surface_marker_uid_to_aggregate_mapping": 2,
            "filtermode": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "filtertype": 14,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='sequence',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [path]": 1,
            "\"pupil_recording.filefilter\"": 1,
            "recordinginfo": 3,
            "recordinginfofile": 10,
            "\"recordinginfofile\"": 1,
            "uuid.uuid": 3,
            "path": 3,
            "recordingtype": 1,
            "version": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [surface,dict]]": 12,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dict]": 24,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface]": 12,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [surface_marker_aggregate,dict]]": 12,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker_aggregate]": 12,
            "_infofiletype": 1,
            "t.any": 4,
            "detectorbase": 3,
            "exception": 1,
            "color_rgb": 2,
            "\"color_rgb\"": 5,
            "\"color_rgba\"": 5,
            "\"color_bgr\"": 5,
            "\"color_bgra\"": 5,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,int,int]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float,float,float,float]": 2,
            "classified_segment": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [classified_segment]": 3,
            "\"time_range\"": 4,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"time_range\"]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [np]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [np,bool]": 2,
            "model.immutable_capture": 3,
            "utils.gaze_data": 3,
            "offline_detection_task_args": 1,
            "offline_detection_task_function": 1,
            "offline_detection_task_generator": 1,
            "model.time_range": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [model]": 2,
            "gazedimensionality": 3,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,\"gazer\"]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 4,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [float,float]": 1,
            "choreographymode": 3,
            "model": 3,
            "frameformat": 4,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dict]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"frameformat\"]": 1,
            "framepublishercontroller": 1,
            "pupilremotecontroller": 1,
            "_rectangle": 6,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [_rectangle]": 1,
            "\"_rectangle\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"_rectangle\"]": 1,
            "_margins": 1,
            "detector3d": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [path]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 167,
        "typeChanged_dict_var": {},
        "typeChanged_dict_arg": {
            "'time_range' -> \"time_range\"": 3,
            "immutable_capture -> model.immutable_capture": 3,
            "gaze_data -> utils.gaze_data": 3,
            "time_range -> model.time_range": 1,
            "int -> bool": 1,
            "float -> bool": 1,
            "apriltag_v2_detection -> apriltag_v3_detection": 1,
            "str -> filtermode": 1,
            "recordingversion -> version": 4,
            "str -> uuid.uuid": 1,
            "version -> str": 1,
            "choreograthyaction -> choreographyaction": 1,
            "version -> _version": 1,
            "_version -> semanticversion": 1,
            "semanticversion -> parsedversion": 1
        },
        "typeChanged_dict_ret": {
            "str -> sequence [video]": 1,
            "'color_rgb' -> \"color_rgb\"": 3,
            "'color_rgba' -> \"color_rgba\"": 3,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['time_range'] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"time_range\"]": 2,
            "'time_range' -> \"time_range\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [classified_segment] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [model]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker] -> int": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['surface_base_marker'] -> 'surface_base_marker'": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['_square_marker_detection'] -> '_square_marker_detection'": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['_apriltag_v2_marker_detection'] -> '_apriltag_v2_marker_detection'": 1,
            "tuple -> 'surface_marker'": 2,
            "str -> tuple": 1,
            "float -> str": 1,
            "list -> float": 1,
            "float -> list": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker] -> float": 1,
            "param_t -> str": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker] -> bool": 2,
            "surface_marker -> bool": 2,
            "int -> bool": 1,
            "float -> bool": 3,
            "bool -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker]": 1,
            "str -> surface_marker_type": 1,
            "str -> surface_marker_uid": 3,
            "float -> surface_marker_tagid": 2,
            "'surface_base_marker' -> \"surface_base_marker\"": 1,
            "'_square_marker_detection' -> \"_square_marker_detection\"": 1,
            "'_apriltag_v2_marker_detection' -> \"_apriltag_v2_marker_detection\"": 1,
            "'surface_marker' -> \"surface_marker\"": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker] -> int": 3,
            "bool -> int": 2,
            "\"_apriltag_v2_marker_detection\" -> \"_apriltag_v3_marker_detection\"": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [surface_marker_aggregate,dict]] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='collection',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dict]": 3,
            "bool -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [np]": 1,
            "np.ndarray -> bool": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "\"pupil_recording.filefilter\" -> filtertype": 5,
            "\"pupil_recording.filefilter\" -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='sequence',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [path]": 1,
            "str -> recordinginfofilecsv": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str] -> str": 1,
            "bool -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "recordinginfofilecsv -> recordinginfofile": 1,
            "recordingversion -> version": 10,
            "recordingversion -> str": 1,
            "bool -> recordinginfofile": 1,
            "sequence [video] -> bool": 1,
            "version -> str": 1,
            "pupildetector -> detectorbase": 4,
            "detectorbase -> dict": 1,
            "dict -> detectorbase": 1,
            "bool -> float": 2,
            "sequence [video] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [video]": 1,
            "sequence [video] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [av]": 1,
            "iterator [video] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [video]": 1,
            "bool -> gazerbase": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pupildetectorplugin,t [pupildetectorplugin]] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pupildetectorplugin,pupildetectorplugin,t [pupildetectorplugin]]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,\"guimonitor\"] -> t_ordereddict [str,\"guimonitor\"]": 1,
            "str -> bool": 4,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,\"calibrationchoreographyplugin\"] -> str": 1,
            "gazerbase -> bool": 1,
            "bool -> str": 2,
            "str -> list": 1,
            "np.ndarray -> model": 1,
            "dict -> t.any": 1,
            "\"choreographynotification\" -> t.any": 1,
            "calibration -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [calibration]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [calibration] -> calibration": 1,
            "model -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t]": 1,
            "str -> int": 1,
            "dict -> list": 1,
            "version -> _version": 5,
            "_version -> semanticversion": 7,
            "semanticversion -> parsedversion": 7,
            "_cacherelevantdetectorparams -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [_cacherelevantdetectorparams]": 1,
            "int -> np.ndarray": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pupildetectorplugin,pupildetectorplugin,t [pupildetectorplugin]] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t [pupildetectorplugin],t [pupildetectorplugin],t [pupildetectorplugin]]": 1,
            "int -> dict": 2,
            "surface_marker_uid_to_aggregate_mapping -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='set',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [surface_marker_uid]": 1,
            "\"color[int]\" -> \"color\"": 2,
            "\"color[componenttype]\" -> \"color\"": 1,
            "\"color[float]\" -> \"color\"": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 512,
        "functionReturnsType_added": 711,
        "variableType_added": 72,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 211,
        "functionReturnsType_removed": 314,
        "variableType_removed": 24,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 24,
        "functionReturnsType_changed": 143,
        "variableType_changed": 0,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            3.508771929824561,
            100.0,
            5.442176870748299,
            10.0,
            6.25,
            22.22222222222222,
            54.54545454545454,
            6.666666666666667,
            4.545454545454546,
            5.4095826893353935,
            3.985507246376811,
            13.333333333333334,
            6.382978723404255,
            2.3255813953488373,
            0.7518796992481203,
            0.8620689655172413,
            2.3529411764705883,
            3.4482758620689653,
            2.272727272727273,
            4.761904761904762,
            26.82926829268293,
            27.450980392156865,
            15.384615384615385,
            2.631578947368421,
            2.1739130434782608,
            2.1739130434782608,
            4.968944099378882,
            12.865497076023392,
            30.76923076923077,
            21.782178217821784,
            37.5,
            7.6923076923076925,
            21.052631578947366,
            2.631578947368421,
            8.641975308641975,
            6.666666666666667,
            5.524861878453039,
            12.5,
            1.5625,
            9.090909090909092,
            10.526315789473683,
            5.88235294117647,
            11.11111111111111,
            9.25925925925926,
            7.936507936507936,
            9.89010989010989,
            8.47457627118644,
            8.498583569405099,
            2.880658436213992,
            21.875,
            25.0,
            6.493506493506493,
            5.128205128205128,
            12.5,
            0.9569377990430622,
            9.75609756097561,
            16.666666666666664,
            8.0,
            9.722222222222223,
            5.405405405405405,
            1.3157894736842104,
            19.78021978021978,
            3.0927835051546393,
            0.8064516129032258,
            16.666666666666664,
            16.666666666666664,
            11.11111111111111,
            12.5,
            16.666666666666664,
            3.4482758620689653,
            18.75,
            0.9174311926605505,
            11.11111111111111,
            4.651162790697675,
            5.0,
            4.545454545454546,
            7.142857142857142,
            2.857142857142857,
            3.4482758620689653,
            2.5,
            1.7241379310344827,
            3.7037037037037033,
            6.976744186046512,
            2.5316455696202533,
            18.181818181818183,
            5.376344086021505,
            2.127659574468085,
            33.33333333333333,
            12.068965517241379,
            5.555555555555555,
            11.842105263157894,
            6.382978723404255,
            13.333333333333334,
            6.666666666666667,
            25.0,
            8.60215053763441,
            9.090909090909092,
            3.8461538461538463,
            5.084745762711865,
            1.2987012987012987,
            10.738255033557047,
            20.32520325203252,
            18.91891891891892,
            3.1446540880503147,
            2.272727272727273,
            2.272727272727273,
            66.66666666666666,
            3.0303030303030303,
            22.22222222222222,
            6.666666666666667,
            3.0303030303030303,
            1.0033444816053512,
            0.9425878320479864,
            4.615384615384616,
            6.2857142857142865,
            3.896103896103896,
            2.5974025974025974,
            11.785714285714285,
            0.3144654088050315,
            4.651162790697675,
            8.411214953271028,
            11.11111111111111,
            11.11111111111111,
            12.5,
            14.285714285714285,
            11.11111111111111,
            12.5,
            4.166666666666666,
            11.11111111111111,
            6.976744186046512,
            7.6923076923076925,
            2.8169014084507045,
            3.1407035175879394,
            3.1407035175879394,
            3.6809815950920246,
            3.8523274478330656,
            3.8523274478330656,
            0.628930817610063,
            0.5780346820809248,
            2.061005770816158,
            2.061005770816158,
            3.9215686274509802,
            1.8292682926829267,
            2.547770700636943,
            2.380952380952381,
            30.76923076923077,
            5.555555555555555,
            22.22222222222222,
            4.545454545454546,
            50.0,
            25.0,
            4.3478260869565215,
            33.33333333333333,
            3.1914893617021276,
            0.9009009009009009,
            0.8849557522123894,
            1.0869565217391304,
            2.5510204081632653,
            0.38461538461538464,
            1.932367149758454,
            15.0,
            33.33333333333333,
            33.33333333333333,
            7.6923076923076925,
            2.803738317757009,
            1.744186046511628,
            1.744186046511628,
            0.8,
            0.8,
            2.5423728813559325,
            2.5423728813559325,
            1.4218009478672986,
            1.4218009478672986,
            2.4734982332155475,
            2.5735294117647056,
            0.6711409395973155,
            6.666666666666667,
            3.0303030303030303,
            8.333333333333332,
            5.88235294117647,
            25.0,
            3.499382461918485,
            0.36496350364963503,
            4.0,
            5.714285714285714,
            11.11111111111111,
            0.22727272727272727,
            9.090909090909092,
            7.6923076923076925,
            11.11111111111111,
            3.0303030303030303,
            2.3255813953488373,
            3.225806451612903,
            12.5,
            5.128205128205128,
            2.1367521367521367,
            13.333333333333334,
            5.128205128205128,
            4.166666666666666,
            8.333333333333332,
            4.761904761904762,
            0.16420361247947454,
            1.466275659824047,
            4.838709677419355,
            0.9685230024213075,
            5.263157894736842,
            1.4084507042253522,
            4.3478260869565215,
            0.53475935828877,
            2.8455284552845526,
            1.7142857142857144,
            2.247191011235955,
            20.0,
            2.6548672566371683,
            0.546448087431694,
            11.439114391143912,
            1.6666666666666667,
            100.0,
            9.876543209876543,
            5.88235294117647,
            16.666666666666664,
            6.666666666666667,
            11.76470588235294,
            30.76923076923077,
            5.714285714285714,
            2.564102564102564,
            8.695652173913043,
            1.7543859649122806,
            5.555555555555555,
            5.555555555555555,
            8.333333333333332,
            16.666666666666664,
            6.25,
            12.5,
            25.0,
            0.33305578684429643,
            0.33277870216306155,
            2.857142857142857,
            2.564102564102564,
            7.894736842105263,
            5.88235294117647,
            12.5,
            11.11111111111111,
            8.333333333333332,
            4.3478260869565215,
            2.127659574468085,
            3.731343283582089,
            1.0526315789473684,
            11.76470588235294,
            12.5,
            2.3529411764705883,
            16.666666666666664,
            3.0303030303030303,
            4.761904761904762,
            3.501945525291829,
            3.501945525291829,
            33.33333333333333,
            17.647058823529413,
            15.789473684210526,
            7.6923076923076925,
            7.6923076923076925,
            10.44776119402985,
            18.421052631578945,
            25.0,
            9.090909090909092,
            22.22222222222222,
            14.285714285714285,
            11.11111111111111,
            11.11111111111111,
            6.666666666666667,
            2.083333333333333,
            6.0606060606060606,
            9.090909090909092,
            4.545454545454546,
            14.285714285714285,
            7.6923076923076925,
            50.0,
            15.384615384615385,
            5.88235294117647,
            25.0,
            25.0,
            2.857142857142857,
            4.10958904109589,
            1.5625,
            1.5625,
            11.11111111111111,
            7.6923076923076925,
            9.30232558139535,
            3.3333333333333335,
            3.7037037037037033,
            80.0,
            11.11111111111111,
            66.66666666666666,
            6.666666666666667,
            11.267605633802818,
            0.2695417789757413,
            1.7167381974248928,
            0.2544529262086514,
            42.857142857142854,
            16.666666666666664,
            8.333333333333332,
            6.451612903225806,
            2.272727272727273,
            33.33333333333333,
            5.88235294117647,
            1.8181818181818181,
            13.48314606741573,
            25.0,
            20.0,
            3.571428571428571,
            0.9727626459143969,
            2.358490566037736,
            1.2903225806451613,
            0.8771929824561403,
            7.6923076923076925,
            7.142857142857142,
            1.0869565217391304,
            3.6231884057971016,
            12.5,
            12.5,
            14.285714285714285,
            8.333333333333332,
            9.090909090909092,
            10.0,
            9.090909090909092,
            9.090909090909092,
            9.090909090909092,
            9.090909090909092,
            7.142857142857142,
            37.5,
            7.07070707070707,
            16.666666666666664,
            5.263157894736842,
            20.0,
            25.0,
            10.0,
            33.33333333333333,
            16.666666666666664,
            28.57142857142857,
            14.285714285714285,
            0.9433962264150944,
            14.285714285714285,
            7.4074074074074066,
            33.33333333333333,
            33.33333333333333,
            4.545454545454546,
            22.22222222222222,
            9.090909090909092,
            1.2307692307692308,
            7.142857142857142,
            12.068965517241379,
            40.0,
            1.3333333333333335,
            1.9230769230769231
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2013",
                "7379",
                "928",
                "2011",
                "575",
                "78",
                "442",
                "11552",
                "57",
                "0",
                "0",
                "29502"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/pupil-labs/pupil": 2011
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 1092,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            84.32
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/pupil-labs/pupil": 1092
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2018": 4,
            "2019": 809,
            "2020": 422,
            "2021": 60
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2018": 1,
            "2019": 95,
            "2020": 108,
            "2021": 25
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2018": 401,
            "2019": 1224,
            "2020": 1144,
            "2021": 383
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                8089,
                0,
                4320,
                0,
                9525
            ],
            "2016": [
                0,
                5359,
                0,
                2819,
                0,
                7101
            ],
            "2017": [
                0,
                18058,
                0,
                9367,
                0,
                27189
            ],
            "2018": [
                0,
                22872,
                0,
                11614,
                4,
                32576
            ],
            "2019": [
                1956,
                37873,
                1645,
                19404,
                48,
                42491
            ],
            "2020": [
                2584,
                38144,
                2838,
                19337,
                207,
                42581
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "pupil-labs-pupil": 0,
                "pablo@prietz.org": 28,
                "wiwindson@outlook.com": 3,
                "romanroibu@gmail.com": 162,
                "pfa@pupil-labs.com": 29,
                "p.faion@web.de": 6,
                "neil87@mail.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "pupil-labs-pupil": 0,
                "willpatera@gmail.com": 362,
                "moritzkassner@gmail.com": 1765,
                "michael@N151U": 8,
                "mb@barz.de": 55,
                "hookdump@gmail.com": 1,
                "cpicanco@ufpa.br": 2,
                "andrew.kurauchi@gmail.com": 1,
                "smurakami.84@gmail.com": 1,
                "cpicanco@users.noreply.github.com": 42,
                "axia@mit.edu": 11,
                "pupil@pupils-Mac-2.local": 6,
                "sarah@eva.local": 9,
                "pat.fuerst@gmail.com": 600,
                "e.l.morgan@qmul.ac.uk": 1,
                "snoelleleu@gmail.com": 31,
                "pprietz@uos.de": 8,
                "frederic.neitzel@gmx.de": 5,
                "pablo@prietz.org": 2291,
                "t.fischer@imperial.ac.uk": 1,
                "vincent@systemli.org": 3,
                "nathakit.sae-tan@cuinda.com": 5,
                "kirov@pointcontrols.com": 55,
                "cpicanco42@gmail.com": 3,
                "mt@pupil-labs.com": 220,
                "c.schartmueller@gmail.com": 1,
                "kai.dierkes@web.de": 15,
                "lucretia77": 1,
                "majoge@users.noreply.github.com": 1,
                "j60626j@gmail.com": 72,
                "mspits@sas.upenn.edu": 1,
                "admin@pointcontrols.com": 1,
                "hi@pburke.de": 1,
                "kd@pupil-labs.com": 9,
                "emredog@gmail.com": 52,
                "ckb@pupil-labs.com": 55,
                "helei0147@163.com": 1,
                "stijn.balk@gmail.com": 1,
                "info@chris-baumann.com": 1,
                "wiwindson@outlook.com": 55,
                "31063965+ChingT@users.noreply.github.com": 7,
                "romanroibu@gmail.com": 889,
                "chadwick.boulay@gmail.com": 2,
                "pfa@pupil-labs.com": 567,
                "c.gundler@mail.de": 2,
                "langefx@gmail.com": 1,
                "p.faion@web.de": 102,
                "basile.pinsard@gmail.com": 8,
                "simon.maurer@humdek.unibe.ch": 5,
                "moiri@users.noreply.github.com": 5,
                "clenart4@kent.edu": 1,
                "rprendergast1121@gmail.com": 1,
                "david.reich@uni-potsdam.de": 4,
                "diwas@bhattarai.de": 7,
                "66853113+pre-commit-ci[bot]@users.noreply.github.com": 11,
                "neil87@mail.com": 13,
                "bjornborg.nguyen@chalmers.se": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]