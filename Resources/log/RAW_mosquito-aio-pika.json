[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 794,
        "commit_year_dict": {
            "2016": 16,
            "2017": 270,
            "2018": 211,
            "2019": 154,
            "2020": 117,
            "2021": 26
        },
        "loc_year_edit": {
            "2016": 1980,
            "2017": 13764,
            "2018": 16895,
            "2019": 13632,
            "2020": 8479,
            "2021": 64
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 80,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 815,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2016": 83,
            "2017": 154,
            "2018": 45,
            "2019": 111,
            "2020": 163,
            "2021": 4
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2017": 10,
            "2018": 22,
            "2019": 77,
            "2020": 29,
            "2021": 1
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2016": 1,
            "2017": 13,
            "2018": 41,
            "2019": 36,
            "2020": 25
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 560,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "asyncio.abstracteventloop": 13,
            "asyncio.handle": 4,
            "'futurestore'": 1,
            "asyncio.future": 27,
            "exception": 7,
            "futurestore": 6,
            "str": 43,
            "int": 25,
            "bool": 45,
            "channel": 14,
            "none": 6,
            "connection": 4,
            "exchangetype": 3,
            "dict": 24,
            "asyncio.baseeventloop": 1,
            "message": 1,
            "bytes": 22,
            "deliverymode": 2,
            "exchange": 6,
            "functiontype": 2,
            "incomingmessage": 17,
            "callable [...,none]": 4,
            "optional [int]": 1,
            "basicproperties": 1,
            "consumertag": 3,
            "asyncioconnection": 3,
            "optional [bool]": 5,
            "generator [any,none,consumertag]": 1,
            "testcase": 6,
            "queue": 4,
            "'queueiterator'": 3,
            "asyncio.task": 5,
            "generator [any,none,connection]": 2,
            "any": 15,
            "callable": 66,
            "generator [any,none,worker]": 1,
            "generator [any,none,channel]": 1,
            "generator [any,none,queue]": 1,
            "generator [any,none,exchange]": 1,
            "returnedmessage": 2,
            "\"rpc\"": 1,
            "callable [p,r]": 1,
            "p": 1,
            "r": 1,
            "union [int,float]": 1,
            "exchangetype_": 3,
            "aio_pika.incomingmessage": 1,
            "\"futurestore\"": 2,
            "\"method\"": 2,
            "method": 2,
            "worker": 1,
            "constructortype": 1,
            "itemtype": 1,
            "pool": 1,
            "'poolitemcontextmanager'": 2,
            "t": 4,
            "aio_pika.channel": 39,
            "aiormq.channel": 3,
            "attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='exchange',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).declareok": 1,
            "optional [aiormq]": 2,
            "time.struct_time": 2,
            "callable [...,any]": 1,
            "iterable": 1,
            "dict [str,any]": 1,
            "optional [float]": 1,
            "float": 3,
            "optional [time]": 1,
            "optional [datetime]": 1,
            "dict [str,bytes]": 1,
            "deliveredmessage": 2,
            "attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='basic',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).cancelok": 1,
            "attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tx',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).selectok": 1,
            "asyncio.streamreader": 4,
            "asyncio.streamwriter": 4,
            "timeouterror": 1,
            "type [connection]": 1,
            "timeouttype": 7,
            "attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='exchange',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).deleteok": 1,
            "object": 1,
            "iterable [callable]": 1,
            "type [connectiontype]": 1,
            "asynccontextmanager": 1,
            "robustconnection": 1,
            "robustchannel": 1,
            "callbackcollection": 1,
            "aiormq.connection": 1,
            "\"pool\"": 1,
            "dict [int,asyncio]": 1,
            "'rpc'": 1,
            "optional [asyncio]": 1,
            "aio_pika.connection": 29,
            "url": 3,
            "aio_pika.queue": 1,
            "aio_pika.exchange": 1,
            "proxy": 4,
            "aio_pika.robustchannel": 1,
            "aio_pika.robustconnection": 4,
            "awaitable [aio_pika]": 1,
            "type [tcpproxy]": 1,
            "optional [baseexception]": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 139,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "asyncio.future": 20,
            "asyncio.abstracteventloop": 12,
            "asyncio.handle": 3,
            "any": 2,
            "bytes": 3,
            "exchangetype": 1,
            "channel": 5,
            "'queueiterator'": 2,
            "incomingmessage": 3,
            "testcase": 12,
            "dict": 2,
            "union [int,float]": 1,
            "'futurestore'": 1,
            "exception": 3,
            "futurestore": 7,
            "\"futurestore\"": 1,
            "str": 9,
            "int": 3,
            "bool": 3,
            "pikachannel": 5,
            "asyncioconnection": 6,
            "'connection'": 1,
            "asyncio.task": 2,
            "queue": 3,
            "none": 2,
            "callable [...,none]": 2,
            "dict [int,asyncio]": 1,
            "optional [aiormq]": 1,
            "connection": 2,
            "exchange": 2,
            "aio_pika.connection": 7,
            "asyncio.streamreader": 4,
            "asyncio.streamwriter": 4,
            "robustconnection": 1,
            "robustchannel": 1,
            "callable": 2
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 116,
        "typeChanged_dict_var": {},
        "typeChanged_dict_arg": {
            "asyncio.baseeventloop -> asyncio.abstracteventloop": 1,
            "int -> datetype": 2,
            "bool -> optional [bool]": 3,
            "callable -> callable [p,r]": 1,
            "exchange -> exchangetype": 4,
            "exchangetype -> exchangetype_": 4,
            "callable [p,r] -> callbacktype": 4,
            "itemtype -> t": 1,
            "channel -> aiormq.channel": 4,
            "dict -> dict [str,bytes]": 1,
            "functiontype -> callable [...,any]": 1,
            "int -> timeouttype": 7,
            "timeouterror -> timeouttype": 1,
            "type [connection] -> type [connectiontype]": 1,
            "exchangetype -> union [exchangetype,str]": 2,
            "callable [...,none] -> closecallbacktype": 1,
            "dict -> optional [dict [hashable,any]]": 1,
            "int -> optional [int]": 1,
            "exchangetype_ -> exchangeparamtype": 7,
            "'rpc' -> \"rpc\"": 1,
            "proxy -> tcpproxy": 4,
            "any -> bytes": 1
        },
        "typeChanged_dict_ret": {
            "connection -> generator [connection]": 1,
            "generator [connection] -> generator [any,none,connection]": 1,
            "channel -> generator [any,none,channel]": 1,
            "consumertag -> generator [any,none,consumertag]": 1,
            "incomingmessage -> generator [any,none,optional [incomingmessage]]": 1,
            "none -> asyncio.task": 1,
            "asyncio.task -> asyncio.future": 1,
            "generator [any,none,exchange] -> exchange": 5,
            "generator [any,none,queue] -> queue": 5,
            "generator [any,none,channel] -> channel": 3,
            "generator [any,none,connection] -> connection": 5,
            "generator [any,none,worker] -> worker": 2,
            "generator [any,none,consumertag] -> consumertag": 4,
            "generator [any,none,optional [incomingmessage]] -> optional [incomingmessage]": 2,
            "worker -> queue": 1,
            "t -> bool": 1,
            "asyncio.task -> 'connection'": 1,
            "asyncio.future -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='exchange',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).bindok": 1,
            "asyncio.future -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='exchange',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).unbindok": 1,
            "asyncio.future -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='exchange',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).deleteok": 1,
            "optional [int] -> optional [str]": 1,
            "basicproperties -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='basic',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).properties": 1,
            "dict -> asyncio.task": 1,
            "asyncio.future -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='queue',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).declareok": 3,
            "asyncio.future -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='queue',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).unbindok": 1,
            "asyncio.future -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='queue',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).purgeok": 1,
            "dict -> float": 1,
            "attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='queue',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).declareok -> attribute(\n    value=attribute(\n        value=name(\n            value='aiormq',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='spec',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='queue',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).bindok": 1,
            "float -> callbackcollection": 1,
            "dict -> callbackcollection": 1,
            "connection -> connectiontype": 2,
            "callbackcollection -> bool": 1,
            "'poolitemcontextmanager' -> bool": 1,
            "int -> aio_pika.queue": 1,
            "connection -> aio_pika.queue": 1,
            "'connection' -> \"connection\"": 1,
            "'poolitemcontextmanager' -> \"poolitemcontextmanager\"": 1,
            "'queueiterator' -> \"queueiterator\"": 2,
            "\"poolitemcontextmanager\" -> \"poolitemcontextmanager[t]\"": 1,
            "bytes -> any": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 432,
        "functionReturnsType_added": 125,
        "variableType_added": 3,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 110,
        "functionReturnsType_removed": 27,
        "variableType_removed": 2,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 53,
        "functionReturnsType_changed": 63,
        "variableType_changed": 0,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            2.671118530884808,
            33.33333333333333,
            0.6756756756756757,
            0.7782101167315175,
            0.78125,
            1.098901098901099,
            1.3377926421404682,
            2.8368794326241136,
            1.1764705882352942,
            3.6363636363636362,
            40.0,
            50.0,
            5.714285714285714,
            14.285714285714285,
            3.508771929824561,
            9.090909090909092,
            1.5625,
            7.142857142857142,
            33.33333333333333,
            33.33333333333333,
            11.11111111111111,
            1.3888888888888888,
            1.3888888888888888,
            3.9711191335740073,
            0.16366612111292964,
            33.33333333333333,
            1.4492753623188406,
            1.9900497512437811,
            4.545454545454546,
            7.142857142857142,
            3.1620553359683794,
            2.7777777777777777,
            0.5025125628140703,
            1.4150943396226416,
            0.4132231404958678,
            10.344827586206897,
            4.2105263157894735,
            2.6217228464419478,
            3.8461538461538463,
            4.651162790697675,
            0.5263157894736842,
            12.0,
            7.142857142857142,
            10.0,
            28.57142857142857,
            40.0,
            13.043478260869565,
            5.0,
            8.51063829787234,
            0.7042253521126761,
            1.5384615384615385,
            8.333333333333332,
            0.6535947712418301,
            0.6993006993006993,
            2.3255813953488373,
            1.7543859649122806,
            0.31496062992125984,
            0.72,
            0.5132254243979472,
            0.3147128245476003,
            0.7194244604316548,
            0.5128205128205128,
            2.4691358024691357,
            10.0,
            9.090909090909092,
            7.142857142857142,
            14.285714285714285,
            4.545454545454546,
            2.0202020202020203,
            4.444444444444445,
            2.2222222222222223,
            1.9230769230769231,
            1.5625,
            2.8135048231511255,
            0.7184846505551926,
            0.17228177641653905,
            3.2679738562091507,
            20.0,
            16.666666666666664,
            15.384615384615385,
            100.0,
            11.926605504587156,
            3.571428571428571,
            10.666666666666668,
            2.380952380952381,
            8.47457627118644,
            9.67741935483871,
            23.809523809523807,
            10.256410256410255,
            100.0,
            20.0,
            5.263157894736842,
            10.0,
            33.33333333333333,
            8.333333333333332,
            3.1578947368421053,
            1.5151515151515151,
            0.847457627118644,
            5.263157894736842,
            9.090909090909092,
            8.333333333333332,
            25.0,
            15.0,
            5.405405405405405,
            2.5,
            5.88235294117647,
            6.666666666666667,
            9.090909090909092,
            3.571428571428571,
            37.5,
            6.25,
            25.0,
            16.666666666666664,
            20.0,
            50.0,
            7.71513353115727,
            0.4750593824228029,
            0.4596191726854892,
            6.270627062706271,
            2.1592442645074224,
            0.12106537530266344,
            4.797979797979798,
            0.4484304932735426,
            0.2583979328165375,
            11.11111111111111,
            10.16949152542373,
            3.30188679245283,
            1.9736842105263157,
            1.0869565217391304,
            10.0,
            100.0,
            100.0,
            100.0,
            11.11111111111111,
            8.333333333333332
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2016",
                "794",
                "546",
                "815",
                "109",
                "75",
                "270",
                "1051",
                "81",
                "0",
                "0",
                "1391"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/mosquito/aio-pika": 815
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 1217,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            217.32
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/mosquito/aio-pika": 1217
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2016": 83,
            "2017": 154,
            "2018": 45,
            "2019": 111,
            "2020": 163,
            "2021": 4
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2016": 1,
            "2017": 26,
            "2018": 18,
            "2019": 21,
            "2020": 11,
            "2021": 3
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2016": 14,
            "2017": 218,
            "2018": 187,
            "2019": 130,
            "2020": 106,
            "2021": 19
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                366,
                762,
                69,
                454,
                0,
                1143
            ],
            "2018": [
                266,
                1725,
                48,
                871,
                0,
                1330
            ],
            "2019": [
                524,
                1180,
                202,
                666,
                0,
                1759
            ],
            "2020": [
                1991,
                3566,
                546,
                1811,
                0,
                4191
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "mosquito-aio-pika": 0,
                "me@mosquito.su": 45,
                "cgrunwald@gmail.com": 1,
                "andrey.khoronko@gmail.com": 1,
                "kajetan.janiak@daftcode.pl": 1,
                "decaz89@gmail.com": 13,
                "pdettlaff@gmail.com": 1,
                "orlov@edadeal.ru": 5,
                "grisha100@gmail.com": 1,
                "daniel.stewart.stone@gmail.com": 1,
                "driverx_strogino@mail.ru": 1,
                "i@leenr.ru": 1,
                "benoit.barthelet@gmail.com": 1,
                "heckad@yandex.ru": 3,
                "ilyushenkov@corp.mail.ru": 1,
                "mario.bielert@googlemail.com": 1,
                "marcelotryle@gmail.com": 1,
                "chudov42@gmail.com": 2
            }
        ],
        "list_dev_dict_total": [
            {
                "mosquito-aio-pika": 0,
                "me@mosquito.su": 555,
                "hellysmile@gmail.com": 11,
                "adelkhafizova@gmail.com": 1,
                "ilya.smirnov@acronis.com": 1,
                "ollamh@gmail.com": 2,
                "cgrunwald@gmail.com": 1,
                "andrey.khoronko@gmail.com": 3,
                "akhoronko@users.noreply.github.com": 2,
                "decaz89@gmail.com": 46,
                "kajetan.janiak@daftcode.pl": 1,
                "kajetan.janiak@gmail.com": 1,
                "magafurov@tochka.com": 11,
                "gilbsgilbert@gmail.com": 1,
                "patrik.mrx@gmail.com": 4,
                "jakub.czaplicki@tooploox.com": 1,
                "Alexander.Vasin@acronis.com": 1,
                "pdettlaff@gmail.com": 1,
                "rdmurray@bitdance.com": 1,
                "orlov@edadeal.ru": 35,
                "peter.weidauer@novastonemedia.com": 1,
                "frederic.mangano-tarumi@1000mercis.com": 1,
                "dhontecillas@gmail.com": 2,
                "michal.jagiello@nask.pl": 1,
                "grisha100@gmail.com": 7,
                "andrey.skabelin@gmail.com": 1,
                "andreas.presthammer@confirmit.com": 1,
                "captfrozenberg@gmail.com": 1,
                "renat-nasyrov@yandex.ru": 2,
                "finetuned89@users.noreply.github.com": 1,
                "daniel.stewart.stone@gmail.com": 2,
                "roman@tolkachyov.name": 1,
                "krzysztof.blazewicz@indoorway.com": 3,
                "shanecarey17@gmail.com": 1,
                "tf@SYNC.local": 1,
                "petr.sebek@quantlane.com": 1,
                "driverx_strogino@mail.ru": 2,
                "stan.janssen@elaad.nl": 1,
                "38038310+lpetraglio@users.noreply.github.com": 1,
                "jordan.a.enterkin@gmail.com": 1,
                "chibby0ne@gmail.com": 3,
                "dx@dxzone.com.ar": 1,
                "tzoiker@gmail.com": 2,
                "kuba.zarybnicky@post.cz": 1,
                "pappachino@users.noreply.github.com": 1,
                "i@leenr.ru": 1,
                "lanbinaleksey@gmail.com": 1,
                "blazewicz.krzysztof@gmail.com": 1,
                "sajget@ya.ru": 1,
                "tilsche@users.noreply.github.com": 1,
                "george@georgemarshall.name": 1,
                "v-solomatin@yandex-team.ru": 1,
                "zhe.dan28@gmail.com": 1,
                "thomasho@mustardsystems.com": 1,
                "benoit.barthelet@gmail.com": 1,
                "boxingxing@limikeji.com": 1,
                "xiaoliuhust@gmail.com": 1,
                "heckad@yandex.ru": 23,
                "hubert+github@brylkowski.com": 1,
                "brian@medigate.io": 2,
                "hekad@yandex.ru": 2,
                "r@remirampin.com": 1,
                "rinatshigapov@gmail.com": 4,
                "aviramyhassan@gmail.com": 1,
                "nick.humrich@gmail.com": 1,
                "taybin@users.noreply.github.com": 3,
                "45011689+heckad@users.noreply.github.com": 2,
                "can@atesman.at": 1,
                "ilyushenkov@corp.mail.ru": 1,
                "me@cprieto.com": 5,
                "jeff@mccarrell.org": 3,
                "mario.bielert@googlemail.com": 2,
                "53142530+denisovkv@users.noreply.github.com": 1,
                "marcelotryle@gmail.com": 2,
                "joperez@hotmail.fr": 1,
                "alvinera@yandex.ru": 1,
                "gallegoj@uw.edu": 1,
                "thomas.ilsche@tu-dresden.de": 1,
                "jlasne@student.42.fr": 1,
                "36075751+SolovyovAlexander@users.noreply.github.com": 1,
                "chudov42@gmail.com": 2
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]