[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 201,
        "commit_year_dict": {
            "2015": 160,
            "2016": 16,
            "2018": 9,
            "2019": 4,
            "2020": 12
        },
        "loc_year_edit": {
            "2015": 8790,
            "2016": 1165,
            "2018": 894,
            "2019": 3,
            "2020": 5722
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 55,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 1440,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2015": 315,
            "2016": 144,
            "2018": 30,
            "2020": 149
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2015": 114,
            "2016": 6,
            "2018": 48,
            "2020": 39
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2015": 102,
            "2016": 146,
            "2018": 153,
            "2020": 194
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 638,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "\"imaybe\"": 1,
            "maybe": 20,
            "bool": 37,
            "\"imonoid\"": 3,
            "'maybe'": 1,
            "any": 29,
            "\"maybe\"": 10,
            "\"monad\"": 11,
            "\"applicative\"": 11,
            "'just'": 5,
            "\"either\"": 8,
            "either": 16,
            "str": 47,
            "\"list\"": 11,
            "\"functor\"": 3,
            "\"monoid\"": 7,
            "ioaction": 1,
            "\"ioaction\"": 9,
            "io": 5,
            "\"io\"": 1,
            "tuple": 4,
            "\"writer\"": 4,
            "\"any\"": 8,
            "monoid": 2,
            "\"callable[[any], any]\"": 5,
            "\"callable[[any], writer]\"": 1,
            "\"callabe[[any], tuple[any, monoid]]\"": 1,
            "\"callable[[str], io]\"": 1,
            "\"callable\"": 6,
            "\"callable[[any], monad]\"": 2,
            "\"tuple[callable,...\"": 1,
            "'functor'": 2,
            "\"callable[[any], identity]\"": 1,
            "\"identity\"": 4,
            "\"callable[[any], reader]\"": 2,
            "\"reader\"": 8,
            "callable [...,\"either\"]": 1,
            "callable [...,any]": 19,
            "callable [...,either]": 2,
            "callable": 15,
            "callable [...,\"monad\"]": 1,
            "callable [...,\"put\"]": 1,
            "callable [...,\"get\"]": 1,
            "callable [...,\"readfile\"]": 1,
            "callable [...,\"list\"]": 1,
            "callable [...,\"maybe\"]": 1,
            "callable [...,maybe]": 2,
            "callable [...,monad]": 6,
            "'monad'": 2,
            "t": 4,
            "union [str,list [str]]": 2,
            "callable [...,tuple [any,any]]": 1,
            "callable [...,'state']": 1,
            "'state'": 5,
            "state": 2,
            "'list'": 8,
            "iterator": 2,
            "callable [...,'list']": 1,
            "monad": 1,
            "'cont'": 4,
            "reader": 2,
            "'any'": 1,
            "'callable[[callable], callable]'": 2,
            "'callable'": 5,
            "\"tuple[callable, ...]\"": 1,
            "callable [...,'observable']": 1,
            "'observable'": 5,
            "callable [...,c]": 7,
            "'applicative[b]'": 1,
            "\"applicative[a]\"": 1,
            "a": 11,
            "'monoid[a]'": 3,
            "none": 47,
            "callable [...,'io[b]']": 1,
            "'io[b]'": 2,
            "callable [...,b]": 9,
            "'io[a]'": 2,
            "int": 29,
            "'get[b]'": 1,
            "callable [...,io [str]]": 1,
            "\"just\"": 1,
            "io [a]": 4,
            "tuple [int,str]": 2,
            "'list[a]'": 1,
            "iterable [a]": 1,
            "list [a]": 1,
            "iterator [a]": 1,
            "'just[b]'": 1,
            "s": 4,
            "'state[a, s]'": 1,
            "tuple [a,s]": 2,
            "monoid [c]": 1,
            "'monadwriter[a]'": 1,
            "intlist": 1,
            "'io'": 2,
            "'reader'": 1,
            "w": 1,
            "'writer'": 1,
            "tuple [any,log]": 1,
            "'monadwriter'": 2,
            "callable [...,tresult]": 15,
            "\"either[callable[[tsource], tresult], terror]\"": 1,
            "tsource": 18,
            "\"right[callable[[tsource], tresult], terror]\"": 1,
            "terror": 1,
            "either [tresult,terror]": 2,
            "'identity[callable[[tsource], tresult]]'": 1,
            "optional [callable [...,optional [tresult]]]": 1,
            "\"maybe[callable[[tsource], tresult]]\"": 1,
            "callable [...,\"maybe[tresult]\"]": 1,
            "\"just[callable[[tsource], tresult]]\"": 1,
            "\"nothing[callable[[tsource], tresult]]\"": 1,
            "maybe [tsource]": 2,
            "maybe [tresult]": 1,
            "callable [...,bool]": 1,
            "callable [...,none]": 1,
            "\"reader[tenv, callable[[tsource], tresult]]\"": 1,
            "\"reader[tenv, tresult]\"": 1,
            "tenv": 3,
            "callable [...,tenv]": 1,
            "'applicative[tsource, tresult]'": 1,
            "'functor[tresult]'": 1,
            "callable [...,'monad[tresult]']": 1,
            "'monad[tresult]'": 1,
            "'monad[tsource]'": 1,
            "'monoid[tsource]'": 1,
            "callable [...,d]": 5,
            "callable [...,e]": 4,
            "callable [...,f]": 3,
            "callable [...,g]": 2,
            "tuple [tsource,tlog]": 1,
            "state [int,int]": 3,
            "callable [...,state [int,int]]": 1,
            "callable [...,io [tresult]]": 1,
            "'io[tresult]'": 2,
            "\"io[tresult]\"": 1,
            "callable [...,io [tsource]]": 1,
            "iterable": 1,
            "callable [...,'list[tresult]']": 1,
            "'list[tsource]'": 6,
            "callable [...,union [tsource,list [tsource]]]": 1,
            "'list[tresult]'": 1,
            "list [tsource]": 3,
            "list [tresult]": 3,
            "callable [...,list [tresult]]": 1,
            "optional [str]": 1,
            "put": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 207,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "'maybe'": 1,
            "any": 15,
            "maybe": 17,
            "str": 16,
            "\"applicative\"": 6,
            "'just'": 6,
            "\"either\"": 4,
            "bool": 10,
            "either": 7,
            "\"functor\"": 2,
            "\"list\"": 5,
            "\"maybe\"": 5,
            "\"monad\"": 6,
            "\"monoid\"": 6,
            "\"ioaction\"": 2,
            "\"callable\"": 1,
            "\"callable[[any], any]\"": 1,
            "'functor'": 2,
            "\"callable[[any], monad]\"": 1,
            "callable": 9,
            "callable [...,'monad']": 1,
            "callable [...,monad]": 4,
            "'monad'": 2,
            "monoid": 1,
            "callable [...,any]": 5,
            "callable [...,'list']": 1,
            "'any'": 1,
            "'callable[[callable], callable]'": 2,
            "'callable'": 5,
            "\"callable[[any], reader]\"": 2,
            "\"tuple[callable, ...]\"": 1,
            "a": 4,
            "callable [...,b]": 4,
            "'callable[[a], b]'": 1,
            "\"applicative[b]\"": 1,
            "callable [...,c]": 1,
            "'applicative[b]'": 1,
            "'applicative[c]'": 1,
            "\"applicative[a]\"": 1,
            "'functor[b]'": 2,
            "callable [...,'monad[b]']": 2,
            "'monad[b]'": 2,
            "'monad[a]'": 1,
            "'monoid[a]'": 7,
            "'identity[b]'": 1,
            "'list[a]'": 1,
            "'maybe[a]'": 1,
            "maybe [a]": 2,
            "monad": 2,
            "\"writer\"": 1,
            "'writer[a]'": 1,
            "t": 2,
            "union [str,list [str]]": 2,
            "'callable[[any], any]'": 1,
            "'applicative'": 1,
            "'either'": 1,
            "'io'": 1,
            "callable [...,maybe]": 1,
            "'reader'": 1,
            "'writer'": 2,
            "tuple [any,log]": 1,
            "tsource": 1,
            "optional [callable [...,optional [tresult]]]": 1,
            "\"io[optional[callable[[optional[tsource]], optional[tresult]]]]\"": 1,
            "\"io[optional[tsource]]\"": 1,
            "\"io[optional[tresult]]\"": 2,
            "optional [tsource]": 1,
            "io": 1,
            "optional [callable [...,any]]": 1,
            "iterable": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 595,
        "typeChanged_dict_var": {},
        "typeChanged_dict_arg": {
            "imaybe -> maybe": 1,
            "\"just\" -> 'just'": 1,
            "ioaction -> io": 1,
            "\"callable\" -> callable": 3,
            "\"callable[[any], any]\" -> callable [...,any]": 4,
            "\"callable[[any], monad]\" -> callable [...,\"monad\"]": 1,
            "\"tuple[callable,...\" -> \"tuple[callable, ...]\"": 1,
            "\"any\" -> any": 2,
            "\"callable[[any], writer]\" -> callable [...,\"writer\"]": 1,
            "\"callabe[[any], tuple[any, monoid]]\" -> callable [...,tuple [any,monoid]]": 1,
            "\"callable[[any], identity]\" -> callable [...,\"identity\"]": 1,
            "callable [...,\"monad\"] -> callable [...,'monad']": 2,
            "callable [...,any] -> callable [...,'monad']": 1,
            "\"list\" -> 'list'": 2,
            "callable [...,\"list\"] -> callable [...,'list']": 1,
            "callable -> callable [...,'cont']": 2,
            "callable -> callable [...,any]": 3,
            "callable [...,'cont'] -> callable [...,any]": 1,
            "\"applicative\" -> 'callable[[a], b]'": 2,
            "callable -> callable [...,b]": 1,
            "callable [...,any] -> callable [...,b]": 13,
            "callable [...,'monad'] -> callable [...,'monad[b]']": 2,
            "\"monoid\" -> 'monoid[a]'": 1,
            "io -> io [a]": 1,
            "callable [...,\"put\"] -> 'callable[[a], put[b]]'": 1,
            "\"callable[[str], io]\" -> callable [...,io [a]]": 1,
            "callable [...,\"get\"] -> 'callable[[a], get[b]]'": 1,
            "\"either\" -> 'either[e, b]'": 2,
            "callable [...,\"either\"] -> callable [...,'either[e, b]']": 1,
            "either -> either [e,b]": 2,
            "callable [...,either] -> callable [...,either [e,b]]": 2,
            "any -> e": 1,
            "\"any\" -> a": 2,
            "callable [...,\"identity\"] -> callable [...,'identity[b]']": 1,
            "\"identity\" -> 'identity[b]'": 2,
            "a -> callable [...,'io[b]']": 1,
            "callable [...,'io[b]'] -> callable [...,b]": 1,
            "callable [...,any] -> callable [...,a]": 1,
            "any -> a": 4,
            "'list' -> 'list[a]'": 3,
            "callable [...,'list'] -> callable [...,'list[b]']": 1,
            "callable [...,\"maybe\"] -> callable [...,'maybe[b]']": 1,
            "\"maybe\" -> 'maybe'": 1,
            "\"maybe\" -> 'maybe[a]'": 2,
            "t -> a": 1,
            "maybe -> maybe [a]": 5,
            "callable [...,maybe] -> callable [...,maybe [b]]": 2,
            "callable [...,tuple [any,any]] -> callable [...,tuple [a,s]]": 1,
            "callable [...,'state'] -> callable [...,'state[b, s]']": 1,
            "any -> s": 1,
            "monoid -> monoid [c]": 1,
            "callable [...,\"writer\"] -> callable [...,'writer[b]']": 1,
            "callable [...,tuple [any,monoid]] -> callable [...,tuple [b,monoid [c]]]": 1,
            "'callable[[a], b]' -> 'callable[[any], any]'": 1,
            "'either[e, b]' -> 'either'": 2,
            "callable [...,'either[e, b]'] -> callable [...,'either']": 1,
            "either [e,b] -> either": 2,
            "callable [...,either [e,b]] -> callable [...,either]": 2,
            "a -> any": 13,
            "callable [...,b] -> callable [...,any]": 9,
            "callable [...,'identity[b]'] -> callable [...,'identity']": 1,
            "'identity[b]' -> 'identity'": 1,
            "callable [...,'io[b]'] -> callable [...,'io']": 1,
            "'io[b]' -> 'io'": 1,
            "io [a] -> io": 1,
            "'callable[[a], put[b]]' -> callable [...,io]": 1,
            "callable [...,io [a]] -> callable [...,io]": 1,
            "'callable[[a], get[b]]' -> callable [...,io]": 1,
            "callable [...,io [str]] -> callable [...,io]": 1,
            "callable [...,\"readfile\"] -> callable [...,io]": 1,
            "callable [...,a] -> callable [...,any]": 1,
            "'list[a]' -> 'list'": 2,
            "callable [...,'list[b]'] -> callable [...,'list']": 1,
            "iterable [a] -> iterable": 1,
            "callable [...,'maybe[b]'] -> callable [...,'maybe']": 1,
            "'maybe[a]' -> 'maybe'": 1,
            "maybe [a] -> maybe": 3,
            "callable [...,maybe [b]] -> callable [...,maybe]": 2,
            "\"reader\" -> 'reader'": 1,
            "callable [...,tuple [a,s]] -> callable [...,tuple [any,any]]": 1,
            "s -> any": 5,
            "callable [...,'state[b, s]'] -> callable [...,'state']": 1,
            "\"tuple[callable, ...]\" -> callable": 1,
            "monoid [c] -> log": 1,
            "callable [...,b] -> callable [...,tuple [b,w]]": 1,
            "callable [...,'writer[b]'] -> callable [...,'writer']": 1,
            "callable [...,tuple [b,monoid [c]]] -> callable [...,tuple [b,w]]": 1,
            "monoid [c] -> monoid": 1,
            "callable [...,tuple [b,w]] -> callable [...,tuple [any,log]]": 2,
            "w -> 'writer'": 1,
            "callable [...,any] -> callable [...,tresult]": 9,
            "callable [...,any] -> callable [...,t2]": 1,
            "callable [...,'cont'] -> callable [...,'cont[t2, tresult]']": 1,
            "callable [...,b] -> callable [...,tresult]": 3,
            "'either' -> \"either[tsource, terror]\"": 1,
            "callable [...,'either'] -> callable [...,\"either[tresult, terror]\"]": 1,
            "a -> callable [...,tresult]": 1,
            "either -> \"either[tsource, terror]\"": 1,
            "callable [...,either] -> callable [...,either [tresult,terror]]": 2,
            "e -> tsource": 1,
            "any -> tsource": 7,
            "callable [...,'identity'] -> callable [...,'identity[tresult]']": 1,
            "'identity' -> 'identity[tsource]'": 1,
            "'io' -> \"io[optional[callable[[optional[tsource]], optional[tresult]]]]\"": 1,
            "any -> optional [tsource]": 1,
            "callable [...,'io'] -> callable [...,\"io[optional[tresult]]\"]": 1,
            "'io' -> \"io[optional[tsource]]\"": 1,
            "callable [...,any] -> callable [...,optional [tresult]]": 2,
            "callable [...,io] -> callable [...,io [optional [tresult]]]": 1,
            "callable [...,any] -> optional [callable [...,any]]": 1,
            "callable [...,'maybe'] -> callable [...,maybe [tresult]]": 1,
            "'maybe' -> \"maybe[tsource]\"": 2,
            "any -> callable [...,tresult]": 1,
            "maybe -> maybe [tsource]": 2,
            "callable [...,maybe] -> callable [...,maybe [tresult]]": 1,
            "callable [...,'observable'] -> callable [...,'observable[tresult]']": 1,
            "callable [...,any] -> callable [...,tsource]": 1,
            "callable [...,any] -> \"callable[[tsource], reader[tenv, tresult]]\"": 1,
            "'reader' -> \"reader[tenv, tsource]\"": 1,
            "callable -> callable [...,tsource]": 1,
            "callable [...,tuple [any,any]] -> callable [...,tuple [tsource,tstate]]": 1,
            "callable [...,'state'] -> callable [...,\"state[tstate, tresult]\"]": 1,
            "any -> tstate": 2,
            "log -> tlog": 1,
            "callable [...,tuple [any,log]] -> callable [...,tuple [tresult,tlog]]": 1,
            "callable [...,'writer'] -> callable [...,'writer[tresult, tlog]']": 1,
            "callable [...,tuple [any,log]] -> callable [...,tuple [tsource,tlog]]": 1,
            "monoid -> tlog": 1,
            "optional [tsource] -> tsource": 1,
            "callable [...,\"io[optional[tresult]]\"] -> callable [...,\"io[tresult]\"]": 1,
            "callable [...,optional [tresult]] -> callable [...,tresult]": 1,
            "callable [...,io [optional [tresult]]] -> callable [...,tresult]": 1,
            "callable [...,optional [tresult]] -> callable [...,\"io[tresult]\"]": 1,
            "callable [...,io] -> callable [...,io [tresult]]": 1,
            "callable [...,io] -> callable [...,tresult]": 1,
            "callable [...,any] -> callable [...,io]": 1,
            "callable [...,io] -> callable [...,any]": 1,
            "'list' -> list [tsource]": 1,
            "callable [...,'list'] -> callable [...,list [tresult]]": 1
        },
        "typeChanged_dict_ret": {
            "imaybe -> \"imaybe\"": 2,
            "imaybe -> maybe": 4,
            "bool -> \"imaybe\"": 1,
            "bool -> maybe": 1,
            "\"imaybe\" -> any": 1,
            "\"imaybe\" -> \"maybe\"": 3,
            "maybe -> \"maybe\"": 1,
            "\"imaybe\" -> maybe": 2,
            "bool -> \"maybe\"": 2,
            "\"imonoid\" -> \"monoid\"": 3,
            "\"iapplicative\" -> \"applicative\"": 2,
            "\"ifunctor\" -> \"functor\"": 1,
            "bool -> any": 2,
            "\"maybe\" -> maybe": 2,
            "str -> maybe": 1,
            "\"applicative\" -> \"either\"": 1,
            "bool -> \"either\"": 1,
            "str -> bool": 2,
            "either -> str": 2,
            "bool -> either": 1,
            "str -> \"either\"": 1,
            "\"either\" -> either": 2,
            "\"applicative\" -> \"monad\"": 1,
            "\"ioaction\" -> ioaction": 2,
            "\"ioaction\" -> \"io\"": 5,
            "ioaction -> io": 2,
            "tuple -> bool": 1,
            "\"monad\" -> \"identity\"": 1,
            "\"callable\" -> callable": 2,
            "\"any\" -> any": 3,
            "\"reader\" -> callable": 1,
            "\"io\" -> io": 3,
            "maybe -> \"just\"": 1,
            "\"monad\" -> 'monad'": 5,
            "\"list\" -> 'list'": 4,
            "\"reader\" -> 'reader'": 4,
            "\"functor\" -> 'functor'": 2,
            "'monad' -> monad": 2,
            "str -> int": 1,
            "\"any\" -> 'cont'": 1,
            "\"reader\" -> reader": 1,
            "\"applicative\" -> \"applicative[b]\"": 1,
            "\"applicative\" -> 'applicative[b]'": 1,
            "\"applicative\" -> 'applicative[c]'": 1,
            "'functor' -> 'functor[b]'": 2,
            "any -> a": 4,
            "'monad' -> 'monad[b]'": 2,
            "'monad' -> 'monad[a]'": 1,
            "\"monoid\" -> 'monoid[a]'": 3,
            "either -> none": 3,
            "\"io\" -> none": 1,
            "\"io\" -> 'io[b]'": 2,
            "io -> none": 2,
            "io -> 'put[b]'": 2,
            "str -> 'get[b]'": 1,
            "io -> io [str]": 3,
            "io -> io [a]": 1,
            "\"just\" -> none": 1,
            "\"either\" -> 'either[e, b]'": 3,
            "either -> either [e,b]": 5,
            "\"identity\" -> 'identity[b]'": 3,
            "str -> io [a]": 2,
            "'list' -> 'list[a]'": 3,
            "'list' -> 'list[b]'": 3,
            "iterator -> 'list[a]'": 1,
            "\"maybe\" -> 'maybe[b]'": 2,
            "\"maybe\" -> 'maybe'": 1,
            "\"maybe\" -> 'maybe[a]'": 2,
            "bool -> a": 3,
            "\"maybe\" -> bool": 1,
            "none -> a": 1,
            "\"just\" -> bool": 1,
            "maybe -> maybe [b]": 4,
            "maybe -> maybe [a]": 2,
            "str -> a": 2,
            "'state' -> 'state[a, s]'": 1,
            "'state' -> 'state[b, s]'": 2,
            "'state' -> tuple [b,s]": 2,
            "bool -> 'state[s, s]'": 1,
            "\"writer\" -> 'writer[b]'": 2,
            "\"writer\" -> 'writer[a]'": 1,
            "tuple -> tuple [a,b]": 1,
            "tuple -> tuple [b,monoid [c]]": 1,
            "state -> none": 1,
            "'applicative[b]' -> 'applicative'": 1,
            "'either[e, b]' -> 'either'": 3,
            "either [e,b] -> either": 5,
            "'identity[b]' -> 'identity'": 3,
            "a -> any": 9,
            "'io[b]' -> 'io'": 3,
            "'io[a]' -> any": 2,
            "'put[b]' -> 'put'": 2,
            "io [a] -> io": 7,
            "'get[b]' -> io": 1,
            "'get[b]' -> 'get'": 1,
            "io [str] -> io": 2,
            "'list[a]' -> 'list'": 5,
            "'list[b]' -> 'list'": 3,
            "list [a] -> list": 1,
            "iterator [a] -> iterator": 1,
            "'maybe[b]' -> 'maybe'": 2,
            "'maybe[a]' -> 'maybe'": 2,
            "'just[b]' -> 'just'": 1,
            "maybe [b] -> maybe": 4,
            "maybe [a] -> maybe": 2,
            "monad -> callable [...,monad]": 1,
            "\"reader\" -> any": 1,
            "'state[a, s]' -> 'state'": 2,
            "'state[b, s]' -> 'state'": 2,
            "tuple [b,s] -> tuple [any,any]": 2,
            "'state[s, s]' -> 'state'": 1,
            "tuple [a,s] -> tuple [any,any]": 1,
            "tuple [a,s] -> tuple": 1,
            "'writer[b]' -> 'writer'": 2,
            "bool -> 'writer'": 1,
            "tuple [a,b] -> w": 1,
            "tuple [b,monoid [c]] -> tuple [b,w]": 1,
            "'monadwriter[a]' -> bool": 1,
            "w -> 'writer'": 1,
            "tuple [b,w] -> tuple [any,log]": 1,
            "'cont' -> 'cont[t, tresult]'": 1,
            "'cont' -> 'cont[t2, tresult]'": 2,
            "'cont' -> tresult": 1,
            "any -> tresult": 2,
            "'either' -> \"either[tresult, terror]\"": 2,
            "'either' -> \"either[callable[[tsource], tresult], terror]\"": 1,
            "bool -> \"right[tsource, terror]\"": 1,
            "none -> \"either[tresult, terror]\"": 1,
            "either -> bool": 2,
            "either -> either [tresult,terror]": 2,
            "bool -> \"right[callable[[tsource], tresult], terror]\"": 1,
            "str -> \"either[tresult, terror]\"": 1,
            "none -> \"right[tsource, terror]\"": 1,
            "bool -> none": 2,
            "str -> either [callable [...,tresult],terror]": 1,
            "'identity' -> 'identity[tsource]'": 1,
            "'identity' -> 'identity[tresult]'": 2,
            "any -> 'identity[tresult]'": 1,
            "any -> tsource": 3,
            "bool -> tsource": 2,
            "'io' -> \"io[optional[tresult]]\"": 2,
            "'io' -> \"io[optional[callable[[optional[tsource]], optional[tresult]]]]\"": 1,
            "any -> \"io[optional[tresult]]\"": 1,
            "any -> optional [tsource]": 1,
            "str -> any": 1,
            "'put' -> \"put\"": 2,
            "'get' -> \"get\"": 1,
            "'list' -> 'list[tsource]'": 4,
            "'list' -> 'list[tresult]'": 2,
            "'maybe' -> \"maybe[tsource]\"": 2,
            "'maybe' -> \"maybe[tresult]\"": 2,
            "'maybe' -> \"maybe[callable[[tsource], tresult]]\"": 1,
            "any -> \"maybe[tsource]\"": 1,
            "bool -> \"maybe[tresult]\"": 1,
            "any -> maybe [tsource]": 1,
            "bool -> maybe [tresult]": 2,
            "str -> \"just[callable[[tsource], tresult]]\"": 1,
            "none -> maybe [tsource]": 1,
            "'just' -> maybe [tresult]": 1,
            "maybe -> bool": 3,
            "any -> bool": 3,
            "any -> str": 1,
            "bool -> str": 3,
            "maybe -> maybe [tresult]": 2,
            "maybe -> maybe [callable [...,tresult]]": 1,
            "'observable' -> 'observable[tsource]'": 2,
            "'observable' -> 'observable[tresult]'": 2,
            "'reader' -> \"reader[tenv, tsource]\"": 1,
            "'reader' -> \"reader[tenv, tresult]\"": 1,
            "'reader' -> any": 1,
            "any -> \"reader[tenv, tresult]\"": 1,
            "'reader' -> \"reader[tenv, callable[[tsource], tresult]]\"": 1,
            "callable -> tsource": 1,
            "reader -> reader [tenv,tenv]": 1,
            "reader -> reader [tenv,tsource]": 2,
            "'state' -> \"state[tsource, tstate]\"": 1,
            "'state' -> \"state[tresult, tstate]\"": 2,
            "'state' -> \"state[tstate, tstate]\"": 1,
            "'state' -> \"state[tuple, tstate]\"": 1,
            "tuple [any,any] -> tuple [tsource,tstate]": 1,
            "callable -> callable [...,a]": 1,
            "'writer' -> 'writer[tresult, tlog]'": 2,
            "'writer' -> 'writer[tsource, tlog]'": 1,
            "'writer' -> tuple [tsource,tlog]": 1,
            "tuple [any,log] -> tuple [tsource,tlog]": 1,
            "'monadwriter' -> bool": 1,
            "none -> \"io[tresult]\"": 1,
            "\"io[optional[tresult]]\" -> \"io[tresult]\"": 1,
            "\"io[optional[callable[[optional[tsource]], optional[tresult]]]]\" -> tsource": 1,
            "\"put\" -> \"io[tresult]\"": 2,
            "io -> tsource": 4,
            "io -> io [tresult]": 1,
            "\"get\" -> io [tresult]": 1,
            "io -> str": 2,
            "any -> 'io[tresult]'": 1,
            "none -> 'list'": 1,
            "tsource -> 'list'": 1,
            "'list[tsource]' -> list": 1,
            "'list[tresult]' -> 'list'": 1,
            "'list[tsource]' -> list [tsource]": 1,
            "'list' -> list [tresult]": 1,
            "'list' -> iterator": 1,
            "'list' -> int": 1,
            "list -> str": 1,
            "iterator -> str": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 286,
        "functionReturnsType_added": 342,
        "variableType_added": 10,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 95,
        "functionReturnsType_removed": 112,
        "variableType_removed": 0,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 233,
        "functionReturnsType_changed": 362,
        "variableType_changed": 0,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            7.777777777777778,
            6.956521739130435,
            56.25,
            24.242424242424242,
            12.903225806451612,
            12.195121951219512,
            20.0,
            33.33333333333333,
            8.695652173913043,
            4.3478260869565215,
            2.127659574468085,
            25.0,
            100.0,
            12.195121951219512,
            22.22222222222222,
            0.7518796992481203,
            6.25,
            10.0,
            12.5,
            3.7735849056603774,
            0.6134969325153374,
            10.01926782273603,
            10.01926782273603,
            4.651162790697675,
            16.666666666666664,
            16.666666666666664,
            25.0,
            14.285714285714285,
            6.0606060606060606,
            22.22222222222222,
            7.352941176470589,
            7.547169811320755,
            2.631578947368421,
            100.0,
            5.555555555555555,
            2.7777777777777777,
            100.0,
            6.0606060606060606,
            3.8461538461538463,
            100.0,
            3.153153153153153,
            7.142857142857142,
            4.782608695652174,
            4.824561403508771,
            100.0,
            4.621848739495799,
            15.841584158415841,
            1.282051282051282,
            6.770833333333333,
            30.0,
            17.391304347826086,
            3.4482758620689653,
            25.0,
            2.631578947368421,
            68.57142857142857,
            2.3255813953488373,
            4.878048780487805,
            2.5,
            10.0,
            7.2727272727272725,
            6.976744186046512,
            0.6493506493506493,
            11.11111111111111,
            12.5,
            6.179775280898876,
            33.33333333333333,
            1.092896174863388,
            4.545454545454546,
            3.8095238095238098,
            8.695652173913043,
            11.11111111111111,
            5.88235294117647,
            17.5,
            3.571428571428571,
            16.666666666666664,
            15.384615384615385,
            5.555555555555555,
            5.0,
            4.587155963302752,
            1.8181818181818181,
            4.545454545454546,
            5.357142857142857,
            100.0,
            33.33333333333333,
            2.083333333333333,
            5.263157894736842,
            1.8181818181818181,
            3.9215686274509802,
            2.73972602739726,
            3.125,
            3.125,
            14.285714285714285,
            8.333333333333332,
            3.7037037037037033,
            11.11111111111111,
            6.25,
            30.208333333333332,
            14.210526315789473,
            4.0,
            26.10294117647059,
            1.8691588785046727,
            12.432432432432433,
            11.328125,
            8.791208791208792,
            15.36,
            10.638297872340425,
            5.88235294117647,
            10.714285714285714,
            2.6024528866287766,
            2.976190476190476,
            2.425938885001166,
            11.267605633802818,
            12.162162162162163,
            10.493827160493826,
            8.0,
            3.8461538461538463,
            7.163323782234957,
            0.5899705014749262,
            1.8544935805991443
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2015",
                "201",
                "523",
                "1440",
                "45",
                "8",
                "102",
                "368",
                "10",
                "0",
                "0",
                "224"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/dbrattli/OSlash": 1440
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 293,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            45.92
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/dbrattli/OSlash": 293
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2015": 315,
            "2016": 144,
            "2018": 30,
            "2020": 149
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2015": 45,
            "2016": 5,
            "2018": 1,
            "2020": 4
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2015": 114,
            "2016": 9,
            "2018": 8,
            "2020": 6
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                77,
                622,
                58,
                295,
                0,
                418
            ],
            "2017": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2018": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2019": [
                236,
                1214,
                226,
                528,
                0,
                860
            ],
            "2020": [
                118,
                607,
                113,
                264,
                0,
                430
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "dbrattli-OSlash": 0,
                "dag@brattli.net": 54,
                "duythinht@gmail.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "dbrattli-OSlash": 0,
                "dag@brattli.net": 191,
                "christophe.benz@gmail.com": 1,
                "duythinht@gmail.com": 1,
                "tom.kaszemacher@Tom-ESACs-MacBook-Pro.local": 1,
                "dbrattli@outlook.com": 2,
                "mail@sobolevn.me": 1,
                "juha.jeronen@jyu.fi": 2,
                "dag.brattli@cognite.com": 1,
                "tanayseven@gmail.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]