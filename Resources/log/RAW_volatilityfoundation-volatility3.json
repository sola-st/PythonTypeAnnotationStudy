[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 2948,
        "commit_year_dict": {
            "2015": 103,
            "2016": 385,
            "2017": 359,
            "2018": 567,
            "2019": 567,
            "2020": 529,
            "2021": 438
        },
        "loc_year_edit": {
            "2015": 6224,
            "2016": 36153,
            "2017": 14046,
            "2018": 46322,
            "2019": 45102,
            "2020": 44479,
            "2021": 160307
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 148,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 2439,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2017": 162,
            "2018": 172,
            "2019": 227,
            "2020": 102,
            "2021": 791
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2015": 1,
            "2017": 4,
            "2018": 66,
            "2019": 60,
            "2020": 27,
            "2021": 675
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2017": 2,
            "2018": 64,
            "2019": 55,
            "2020": 16,
            "2021": 15
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 1454,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "linuxbanners": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [str,str,interfaces_configuration]]": 2,
            "typing.type": 22,
            "interfaces_configuration.contextinterface": 2,
            "str": 277,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 2,
            "none": 139,
            "'interfaces.configuration.hierarchicaldict'": 4,
            "'interfaces.symbols.symbolspaceinterface'": 3,
            "'interfaces.layers.datalayerinterface'": 3,
            "'interfaces.layers.memory'": 2,
            "'interfaces.objects.template'": 7,
            "int": 136,
            "'contextinterface'": 3,
            "'module'": 2,
            "contextinterface": 4,
            "'interfaces.objects.objectinterface'": 5,
            "'interfaces.symbols.symbol'": 2,
            "v": 4,
            "'interfaces.context.contextinterface'": 22,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['interfaces.configuration.requirementinterface']": 3,
            "'renderers.treegrid'": 2,
            "typing.any": 6,
            "bytes": 49,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [int,typing [str,bytes]],none,none]": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing]": 2,
            "object": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces]": 3,
            "bool": 94,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces]": 4,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objects',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).objectinterface": 13,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,bytes]": 2,
            "registryhive": 8,
            "typing.generator": 4,
            "validity.progresscallback": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,typing [interfaces]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [typing [int,typing]]]": 1,
            "fileinterface": 2,
            "fileconsumerinterface": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing,none,none]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,bytes]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,typing]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,typing]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [str,datetime,timelinertype],none,none]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [int,str]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces]": 17,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces,datetime]": 2,
            "macbanners": 1,
            "bannerstype": 3,
            "objects.pointer": 3,
            "list [interfaces]": 77,
            "iterator [any]": 11,
            "generator [tuple [int,tuple [int,str,int,str]],none,none]": 2,
            "renderers.treegrid": 5,
            "list [str]": 32,
            "list [timelinerinterface]": 2,
            "generator [tuple [str,timelinertype,datetime],none,none]": 2,
            "list [type]": 2,
            "optional [iterable [tuple [int,tuple]]]": 2,
            "sequence [objects]": 3,
            "generator": 3,
            "iterator [tuple [int,tuple [int,int,str,str]]]": 1,
            "generator [tuple,none,none]": 2,
            "tuple [int,bytes]": 2,
            "dict [int,set [tuple [str,int]]]": 2,
            "any": 20,
            "iterable [tuple [int,int]]": 3,
            "iterable [tuple [int,str]]": 1,
            "optional [str]": 31,
            "optional ['objectinterface']": 2,
            "optional [validity]": 1,
            "optional [ssl]": 1,
            "dict": 17,
            "'interfaces.symbols.symbolinterface'": 2,
            "dict [str,list [str]]": 3,
            "volatilityplugin": 11,
            "volatilityimage": 11,
            "readonlymapping": 3,
            "optional [dict [str,type [objects]]]": 2,
            "dict [str,any]": 14,
            "dict [str,dict [str,any]]": 3,
            "objects.template": 5,
            "generator [tuple [int,tuple],none,none]": 2,
            "union [int,interfaces]": 2,
            "union [str,interfaces]": 10,
            "optional [dict [str,any]]": 4,
            "iterable [tuple [int,int,int,str]]": 2,
            "list [int]": 3,
            "optional [tuple [str,interfaces]]": 2,
            "pdbmsf": 1,
            "optional ['pdbmsfstream']": 2,
            "float": 1,
            "list [float]": 2,
            "list [volatilityimage]": 1,
            "list [volatilityplugin]": 1,
            "dict [str,union [str,dict [str,str]]]": 1,
            "union [str,'interfaces.objects.template']": 3,
            "optional [constants]": 2,
            "callable [...,_t]": 2,
            "_s": 1,
            "_t": 2,
            "'plugininterface'": 1,
            "tuple [int,...]": 1,
            "list [interfaces_configuration]": 1,
            "tuple [optional [int],optional [str]]": 2,
            "iterator [tuple [int,tuple [int,str]]]": 1,
            "visitorsignature": 3,
            "optional [_s]": 2,
            "optional [int]": 4,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='renderers',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).treegrid": 1,
            "'interfaces.layers.scannerinterface'": 2,
            "iterable [interfaces]": 3,
            "list [list [str]]": 3,
            "dict [str,str]": 8,
            "list [requirementinterface]": 3,
            "iterable [str]": 13,
            "tuple [int,int,int]": 7,
            "tuple [str,bytes]": 2,
            "type [symbol_cache]": 2,
            "generator [str,none,none]": 3,
            "optional [list [str]]": 2,
            "'helpfulargparser'": 2,
            "argparse.namespace": 2,
            "configsimpletype": 7,
            "type ['multitypedata']": 2,
            "'multitypedata'": 2,
            "set [str]": 4,
            "union [str,interfaces,interfaces]": 3,
            "list [tuple [list [str],any]]": 3,
            "type": 6,
            "type [t]": 1,
            "generator [type [t],none,none]": 1,
            "dict [str,type [interfaces]]": 2,
            "dict [str,interfaces]": 2,
            "dict [str,'simpletyperequirement']": 1,
            "'hierarchicaldict'": 4,
            "'requirementinterface'": 2,
            "requirementinterface": 2,
            "dict [str,object]": 1,
            "dict [str,'requirementinterface']": 3,
            "dict [str,requirementinterface]": 4,
            "optional ['interfaces.objects.objectinterface']": 1,
            "hierarchicaldict": 3,
            "'interfaces.layers.layercontainer'": 2,
            "'moduleinterface'": 1,
            "mapping [str,any]": 1,
            "'objectinformation'": 1,
            "'template'": 10,
            "objectinformation": 1,
            "'objectinterface'": 1,
            "list ['template']": 2,
            "objectinterface": 1,
            "optional [list [renderoption]]": 1,
            "'treegrid'": 1,
            "list [any]": 1,
            "columnstype": 1,
            "treenode": 5,
            "optional [treenode]": 1,
            "_type": 1,
            "columnsortkey": 1,
            "list [renderoption]": 1,
            "list ['basetypes']": 1,
            "optional ['treenode']": 1,
            "optional [exception]": 1,
            "list [column]": 1,
            "list [treenode]": 1,
            "tuple [basetypes,...]": 1,
            "optional [objects]": 3,
            "optional [bytes]": 3,
            "'nativetableinterface'": 4,
            "optional [dict [str,str]]": 2,
            "optional [mapping [str,type [objects]]]": 2,
            "type [objects]": 2,
            "basesymboltableinterface": 1,
            "symbolinterface": 3,
            "iterable [any]": 1,
            "'configuration.hierarchicaldict'": 1,
            "iterable [tuple [int,int,int,int,str]]": 2,
            "pdbmultistreamformat": 1,
            "list [bytes]": 5,
            "generator [int,none,none]": 2,
            "generator [tuple [int,bytes],none,none]": 4,
            "iterable [tuple [int,bool,datetime,str,bool,interfaces]]": 1,
            "iterable [tuple [int,str,str,bytes]]": 1,
            "union [interfaces,datetime]": 3,
            "generator [tuple [int,int],none,none]": 1,
            "iterator [interfaces]": 2,
            "optional [tuple]": 1,
            "type [interfaces]": 1,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objects',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).template": 1,
            "mapping [str,int]": 1,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objects',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).readonlymapping": 1,
            "iterator [tuple [int,tuple [str,str,str,str]]]": 1,
            "optional [dict [int,optional [dict]]]": 3,
            "registry.registryhive": 6,
            "tuple [int,int,int,bytes,bytes]": 1,
            "tuple [str,str,str,bytes]": 1,
            "crash.windowscrashdump32layer": 1,
            "list [abc]": 1,
            "dict [str,configsimpletype]": 1,
            "dict [str,'hierarchicaldict']": 1,
            "classvar [type]": 1,
            "set [any]": 1,
            "optional [hierarchicaldict]": 1,
            "classvar [tuple]": 1,
            "list [tuple [int,str]]": 1,
            "dict [int,str]": 1,
            "optional [list [interfaces]]": 1,
            "dict [int,interfaces]": 1,
            "dict [int,int]": 2,
            "dict [int,set [int]]": 2,
            "union [interfaces,bytes]": 1,
            "tuple [int,tuple [format_hints,any,any,any,any,any,any,any,any,any,any,any]]": 1,
            "optional [type [interfaces]]": 1,
            "set": 1,
            "'interfaces.context.moduleinterface'": 1,
            "optional [list [moduleinterface]]": 1,
            "dict [str,moduleinterface]": 1,
            "moduleinterface": 2,
            "list": 1,
            "dict [int,tuple [interfaces,int]]": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 833,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "context_module.contextinterface": 1,
            "linuxbanners": 3,
            "typing.type": 2,
            "registryhive": 6,
            "none": 86,
            "bool": 54,
            "typing.generator": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces]": 1,
            "macbanners": 1,
            "list [interfaces]": 56,
            "iterator [any]": 9,
            "generator [tuple [int,tuple [int,str,int,str]],none,none]": 2,
            "renderers.treegrid": 4,
            "list [str]": 14,
            "list [timelinerinterface]": 2,
            "generator [tuple [str,timelinertype,datetime],none,none]": 2,
            "list [type]": 2,
            "optional [iterable [tuple [int,tuple]]]": 2,
            "str": 168,
            "int": 74,
            "objects.pointer": 2,
            "sequence [objects]": 3,
            "generator": 2,
            "iterator [tuple [int,tuple [int,int,str,str]]]": 1,
            "bytes": 21,
            "generator [tuple,none,none]": 2,
            "tuple [int,bytes]": 2,
            "dict [int,set [tuple [str,int]]]": 2,
            "any": 18,
            "iterable [tuple [int,int]]": 2,
            "iterable [tuple [int,str]]": 1,
            "optional [str]": 21,
            "optional [validity]": 1,
            "optional [ssl]": 1,
            "v": 2,
            "type": 10,
            "dict": 10,
            "dict [str,union [str,dict [str,str]]]": 1,
            "dict [str,any]": 8,
            "dict [str,dict [str,any]]": 1,
            "optional [constants]": 2,
            "union [str,'interfaces.objects.template']": 2,
            "'plugininterface'": 1,
            "tuple [int,...]": 1,
            "list [interfaces_configuration]": 1,
            "generator [tuple [int,union [str,bytes]],none,none]": 1,
            "visitorsignature": 3,
            "object": 1,
            "'interfaces.symbols.symboltableinterface'": 1,
            "_s": 1,
            "list [list [str]]": 2,
            "dict [str,str]": 5,
            "tuple [int,int,int]": 3,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='renderers',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).treegrid": 1,
            "callable [...,_t]": 1,
            "optional [_s]": 1,
            "optional [list [str]]": 1,
            "_t": 1,
            "'helpfulargparser'": 1,
            "argparse.namespace": 1,
            "union [str,interfaces,interfaces]": 3,
            "list [tuple [list [str],any]]": 3,
            "type [t]": 1,
            "generator [type [t],none,none]": 1,
            "dict [str,type [interfaces]]": 1,
            "bannerstype": 1,
            "dict [str,interfaces]": 1,
            "dict [str,'simpletyperequirement']": 1,
            "'hierarchicaldict'": 4,
            "configsimpletype": 6,
            "'interfaces.context.contextinterface'": 18,
            "'requirementinterface'": 2,
            "requirementinterface": 2,
            "dict [str,object]": 1,
            "generator [str,none,none]": 2,
            "dict [str,'requirementinterface']": 3,
            "dict [str,requirementinterface]": 3,
            "optional ['interfaces.objects.objectinterface']": 1,
            "hierarchicaldict": 3,
            "list [requirementinterface]": 2,
            "'interfaces.layers.datalayerinterface'": 1,
            "optional [int]": 3,
            "contextinterface": 2,
            "'interfaces.configuration.hierarchicaldict'": 1,
            "'interfaces.symbols.symbolspaceinterface'": 1,
            "'interfaces.layers.layercontainer'": 1,
            "'contextinterface'": 1,
            "'moduleinterface'": 1,
            "'interfaces.objects.objectinterface'": 2,
            "'interfaces.objects.template'": 2,
            "'interfaces.symbols.symbolinterface'": 1,
            "mapping [str,any]": 1,
            "optional ['objectinterface']": 1,
            "'objectinformation'": 1,
            "'template'": 10,
            "objectinformation": 1,
            "readonlymapping": 2,
            "'objectinterface'": 1,
            "list ['template']": 2,
            "objectinterface": 1,
            "optional [list [renderoption]]": 1,
            "'treegrid'": 1,
            "list [any]": 1,
            "columnstype": 1,
            "treenode": 5,
            "optional [treenode]": 1,
            "_type": 1,
            "columnsortkey": 1,
            "list [renderoption]": 1,
            "list ['basetypes']": 1,
            "optional ['treenode']": 1,
            "optional [exception]": 1,
            "list [column]": 1,
            "list [treenode]": 1,
            "tuple [basetypes,...]": 1,
            "optional [objects]": 3,
            "optional [bytes]": 2,
            "'nativetableinterface'": 4,
            "optional [dict [str,str]]": 2,
            "optional [mapping [str,type [objects]]]": 2,
            "type [objects]": 2,
            "basesymboltableinterface": 1,
            "symbolinterface": 3,
            "iterable [str]": 9,
            "objects.template": 4,
            "iterable [any]": 1,
            "'configuration.hierarchicaldict'": 1,
            "'interfaces.layers.scannerinterface'": 1,
            "tuple [optional [int],optional [str]]": 1,
            "iterable [interfaces]": 2,
            "optional [dict [str,any]]": 2,
            "list [int]": 2,
            "optional [tuple [str,interfaces]]": 1,
            "iterable [tuple [int,int,int,int,str]]": 2,
            "optional ['pdbmsfstream']": 1,
            "pdbmultistreamformat": 1,
            "list [bytes]": 2,
            "generator [int,none,none]": 2,
            "generator [tuple [int,bytes],none,none]": 2,
            "type [symbol_cache]": 1,
            "union [str,interfaces]": 4,
            "iterable [tuple [int,bool,datetime,str,bool,interfaces]]": 1,
            "generator [tuple [int,tuple],none,none]": 1,
            "iterable [tuple [int,str,str,bytes]]": 1,
            "union [interfaces,datetime]": 2,
            "type ['multitypedata']": 1,
            "'multitypedata'": 1,
            "generator [tuple [int,int],none,none]": 1,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objects',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).objectinterface": 4,
            "iterator [interfaces]": 2,
            "optional [tuple]": 1,
            "type [interfaces]": 1,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objects',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).template": 1,
            "union [int,interfaces]": 1,
            "mapping [str,int]": 1,
            "attribute(\n    value=name(\n        value='interfaces',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objects',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).readonlymapping": 1,
            "tuple [str,bytes]": 1,
            "iterator [tuple [int,tuple [str,str,str,str]]]": 1,
            "set [str]": 2,
            "optional [dict [int,optional [dict]]]": 1,
            "dict [int,interfaces]": 1,
            "dict [int,int]": 1,
            "dict [int,set [int]]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 152,
        "typeChanged_dict_var": {},
        "typeChanged_dict_arg": {
            "'interfaces.objects.template' -> str": 2,
            "int -> objects.struct": 1,
            "typing.type -> t": 1,
            "typing.any -> any": 3,
            "typing.type -> type": 6,
            "dict -> dict [int,str]": 1,
            "list [str] -> dict [str,interfaces]": 1,
            "validity.progresscallback -> constants.progresscallback": 1,
            "optional [validity] -> optional [constants]": 1,
            "list [renderoption] -> optional [list [renderoption]]": 1,
            "t -> type [t]": 1,
            "union [str,'interfaces.objects.template'] -> str": 1,
            "'interfaces.context.contextinterface' -> interfaces_context.contextinterface": 1,
            "dict -> dict [str,'simpletyperequirement']": 1,
            "union [str,interfaces] -> union [str,interfaces,interfaces]": 4,
            "'interfaces_context.contextinterface' -> 'interfaces.context.contextinterface'": 3,
            "treenode -> optional [treenode]": 1,
            "optional [dict [str,type [objects]]] -> optional [mapping [str,type [objects]]]": 2,
            "'interfaces.layers.scannerinterface' -> 'scannerinterface'": 1,
            "'scannerinterface' -> 'interfaces.layers.scannerinterface'": 1,
            "optional [configsimpletype] -> configsimpletype": 1,
            "bytes -> int": 1,
            "'helpfulargparser' -> argparse.argumentparser": 1,
            "list [str] -> union [str,sequence [any],none]": 1,
            "none -> optional [str]": 1,
            "int -> union [int,bytes]": 1
        },
        "typeChanged_dict_ret": {
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t,none,none]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['interfaces.configuration.requirementinterface'] -> none": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,typing] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,typing [typing [str,int]]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [str,datetime,timelinertype],none,none] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [str,timelinertype,datetime,timelinertype],none,none]": 1,
            "none -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "'renderers.treegrid' -> 'interfaces.renderers.treegrid'": 1,
            "typing.generator -> none": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,typing] -> dict [str,callable]": 1,
            "typing.any -> any": 1,
            "typing.type -> type": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t,none,none] -> generator [t,none,none]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str] -> list [str]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,typing [interfaces]] -> dict [str,type [interfaces]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['interfaces.configuration.requirementinterface'] -> list ['interfaces.configuration.requirementinterface']": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [int,typing [str,bytes]],none,none] -> generator [tuple [int,union [str,bytes]],none,none]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces,datetime] -> union [interfaces,datetime]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str] -> optional [str]": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing] -> optional [tuple]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int] -> optional [int]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces] -> optional [interfaces]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces] -> iterable [interfaces]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,bytes] -> union [str,bytes]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [interfaces] -> list [interfaces]": 17,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing,none,none] -> generator [tuple,none,none]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,bytes] -> tuple [int,bytes]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int,typing [typing [str,int]]] -> dict [int,set [tuple [str,int]]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [int,int]] -> iterable [tuple [int,int]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [int,str]] -> iterable [tuple [int,str]]": 1,
            "iterator [tuple [int,tuple [int,int,str,str]]] -> iterator [tuple [int,tuple [int,int,any,any]]]": 1,
            "str -> optional [str]": 3,
            "readonlymapping -> any": 1,
            "dict -> str": 1,
            "str -> dict [str,union [str,dict [str,str]]]": 1,
            "generator [t,none,none] -> generator [type [t],none,none]": 1,
            "dict [str,any] -> objects.template": 1,
            "iterable [str] -> objects.template": 1,
            "dict [str,any] -> iterable [str]": 1,
            "'interfaces.symbols.symbolinterface' -> 'interfaces.object.template'": 1,
            "'interfaces.layers.memory' -> 'interfaces.layers.layercontainer'": 1,
            "'interfaces.object.template' -> 'interfaces.objects.template'": 1,
            "objects.template -> symbolinterface": 1,
            "optional [str] -> optional [tuple [str,interfaces]]": 1,
            "optional [tuple [str,interfaces]] -> str": 1,
            "pdbmsf -> optional [pdbmsf]": 1,
            "list [interfaces] -> str": 1,
            "optional [pdbmsf] -> pdbmsf": 1,
            "pdbmsf -> pdbmultistreamformat": 1,
            "'interfaces.objects.objectinterface' -> contextinterface": 1,
            "generator -> int": 1,
            "'interfaces.objects.template' -> 'interfaces.objects.objectinterface'": 1,
            "list ['interfaces.configuration.requirementinterface'] -> list [interfaces_configuration]": 1,
            "'interfaces.renderers.treegrid' -> interfaces_renderers.treegrid": 1,
            "list [interfaces_configuration] -> tuple [int,int,int]": 1,
            "bool -> list [interfaces_configuration]": 1,
            "'hierarchicaldict' -> none": 1,
            "str -> 'hierarchicaldict'": 1,
            "dict [str,callable] -> dict [str,any]": 1,
            "iterable [tuple [int,bool,datetime,str,bool,bytes]] -> iterable [tuple [int,bool,datetime,str,bool,interfaces]]": 1,
            "dict [str,any] -> list [tuple [list [str],any]]": 3,
            "bool -> 'interfaces.symbols.symboltableinterface'": 1,
            "generator [tuple [int,union [str,bytes]],none,none] -> generator [tuple [int,bytes],none,none]": 2,
            "'interfaces.symbols.symboltableinterface' -> str": 1,
            "iterable [tuple [int,int,int,str]] -> iterable [tuple [int,int,int,int,str]]": 2,
            "iterable [interfaces] -> iterable [iteratorvalue]": 1,
            "iterable [tuple [int,str]] -> iterable [tuple [int,str,bytes]]": 1,
            "iterable [str] -> none": 1,
            "iterable ['basetypes'] -> list ['basetypes']": 1,
            "none -> optional [exception]": 1,
            "iterable [tuple [int,str,bytes]] -> iterable [tuple [int,str,str,bytes]]": 1,
            "iterator [tuple [int,tuple [int,str]]] -> iterator [tuple [int,tuple [str,str,str,str]]]": 1,
            "str -> union [str,interfaces]": 1,
            "optional [configsimpletype] -> configsimpletype": 1,
            "iterable [iteratorvalue] -> iterable [interfaces]": 1,
            "generator [tuple [int,bytes],none,none] -> none": 1,
            "type -> optional [type]": 1,
            "'interfaces.layers.layercontainer' -> 'modulecontainer'": 1,
            "'interfaces.objects.template' -> int": 1,
            "'interfaces.symbols.symbolinterface' -> 'interfaces.objects.template'": 1,
            "'interfaces.objects.template' -> 'interfaces.symbols.symbolinterface'": 1,
            "bool -> 'interfaces.objects.template'": 1,
            "str -> 'configuration.hierarchicaldict'": 1,
            "dict [str,type [interfaces]] -> list [str]": 1,
            "'configuration.hierarchicaldict' -> str": 1,
            "iterable [str] -> str": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 702,
        "functionReturnsType_added": 686,
        "variableType_added": 66,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 414,
        "functionReturnsType_removed": 404,
        "variableType_removed": 15,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 40,
        "functionReturnsType_changed": 112,
        "variableType_changed": 0,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            50.0,
            3.2467532467532463,
            2.380952380952381,
            14.201183431952662,
            1.556420233463035,
            4.444444444444445,
            1.1111111111111112,
            2.1739130434782608,
            26.08695652173913,
            9.696969696969697,
            3.2467532467532463,
            2.380952380952381,
            14.201183431952662,
            1.556420233463035,
            4.444444444444445,
            1.1111111111111112,
            2.1739130434782608,
            26.08695652173913,
            9.696969696969697,
            20.0,
            25.0,
            18.181818181818183,
            33.33333333333333,
            27.27272727272727,
            3.7037037037037033,
            7.142857142857142,
            0.8403361344537815,
            8.333333333333332,
            6.493506493506493,
            0.8547008547008548,
            1.5384615384615385,
            3.3707865168539324,
            2.4390243902439024,
            3.225806451612903,
            1.8518518518518516,
            1.6666666666666667,
            1.1363636363636365,
            3.3707865168539324,
            1.9607843137254901,
            0.27100271002710025,
            0.1564945226917058,
            0.2583979328165375,
            14.285714285714285,
            2.7777777777777777,
            0.528169014084507,
            0.5291005291005291,
            11.11111111111111,
            9.090909090909092,
            6.451612903225806,
            4.545454545454546,
            3.0303030303030303,
            0.5736137667304015,
            0.625,
            0.8583690987124464,
            22.22222222222222,
            2.631578947368421,
            3.588516746411483,
            0.975371860521824,
            0.9775171065493646,
            12.0,
            16.883116883116884,
            1.3986013986013985,
            50.0,
            0.9615384615384616,
            1.0416666666666665,
            2.4096385542168677,
            11.11111111111111,
            1.6129032258064515,
            2.0408163265306123,
            1.2448132780082988,
            0.7604562737642585,
            0.49382716049382713,
            1.3157894736842104,
            20.0,
            2.0,
            1.1627906976744187,
            1.680672268907563,
            6.666666666666667,
            1.7699115044247788,
            8.620689655172415,
            1.5873015873015872,
            9.090909090909092,
            10.0,
            66.66666666666666,
            33.33333333333333,
            5.714285714285714,
            1.7241379310344827,
            2.5,
            1.183431952662722,
            10.0,
            3.0303030303030303,
            0.7874015748031495,
            42.857142857142854,
            7.6923076923076925,
            7.6923076923076925,
            20.0,
            1.8518518518518516,
            0.7518796992481203,
            20.0,
            27.27272727272727,
            25.0,
            0.31746031746031744,
            20.0,
            22.22222222222222,
            0.2450122506125306,
            3.728813559322034,
            3.3333333333333335,
            11.504424778761061,
            0.847457627118644,
            9.090909090909092,
            8.333333333333332,
            5.263157894736842,
            0.5509641873278237,
            0.2617801047120419,
            3.7037037037037033,
            0.019264110961279137,
            11.18421052631579,
            2.73972602739726,
            9.75609756097561,
            2.307692307692308,
            1.6783216783216783,
            25.0,
            25.0,
            0.6944444444444444,
            0.49504950495049505,
            2.73972602739726,
            1.5267175572519083,
            100.0,
            50.0,
            3.571428571428571,
            5.128205128205128,
            1.0416666666666665,
            3.3707865168539324,
            3.79746835443038,
            7.142857142857142,
            7.142857142857142,
            27.27272727272727,
            7.6923076923076925,
            4.3478260869565215,
            0.8547008547008548,
            4.878048780487805,
            1.2658227848101267,
            4.838709677419355,
            0.4273504273504274,
            1.1363636363636365,
            5.405405405405405,
            0.423728813559322,
            1.6,
            5.797101449275362,
            1.8518518518518516,
            0.6198347107438017,
            5.555555555555555,
            1.8867924528301887,
            5.555555555555555,
            11.11111111111111,
            7.894736842105263,
            21.428571428571427,
            12.5,
            6.25,
            1.5384615384615385,
            4.0,
            3.0927835051546393,
            33.33333333333333,
            3.225806451612903,
            3.225806451612903,
            3.225806451612903,
            1.4285714285714286,
            4.545454545454546,
            14.285714285714285,
            25.0,
            33.33333333333333,
            66.66666666666666,
            3.7037037037037033,
            4.0,
            4.761904761904762,
            1.2658227848101267,
            1.1764705882352942,
            1.8518518518518516,
            0.9950248756218906,
            2.083333333333333,
            2.380952380952381,
            5.555555555555555,
            2.877697841726619,
            19.047619047619047,
            5.0,
            2.0689655172413794,
            2.083333333333333,
            3.1914893617021276,
            2.262443438914027,
            3.1914893617021276,
            4.545454545454546,
            3.8461538461538463,
            4.166666666666666,
            9.523809523809524,
            4.761904761904762,
            7.6923076923076925,
            5.88235294117647,
            8.695652173913043,
            4.3478260869565215,
            5.0,
            4.761904761904762,
            4.761904761904762,
            0.19157088122605362,
            3.278688524590164,
            100.0,
            0.7246376811594203,
            1.0638297872340425,
            1.4492753623188406,
            2.9702970297029703,
            2.793296089385475,
            0.8431703204047217,
            1.1627906976744187,
            2.3255813953488373,
            0.8064516129032258,
            2.586206896551724,
            1.4492753623188406,
            0.5787037037037037,
            1.0101010101010102,
            1.2658227848101267,
            0.8264462809917356,
            25.0,
            19.27710843373494,
            1.2345679012345678,
            0.8172348661941541,
            0.8172348661941541,
            6.153846153846154,
            1.3888888888888888,
            8.59375,
            1.0309278350515463,
            2.1739130434782608,
            1.4705882352941175,
            4.411764705882353,
            100.0,
            24.0,
            42.857142857142854,
            14.285714285714285,
            100.0,
            5.533596837944664,
            1.6025641025641024,
            12.5,
            100.0,
            5.263157894736842,
            5.263157894736842,
            50.0,
            50.0,
            3.0303030303030303,
            0.7042253521126761,
            9.090909090909092,
            5.970149253731343,
            3.4482758620689653,
            1.0309278350515463,
            9.75609756097561,
            9.090909090909092,
            1.4388489208633095
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2014",
                "2948",
                "326",
                "2439",
                "71",
                "29",
                "42",
                "7512",
                "51",
                "0",
                "0",
                "3917"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/volatilityfoundation/volatility3": 2439
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 2883,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            198.28
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/volatilityfoundation/volatility3": 2883
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2017": 162,
            "2018": 172,
            "2019": 227,
            "2020": 102,
            "2021": 791
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2017": 14,
            "2018": 32,
            "2019": 52,
            "2020": 33,
            "2021": 17
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2017": 33,
            "2018": 535,
            "2019": 506,
            "2020": 486,
            "2021": 369
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                630,
                0,
                275,
                0,
                274
            ],
            "2016": [
                0,
                1685,
                0,
                706,
                0,
                974
            ],
            "2017": [
                0,
                1313,
                0,
                542,
                0,
                1160
            ],
            "2018": [
                860,
                962,
                537,
                244,
                0,
                1956
            ],
            "2019": [
                3604,
                4410,
                2282,
                1307,
                30,
                9528
            ],
            "2020": [
                11811,
                14905,
                7202,
                4743,
                80,
                34969
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "volatilityfoundation-volatility3": 0,
                "mike.auty@gmail.com": 121,
                "dave@superponible.com": 1,
                "mligh@volexity.com": 3,
                "acase@volexity.com": 8,
                "analyst@Analysts-MBP.lan": 4,
                "dlassalle@volexity.com": 2,
                "hanno.heinrichs@rwth-aachen.de": 1,
                "matthewtressler10@gmail.com": 3,
                "steffikeene@Steffis-MacBook-Pro-2.local": 1,
                "61626429+memoryforensics1@users.noreply.github.com": 4
            }
        ],
        "list_dev_dict_total": [
            {
                "volatilityfoundation-volatility3": 0,
                "mike.auty@gmail.com": 2378,
                "mike@ikelos.org": 13,
                "npetroni@volexity.com": 14,
                "michael.ligh@mnin.org": 12,
                "dlassalle@volexity.com": 28,
                "mligh@volexity.com": 95,
                "awalters@volexity.com": 3,
                "dave@superponible.com": 45,
                "acase@volexity.com": 120,
                "analyst@Analysts-MBP.lan": 25,
                "andrew@dfir.org": 9,
                "xabiugarte@users.noreply.github.com": 12,
                "yohannassouline@hotmail.fr": 3,
                "daniel.milnes@mwrinfosecurity.com": 4,
                "thebeanogamer@gmail.com": 1,
                "doomedraven@users.noreply.github.com": 7,
                "william.lin@epita.fr": 1,
                "hjung524@gmail.com": 1,
                "tamas@tklengyel.com": 1,
                "ilya@volexity.com": 1,
                "hanno.heinrichs@rwth-aachen.de": 2,
                "hr@sec.uni-passau.de": 1,
                "me@niklasbeierl.io": 1,
                "jan.lange97@gmx.net": 30,
                "matthewtressler10@gmail.com": 26,
                "59582863+mtressler@users.noreply.github.com": 5,
                "jxwenger@gmail.com": 11,
                "asaf.e@sygnia.co": 15,
                "steffikeene@Steffis-MacBook-Pro-2.local": 5,
                "gmoreira@gmail.com": 14,
                "cesare@localhost.localdomain": 8,
                "61626429+memoryforensics1@users.noreply.github.com": 18,
                "b38911@gmail.com": 6,
                "slyles1001@gmail.com": 1,
                "lyles6@llnl.gov": 1,
                "cstation@users.noreply.github.com": 4,
                "leohearts@leohearts.com": 1,
                "chop@quenda.net": 1,
                "dadokkio@gmail.com": 2,
                "atcuno@gmail.com": 3,
                "f-block@users.noreply.github.com": 6,
                "anthonyfey@gmail.com": 1,
                "fgomulka@MacBook-Air.local": 1,
                "gochaudh@microsoft.com": 1,
                "8147599+shu-tom@users.noreply.github.com": 1,
                "beierl09@ads.uni-passau.de": 1,
                "frank.gomulka@gmail.com": 5,
                "puntogtg@tiscali.it": 1,
                "stefanoderosa1999@gmail.com": 2,
                "ash.lynx.0707@gmail.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]