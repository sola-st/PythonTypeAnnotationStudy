[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 3612,
        "commit_year_dict": {
            "2018": 147,
            "2019": 1196,
            "2020": 1302,
            "2021": 967
        },
        "loc_year_edit": {
            "2018": 38696,
            "2019": 311950,
            "2020": 318761,
            "2021": 253055
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 450,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 6170,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2019": 66,
            "2020": 1854,
            "2021": 2167
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2019": 5,
            "2020": 752,
            "2021": 1012
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2019": 5,
            "2020": 148,
            "2021": 161
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 4087,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "str": 238,
            "mapping [text,any]": 2,
            "attribute(\n    value=attribute(\n        value=name(\n            value='tf',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='keras',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optimizers',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).optimizer": 3,
            "mapping [text,sequence [union [int,float,text]]]": 1,
            "iterator [dict [text,union [int,float,text]]]": 1,
            "pd.dataframe": 2,
            "text": 7,
            "bool": 224,
            "none": 27,
            "iterator [list [text]]": 1,
            "int": 459,
            "mapping [text,text]": 1,
            "optional [mapping [text,text]]": 2,
            "iterable [mapping [text,union [int,float,text]]]": 1,
            "any": 108,
            "tuple [any,int]": 8,
            "list [str]": 29,
            "optional [mapping [text,union [text,float,int,bool]]]": 1,
            "ganfnsandtypes": 4,
            "tff.type": 2,
            "tff_gans.ganfnsandtypes": 1,
            "jsonvalue": 2,
            "sequence [int]": 3,
            "sequence [selectionspec]": 1,
            "optional [sequence [str]]": 1,
            "anonymous_tuple.anonymoustuple": 2,
            "types.functiontype": 6,
            "inspect.signature": 4,
            "tuple [list [any],dict [str,any]]": 2,
            "sequence [any]": 4,
            "mapping [str,any]": 11,
            "optional [context_base]": 2,
            "context_base.context": 4,
            "computation_types.type": 180,
            "optional [bool]": 26,
            "optional [computation_types]": 40,
            "building_blocks.computationbuildingblock": 54,
            "callable [...,transformreturntype]": 1,
            "transformreturntype": 1,
            "callable [...,t]": 3,
            "t": 3,
            "dict [type [any],str]": 2,
            "building_blocks.reference": 5,
            "attribute(\n    value=name(\n        value='tf',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='data',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).dataset": 33,
            "iterable [tf]": 2,
            "mapping [str,int]": 3,
            "grpc.servicercontext": 23,
            "executor_pb2.executerequest": 2,
            "queue.queue": 2,
            "iterable [executor_pb2]": 4,
            "executor_pb2.createvaluerequest": 4,
            "executor_pb2.createvalueresponse": 2,
            "executor_pb2.createcallrequest": 2,
            "executor_pb2.createcallresponse": 2,
            "executor_pb2.createtuplerequest": 2,
            "executor_pb2.createtupleresponse": 2,
            "executor_pb2.createselectionrequest": 2,
            "executor_pb2.createselectionresponse": 2,
            "executor_pb2.computerequest": 4,
            "executor_pb2.computeresponse": 4,
            "executor_pb2.disposerequest": 2,
            "executor_pb2.disposeresponse": 2,
            "executor_base.executor": 35,
            "executor_pb2.valueref": 4,
            "cardinalitiestype": 12,
            "callable [...,executor_base]": 6,
            "executor_factory.executorfactory": 23,
            "callable [...,exception]": 12,
            "placement_literals.placementliteral": 9,
            "pb.computation": 58,
            "optional [str]": 52,
            "type ['computationbuildingblock']": 2,
            "'computationbuildingblock'": 2,
            "type ['reference']": 1,
            "'reference'": 1,
            "type ['selection']": 1,
            "'selection'": 1,
            "type ['tuple']": 1,
            "'tuple'": 1,
            "type ['call']": 1,
            "'call'": 1,
            "type ['lambda']": 1,
            "'lambda'": 1,
            "optional [any]": 3,
            "computationbuildingblock": 6,
            "type ['block']": 1,
            "iterable [typingtuple [str,computationbuildingblock]]": 1,
            "'block'": 1,
            "list [typingtuple [str,computationbuildingblock]]": 1,
            "type ['intrinsic']": 1,
            "'intrinsic'": 1,
            "type ['data']": 1,
            "'data'": 1,
            "type ['placement']": 1,
            "'placement'": 1,
            "iterable [list [str]]": 1,
            "context_stack_base.contextstack": 8,
            "federated_executor.federatedexecutor": 2,
            "runtime": 6,
            "transformation_utils.transformspec": 1,
            "type": 20,
            "list [executor_base]": 6,
            "evb.executorvalue": 10,
            "optional [evb]": 2,
            "optional [computedvalue]": 2,
            "tf.graph": 4,
            "optional ['computationcontext']": 2,
            "optional [dict [str,computedvalue]]": 2,
            "optional [dict [str,int]]": 2,
            "computedvalue": 11,
            "optional [computationcontext]": 2,
            "computationcontext": 2,
            "valueimpl": 4,
            "executorfactory": 1,
            "dict [str,any]": 18,
            "dict [str,float]": 1,
            "'valueimpl'": 6,
            "dict [building_blocks,set [str]]": 1,
            "set [str]": 7,
            "lambdaexecutorscope": 1,
            "'lambdaexecutor'": 1,
            "'lambdaexecutorvalue'": 2,
            "lambdavalueinner": 4,
            "lambdaexecutorvalue": 2,
            "executor_value_base.executorvalue": 60,
            "federating_executor.federatingexecutor": 5,
            "referenceresolvingexecutorscope": 8,
            "'referenceresolvingexecutor'": 1,
            "'referenceresolvingexecutorvalue'": 2,
            "referenceresolvingexecutorvalue": 9,
            "adapters.iterativeprocesspythonadapter": 1,
            "callable [...,tuple [list [tf],list [str]]]": 1,
            "callable [...,dict [str,float]]": 2,
            "attribute(\n    value=name(\n        value='tf',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='keras',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).model": 27,
            "dict [any,any]": 1,
            "tf.tensor": 40,
            "optional [tf]": 10,
            "optional [union [tf,str,float,int]]": 1,
            "union [list [maskable],maskable]": 1,
            "callable [...,tf]": 37,
            "optional [callable [...,dict [str,float]]]": 2,
            "union [int,str,slice]": 4,
            "callable [...,tuple [executor_base,list [sizing_executor]]]": 2,
            "list [sizing_executor]": 3,
            "tf.dtype": 5,
            "sizing_executor.sizeanddtypes": 2,
            "tuple [dict [any,sizing_executor],dict [any,sizing_executor],list [int],list [int]]": 1,
            "executor_factory.cardinalitiestype": 12,
            "tuple [executor_base,list [sizing_executor]]": 1,
            "sizeanddtypes": 2,
            "callable [...,concretefunction]": 2,
            "concretefunction": 2,
            "model_utils.modelweights": 1,
            "abstractset [str]": 1,
            "list [building_blocks]": 12,
            "float": 150,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulaggregatefn": 6,
            "iterable [any]": 1,
            "type [any]": 3,
            "list [tuple [str,any]]": 3,
            "computation_base.computation": 105,
            "computation_types.tensortype": 20,
            "pb.tensortype": 4,
            "tf.tensorshape": 5,
            "optional [pb]": 9,
            "optional [t]": 6,
            "optional [tuple [any,...]]": 4,
            "optional [dict [str,any]]": 4,
            "generator [t,traceresult,none]": 2,
            "contextmanager [none]": 2,
            "optional [none]": 2,
            "generator [none,traceresult,none]": 4,
            "optional [spanyields]": 10,
            "spanyields": 4,
            "tracingprovider": 2,
            "list [tracingprovider]": 2,
            "optional [asyncio]": 2,
            "tuple [str,str]": 2,
            "iterator [none]": 2,
            "mocktracingprovider": 2,
            "'_faketfmodule'": 1,
            "composing_executor.composingexecutor": 1,
            "callable [...,none]": 9,
            "optional [callable [...,bool]]": 3,
            "_typeortupleoftypes": 6,
            "callable [...,tuple [computation_types,bool]]": 1,
            "optional [int]": 101,
            "list [list [int]]": 3,
            "list [int]": 11,
            "tuple [building_blocks,list [list [int]]]": 1,
            "iterable [str]": 13,
            "'concreteclientdata'": 7,
            "'clientdata'": 3,
            "tuple ['clientdata','clientdata']": 2,
            "anonymoustuple": 1,
            "list [tuple [str,building_blocks]]": 2,
            "_modelconstructor": 7,
            "_encoderconstructor": 8,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulbroadcastfn": 1,
            "eb.executor": 1,
            "mutablemapping [str,any]": 1,
            "building_blocks.block": 1,
            "sequence [tuple [str,building_blocks]]": 1,
            "repackedblocklocalstype": 2,
            "tuple [building_blocks,bool]": 2,
            "optional [sequence [tf]]": 1,
            "optional [executor_factory]": 1,
            "optional [placement_literals]": 2,
            "unplacedexecutorfactory": 7,
            "sequence [executor_base]": 2,
            "'type'": 32,
            "tff.namedtupletype": 2,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).measuredprocess": 3,
            "computation_types.namedtupletype": 1,
            "callable [...,any]": 14,
            "callable": 2,
            "federatedcomposingstrategyvalue": 39,
            "dict [str,executor_base]": 2,
            "federatedresovlingstrategyvalue": 35,
            "'federatingexecutor'": 1,
            "optional [executor_value_base]": 2,
            "callable [...,federatingstrategy]": 1,
            "list [executor_value_base]": 2,
            "typingtype ['type']": 2,
            "_typepredicate": 2,
            "_disallowed": 1,
            "callable [...,model_lib]": 25,
            "optional [tff]": 7,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).iterativeprocess": 3,
            "union [model_lib,callable [...,model_lib]]": 2,
            "tff_core.namedtupletype": 1,
            "union [tff,tff]": 1,
            "dict [any,sizing_executor]": 4,
            "modelbuilder": 1,
            "lossbuilder": 1,
            "metricsbuilder": 1,
            "optional [clientweightfn]": 1,
            "fed_avg_schedule.federatedaveragingprocessadapter": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='learning',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).model": 9,
            "optional [callable [...,any]]": 5,
            "valuetype": 3,
            "optional [typingtype [any]]": 2,
            "typingtype [any]": 2,
            "iterable [tuple [optional [str],any]]": 1,
            "struct": 13,
            "list [any]": 2,
            "list [tuple [optional [str],any]]": 2,
            "iterator [tuple [optional [str],any]]": 1,
            "'structtype'": 2,
            "tff.computation": 2,
            "clientdata": 2,
            "mapping [str,str]": 2,
            "dict [typing [any],dict [any,any]]": 2,
            "optional [type]": 6,
            "tree_transformations.transformreturntype": 1,
            "union [floattensorlike]": 1,
            "floattensorlike": 3,
            "optional [list [str]]": 2,
            "pb.tensorflow": 1,
            "protoandtype": 1,
            "tuple [building_blocks,computation_types]": 1,
            "value_base.value": 2,
            "callable [...,tff]": 8,
            "optional [callable [...,tf]]": 3,
            "dict [str,int]": 3,
            "model_lib.model": 8,
            "optional [federatingexecutorfactory]": 1,
            "optional [sequence [executor_base]]": 3,
            "iterative_process.iterativeprocess": 7,
            "tuple [computation_types,...]": 2,
            "function_utils.polymorphicfunction": 1,
            "function_utils.concretefunction": 1,
            "callable [...,sequence [executor_base]]": 1,
            "callable [...,list [executor_base]]": 1,
            "_valuetype": 1,
            "aggregation_process.aggregationprocess": 35,
            "optional [tuple [int,int,int]]": 1,
            "sequence [sequence [int]]": 1,
            "tfvalue": 23,
            "partitionconfig": 2,
            "sequence [tfvalue]": 5,
            "sequence [tf]": 5,
            "partitionmetadata": 1,
            "list [tfvalue]": 1,
            "list [bool]": 1,
            "tuple [float,float]": 5,
            "factory.valuetype": 34,
            "executor_pb2.setcardinalitiesresponse": 1,
            "mapping [placement_literals,int]": 1,
            "tfp.quantileestimatorquery": 1,
            "factory.aggregationprocessfactory": 6,
            "optional [factory]": 20,
            "tuple [client_data,client_data]": 4,
            "client_data.clientdata": 22,
            "building_blocks.lambda": 16,
            "optional [dict [str,str]]": 1,
            "_arguments": 4,
            "callable [...,_arguments]": 2,
            "sizeinfo": 1,
            "optional [grpc]": 2,
            "optional [list [tuple [any,any]]]": 2,
            "collections.ordereddict": 5,
            "_typerelation": 1,
            "contextlib.abstractcontextmanager": 1,
            "estimationprocess": 1,
            "list [grpc]": 1,
            "optional [futures]": 1,
            "canonical_form.canonicalform": 1,
            "multiprocessing.queue": 1,
            "list [dict [str,str]]": 4,
            "list [tf]": 10,
            "tuple [clientdata,tf]": 7,
            "tuple [clientdata,tf,clientdata,tf]": 1,
            "clientsgd": 1,
            "dict [str,callable [...,value_impl]]": 1,
            "'computationimpl'": 2,
            "tfp.dpquery": 2,
            "intrinsic_defs.intrinsicdef": 1,
            "optional [aggregationkind]": 1,
            "optional [broadcastkind]": 1,
            "aggregationkind": 1,
            "broadcastkind": 1,
            "optional [intrinsicdef]": 1,
            "_buildingblockpredicate": 3,
            "callable [...,bool]": 3,
            "estimation_process.estimationprocess": 5,
            "union [float,estimation_process]": 9,
            "tuple [list [tf],list [dict [str,tf]]]": 1,
            "federated_resolving_strategy.federatedresolvingstrategyvalue": 4,
            "optional [quantileestimationconfig]": 1,
            "optional [union [float,quantileestimationconfig]]": 1,
            "optional [clippingconfig]": 1,
            "optional [float]": 6,
            "optional [zeroingconfig]": 1,
            "optional [union [clippingconfig,dpconfig]]": 1,
            "quantile_estimation.privatequantileestimationprocess": 1,
            "clipping_factory.zeroingfactory": 1,
            "union [float,quantileestimationconfig]": 1,
            "clipping_factory.clippingfactory": 1,
            "dp_factory.differentiallyprivatefactory": 1,
            "union [factory,factory]": 1,
            "adaptivezeroingconfig": 1,
            "aggregationfactory": 2,
            "clippingconfig": 2,
            "differentialprivacyconfig": 1,
            "list [dict [str,any]]": 1,
            "union [sequence [str],set [str]]": 1,
            "tuple [sequence [str],list [dict [str,any]]]": 2,
            "executor_pb2.clearexecutorresponse": 1,
            "sequence [t]": 1,
            "callable [...,list [t]]": 1,
            "callable [...,list [str]]": 1,
            "thresholdesttype": 2,
            "optional [thresholdesttype]": 2,
            "computation_types.functiontype": 4,
            "xla_client.client": 3,
            "_aggregationfactory": 4,
            "tuple [tf,tf]": 6,
            "union [tf,sequence [int]]": 3,
            "tuple [int,int,int]": 19,
            "callable [...,tuple [tf,tf]]": 3,
            "tuple [int,int,int,int]": 3,
            "factory.unweightedaggregationfactory": 7,
            "factory.aggregationfactory": 17,
            "callable [...,computation_base]": 8,
            "union [types,types]": 1,
            "structure.struct": 1,
            "grpc.channelconnectivity": 1,
            "residualblock": 2,
            "optional [list [int]]": 12,
            "tuple [int,int]": 6,
            "normlayer": 12,
            "callable [...,building_blocks]": 1,
            "dict [str,callable [...,building_blocks]]": 2,
            "computation_types.sequencetype": 10,
            "_sequence": 2,
            "sequence [str]": 13,
            "list [contextlib]": 4,
            "subprocess.popen": 3,
            "iterator [str]": 3,
            "bytes": 5,
            "local_computation_factory_base.computationprotoandtype": 3,
            "computationprotoandtype": 11,
            "local_computation_factory_base.localcomputationfactory": 7,
            "callable [...,callable [...,any]]": 2,
            "optional [measured_process]": 2,
            "'preprocessclientdata'": 1,
            "filecheckpointmanager": 1,
            "validationfntype": 1,
            "optional [filecheckpointmanager]": 3,
            "optional [list [metricsmanager]]": 4,
            "optional [validationfntype]": 3,
            "metricstype": 2,
            "optional [callable [...,tuple [any,int]]]": 1,
            "optional [callable [...,tuple [any,metricstype]]]": 1,
            "tuple [any,metricstype]": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='framework',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).executioncontext": 1,
            "abstractset [placements]": 1,
            "fileperuserclientdata": 1,
            "'preprocessfileperuserclientdata'": 1,
            "\"preprocesssqlclientdata\"": 1,
            "building_blocks.call": 6,
            "placements.placementliteral": 3,
            "value_impl.value": 1,
            "value": 2,
            "federatedresolvingstrategyvalue": 4,
            "serializableclientdata": 3,
            "'preprocessserializableclientdata'": 3,
            "typerelation": 1,
            "_possiblydisallowedchildren": 1,
            "pb.data": 1,
            "data_backend_base.databackend": 1,
            "client_weight_lib.clientweighttype": 3,
            "optional [client_weight_lib]": 4,
            "serializable_client_data.serializableclientdata": 1,
            "optional [callable [...,list [str]]]": 1,
            "optional [callable [...,str]]": 1,
            "optional [sequence [int]]": 1,
            "optional [callable [...,dict [str,any]]]": 3,
            "savemode": 1,
            "'struct'": 2,
            "centralorclientdata": 3,
            "optional [preprocessfntype]": 5,
            "optional [centralorclientdata]": 2,
            "distributors.distributionprocess": 3,
            "client_works.clientworkprocess": 8,
            "finalizers.finalizerprocess": 3,
            "learning_process.learningprocess": 9,
            "union [str,digitrecognitionmodel]": 5,
            "client_spec.clientspec": 30,
            "optional [client_spec]": 18,
            "tuple [_preprocessfn,_preprocessfn]": 3,
            "tuple [task_data,_modelfn]": 7,
            "model.model": 12,
            "measured_process.measuredprocess": 2,
            "task_data.baselinetaskdatasets": 1,
            "callable [...,model]": 1,
            "union [str,resnetmodel]": 5,
            "batchoutput": 1,
            "sequence [executor_bindings]": 2,
            "mapping [placements,int]": 10,
            "executor_bindings.executor": 7,
            "_executor_bindings.executor": 5,
            "grpcchannel": 2,
            "computation_pb2.computation": 2,
            "serialization_bindings.value": 18,
            "union [type_conversions]": 2,
            "computation_types.structtype": 11,
            "computation_types.federatedtype": 13,
            "optional [serialization_bindings]": 2,
            "serialization_bindings.sequence": 2,
            "collection [serialization_bindings]": 2,
            "_serializereturntype": 2,
            "_deserializereturntype": 12,
            "tuple [computation_types,bool]": 3,
            "tf.tensorspec": 2,
            "list [serialization_bindings]": 2,
            "model.batchoutput": 1,
            "baseline_task.baselinetask": 11,
            "modelfn": 4,
            "optimizerfn": 7,
            "lossfn": 2,
            "optional [metricsfn]": 2,
            "reconstruction_utils.datasetsplitfn": 1,
            "aggregation_process_lib.aggregationprocess": 3,
            "measured_process_lib.measuredprocess": 6,
            "optional [reconstruction_utils]": 2,
            "optional [measured_process_lib]": 2,
            "optional [aggregationfactory]": 1,
            "iterative_process_lib.iterativeprocess": 1,
            "union [optimizer_abc,callable [...,tf]]": 3,
            "clientfedavg": 1,
            "training_process.modelfn": 1,
            "training_process.lossfn": 1,
            "optional [training_process]": 1,
            "training_process.optimizerfn": 1,
            "optimizer_base.optimizer": 6,
            "union [cd,cd]": 1,
            "building_blocks.compiledcomputation": 1,
            "union [str,characterrecognitionmodel]": 3,
            "dict [int,any]": 1,
            "inaturalistsplit": 5,
            "dict [str,str]": 4,
            "bytestring": 2,
            "attribute(\n    value=name(\n        value='tf',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='train',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).example": 1,
            "dict [str,tf]": 1,
            "dict [str,list [_namedbinding]]": 4,
            "list [_namedbinding]": 6,
            "dict [str,set [str]]": 2,
            "_intrinsicdependencies": 2,
            "list [_mergedintrinsic]": 2,
            "tuple [building_blocks,building_blocks]": 2,
            "optional [union [int,sequence [int]]]": 1,
            "_sgd": 1,
            "union [callable [...,tf],optimizer]": 1,
            "tf.raggedtensor": 1,
            "union [tff,'kerasmodelwrapper']": 2,
            "union [tff,modelweights]": 2,
            "building_blocks.intrinsic": 1,
            "callable [...,collection [tf]]": 1,
            "collection [collection [tf]]": 1,
            "callable [...,optimizer_base]": 1,
            "_partitioningvalue": 2,
            "union [path,list [path]]": 2,
            "path": 2,
            "tf.module": 3,
            "mergeablecompform": 5,
            "async_execution_context.asyncexecutioncontext": 3,
            "mergeablecompexecutioncontextvalue": 3,
            "sequence [async_execution_context]": 1,
            "sequence [executor_factory]": 3,
            "forms.mapreduceform": 1,
            "collection [tf]": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='learning',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).batchoutput": 1,
            "modelweights": 4,
            "functionalmodel": 2,
            "model_lib.batchoutput": 2,
            "tuple [tf,...]": 3,
            "optional [dict [str,union [int,float]]]": 2,
            "functional.functionalmodel": 2,
            "union [optimizer_base,callable [...,tf]]": 15,
            "computation_impl.computationimpl": 2,
            "optional [tuple [any,int]]": 2,
            "union [float,int]": 2,
            "exception": 1,
            "optional [distributors]": 6,
            "optional [computation_base]": 1,
            "optional [program_state_manager_lib]": 1,
            "optional [iterable [metrics_manager_lib]]": 1,
            "tuple [any,mapping [str,any]]": 1,
            "optional [list [callable [...,tf]]]": 2,
            "callable [...,float]": 2,
            "callable [...,tfforkerasoptimizer]": 3,
            "hashable": 1,
            "dict [hashable,any]": 1,
            "union [str,os]": 4,
            "building_block_factory.path": 2,
            "computation_impl.concretecomputation": 3,
            "mergeable_comp_execution_context.mergeablecompform": 2,
            "union [tf,callable [...,tf]]": 1,
            "kerasmetricfinalizer": 1,
            "ordereddict [str,union [tf,list [tf]]]": 2,
            "ordereddict [str,callable [...,tf]]": 4,
            "ordereddict [str,list [tf]]": 3,
            "tuple [computation_types,pb]": 2,
            "iterable [tuple [str,any]]": 1,
            "optional [type [any]]": 1,
            "measuredprocess": 2,
            "union [int,np]": 1,
            "'concretecomputation'": 2,
            "optional [mapping [int,any]]": 1,
            "union [np,np]": 4,
            "optional [callable [...,mergeablecompform]]": 1,
            "ordereddict [str,any]": 5,
            "ordereddict [str,callable [...,any]]": 4,
            "list [capability]": 1,
            "federateddatasourceiterator": 1,
            "_adagrad": 1,
            "optimizer.optimizer": 2,
            "_adam": 1,
            "csvsavemode": 1,
            "iterable [mapping [str,any]]": 2,
            "tuple [list [str],list [dict [str,any]]]": 2,
            "os.pathlike": 2,
            "model_lib.metricfinalizerstype": 1,
            "computation_types.structwithpythontype": 1,
            "union [collections,tuple [any,...]]": 1,
            "optional [building_blocks]": 1,
            "file_release_manager_lib.csvsavemode": 1,
            "factory.weightedaggregationfactory": 1,
            "client_weight_lib.clientweighting": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 1769,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "str": 106,
            "mapping [text,any]": 1,
            "attribute(\n    value=attribute(\n        value=name(\n            value='tf',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='keras',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optimizers',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).optimizer": 2,
            "optional [dict [text,union [int,float,text]]]": 1,
            "sequence [selectionspec]": 1,
            "optional [sequence [str]]": 1,
            "runtime": 6,
            "federated_executor.federatedexecutor": 2,
            "cardinalitiestype": 9,
            "callable [...,executor_base]": 5,
            "executor_base.executor": 11,
            "grpc.servicercontext": 12,
            "executor_pb2.executerequest": 2,
            "queue.queue": 2,
            "iterable [executor_pb2]": 4,
            "executor_pb2.createvaluerequest": 1,
            "executor_pb2.createcallrequest": 1,
            "executor_pb2.createtuplerequest": 1,
            "executor_pb2.createselectionrequest": 1,
            "executor_pb2.computerequest": 2,
            "executor_pb2.disposerequest": 1,
            "executor_pb2.createvalueresponse": 1,
            "executor_pb2.createcallresponse": 1,
            "executor_pb2.createtupleresponse": 1,
            "executor_pb2.createselectionresponse": 1,
            "executor_pb2.computeresponse": 2,
            "executor_pb2.disposeresponse": 1,
            "list [executor_base]": 3,
            "pb.computation": 10,
            "lambdaexecutorscope": 1,
            "'lambdaexecutor'": 1,
            "'lambdaexecutorvalue'": 2,
            "lambdavalueinner": 2,
            "lambdaexecutorvalue": 2,
            "set [str]": 3,
            "executor_value_base.executorvalue": 5,
            "executor_pb2.valueref": 2,
            "executor_factory.executorfactory": 11,
            "int": 250,
            "bool": 94,
            "tf.tensor": 23,
            "optional [tf]": 5,
            "optional [union [tf,str,float,int]]": 1,
            "union [list [maskable],maskable]": 1,
            "dict [str,any]": 9,
            "any": 41,
            "none": 13,
            "optional [t]": 3,
            "optional [tuple [any,...]]": 2,
            "optional [dict [str,any]]": 2,
            "generator [t,traceresult,none]": 1,
            "contextmanager [none]": 1,
            "optional [none]": 1,
            "generator [none,traceresult,none]": 2,
            "optional [spanyields]": 5,
            "spanyields": 2,
            "tracingprovider": 1,
            "list [tracingprovider]": 1,
            "optional [asyncio]": 1,
            "tuple [str,str]": 1,
            "iterator [none]": 1,
            "mocktracingprovider": 1,
            "computation_types.tensortype": 4,
            "pb.tensortype": 2,
            "optional [pb]": 6,
            "tf.tensorshape": 3,
            "optional [computation_types]": 15,
            "callable [...,t]": 2,
            "t": 2,
            "dict [type [any],str]": 2,
            "unplacedexecutorfactory": 5,
            "callable [...,dict [str,float]]": 1,
            "callable": 1,
            "callable [...,none]": 7,
            "_typeortupleoftypes": 3,
            "computation_types.type": 46,
            "optional [int]": 91,
            "optional [bool]": 15,
            "list [str]": 13,
            "attribute(\n    value=name(\n        value='tf',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='keras',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).model": 12,
            "callable [...,any]": 2,
            "computation_base.computation": 27,
            "union [int,str,slice]": 2,
            "anonymoustuple": 1,
            "attribute(\n    value=name(\n        value='tf',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='data',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).dataset": 24,
            "jsonvalue": 2,
            "optional [str]": 29,
            "_disallowed": 1,
            "building_blocks.computationbuildingblock": 24,
            "building_blocks.reference": 2,
            "list [tuple [str,building_blocks]]": 1,
            "context_stack_base.contextstack": 7,
            "tuple [building_blocks,computation_types]": 2,
            "tf.dtype": 3,
            "protoandtype": 1,
            "executor_factory.cardinalitiestype": 2,
            "optional [computedvalue]": 2,
            "tf.graph": 2,
            "optional ['computationcontext']": 2,
            "optional [dict [str,computedvalue]]": 2,
            "optional [dict [str,int]]": 2,
            "placement_literals.placementliteral": 3,
            "computedvalue": 11,
            "optional [computationcontext]": 2,
            "computationcontext": 2,
            "optional [sequence [executor_base]]": 1,
            "optional [tff]": 3,
            "optional [computation_utils]": 2,
            "_encoderconstructor": 6,
            "_modelconstructor": 6,
            "computation_utils.statefulbroadcastfn": 1,
            "computation_utils.statefulaggregatefn": 2,
            "dict [any,sizing_executor]": 2,
            "list [int]": 7,
            "callable [...,tuple [executor_base,list [sizing_executor]]]": 1,
            "list [sizing_executor]": 1,
            "sizing_executor.sizeanddtypes": 1,
            "executorfactory": 1,
            "sizeinfo": 1,
            "float": 79,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulaggregatefn": 1,
            "function_utils.concretefunction": 1,
            "tuple [computation_types,...]": 1,
            "callable [...,tff]": 8,
            "optional [callable [...,tf]]": 3,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).iterativeprocess": 3,
            "ganfnsandtypes": 4,
            "tff.type": 2,
            "tff_gans.ganfnsandtypes": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='learning',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).model": 7,
            "modelbuilder": 1,
            "lossbuilder": 1,
            "metricsbuilder": 1,
            "optional [clientweightfn]": 1,
            "dict [any,any]": 1,
            "union [floattensorlike]": 1,
            "floattensorlike": 3,
            "optional [list [str]]": 2,
            "sequence [sequence [int]]": 1,
            "sequence [int]": 2,
            "tfvalue": 23,
            "partitionconfig": 2,
            "sequence [tfvalue]": 5,
            "sequence [tf]": 2,
            "partitionmetadata": 1,
            "list [tfvalue]": 1,
            "list [bool]": 1,
            "tuple [float,float]": 2,
            "collections.ordereddict": 2,
            "callable [...,tf]": 25,
            "union [tff,tff]": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).measuredprocess": 1,
            "tuple [any,int]": 5,
            "optional [tuple [int,int,int]]": 1,
            "dict [str,float]": 1,
            "pd.dataframe": 2,
            "mapping [str,sequence [union [int,float,str]]]": 1,
            "optional [mapping [str,union [str,float,int,bool]]]": 1,
            "iterable [str]": 10,
            "mapping [str,str]": 2,
            "optional [mapping [str,str]]": 2,
            "iterable [mapping [str,union [int,float,str]]]": 1,
            "iterator [dict [str,union [int,float,str]]]": 1,
            "iterator [list [str]]": 1,
            "callable [...,exception]": 6,
            "building_blocks.lambda": 8,
            "iterative_process.iterativeprocess": 2,
            "estimationprocess": 1,
            "abstractset [str]": 1,
            "union [float,estimation_process]": 6,
            "factory.aggregationprocessfactory": 1,
            "factory.valuetype": 17,
            "aggregation_process.aggregationprocess": 15,
            "factory.weightedaggregationfactory": 2,
            "optional [quantileestimationconfig]": 1,
            "optional [union [float,quantileestimationconfig]]": 1,
            "optional [clippingconfig]": 1,
            "optional [float]": 2,
            "clipping_factory.zeroingfactory": 1,
            "union [float,quantileestimationconfig]": 1,
            "clipping_factory.clippingfactory": 1,
            "dp_factory.differentiallyprivatefactory": 1,
            "union [factory,factory]": 1,
            "adaptivezeroingconfig": 1,
            "clippingconfig": 2,
            "aggregationfactory": 2,
            "differentialprivacyconfig": 1,
            "optional [union [clippingconfig,differentialprivacyconfig]]": 1,
            "estimation_process.estimationprocess": 3,
            "_innerfactorytype": 2,
            "union [tf,sequence [int]]": 2,
            "tuple [int,int,int]": 11,
            "callable [...,tuple [tf,tf]]": 2,
            "tuple [client_data,client_data]": 3,
            "tuple [tf,tf]": 5,
            "tuple [int,int,int,int]": 2,
            "'computationimpl'": 1,
            "union [types,types]": 1,
            "inspect.signature": 2,
            "sequence [any]": 2,
            "mapping [str,any]": 3,
            "optional [context_base]": 1,
            "context_base.context": 3,
            "types.functiontype": 2,
            "callable [...,concretefunction]": 1,
            "tuple [list [any],dict [str,any]]": 1,
            "structure.struct": 1,
            "_arguments": 2,
            "callable [...,_arguments]": 1,
            "concretefunction": 1,
            "dict [str,callable [...,value_impl]]": 1,
            "computation_types.structtype": 7,
            "'valueimpl'": 3,
            "value_base.value": 1,
            "valueimpl": 2,
            "valuetype": 1,
            "sequence [str]": 4,
            "list [contextlib]": 1,
            "subprocess.popen": 1,
            "tfp.dpquery": 1,
            "optional [factory]": 6,
            "factory.unweightedaggregationfactory": 2,
            "factory.aggregationfactory": 6,
            "callable [...,computation_base]": 4,
            "thresholdesttype": 1,
            "optional [thresholdesttype]": 1,
            "tree_transformations.transformreturntype": 1,
            "computation_types.functiontype": 2,
            "xla_client.client": 2,
            "iterator [str]": 1,
            "building_blocks.call": 3,
            "federatedcomposingstrategyvalue": 4,
            "federatedresolvingstrategyvalue": 3,
            "'clientdata'": 1,
            "clientdata": 1,
            "iterable [tf]": 1,
            "'preprocessclientdata'": 1,
            "'concreteclientdata'": 5,
            "tuple ['clientdata','clientdata']": 1,
            "bytes": 2,
            "client_data.clientdata": 5,
            "callable [...,callable [...,any]]": 1,
            "abstractset [placement_literals]": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='framework',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).executioncontext": 1,
            "model_utils.modelweights": 1,
            "measured_process.measuredprocess": 5,
            "fileperuserclientdata": 1,
            "'preprocessfileperuserclientdata'": 1,
            "\"preprocesssqlclientdata\"": 1,
            "typingtype ['type']": 1,
            "'type'": 16,
            "typerelation": 1,
            "dict [typing [any],dict [any,any]]": 1,
            "'structtype'": 1,
            "type": 9,
            "optional [type]": 3,
            "optional [typingtype [any]]": 1,
            "typingtype [any]": 1,
            "_possiblydisallowedchildren": 1,
            "callable [...,list [str]]": 1,
            "optional [measured_process]": 2,
            "serializableclientdata": 3,
            "'preprocessserializableclientdata'": 3,
            "client_spec.clientspec": 11,
            "optional [client_spec]": 9,
            "tuple [_preprocessfn,_preprocessfn]": 3,
            "tuple [task_data,_modelfn]": 2,
            "model.model": 6,
            "union [str,resnetmodel]": 2,
            "residualblock": 1,
            "optional [list [int]]": 8,
            "tuple [int,int]": 2,
            "normlayer": 6,
            "union [str,digitrecognitionmodel]": 5,
            "baseline_task.baselinetask": 4,
            "sequence [executor_bindings]": 1,
            "mapping [placements,int]": 5,
            "executor_bindings.executor": 1,
            "_executor_bindings.executor": 5,
            "grpcchannel": 1,
            "measured_process_lib.measuredprocess": 1,
            "optional [callable [...,any]]": 2,
            "list [tf]": 1,
            "tuple [clientdata,tf]": 1,
            "federated_resolving_strategy.federatedresolvingstrategyvalue": 4,
            "federating_executor.federatingexecutor": 1,
            "mapping [str,int]": 1,
            "computation_pb2.computation": 1,
            "serialization_bindings.value": 9,
            "union [type_conversions]": 1,
            "computation_types.sequencetype": 2,
            "computation_types.federatedtype": 2,
            "optional [serialization_bindings]": 1,
            "serialization_bindings.sequence": 1,
            "collection [serialization_bindings]": 1,
            "_serializereturntype": 1,
            "_deserializereturntype": 6,
            "tuple [computation_types,bool]": 1,
            "tf.tensorspec": 1,
            "list [serialization_bindings]": 1,
            "model_lib.model": 1,
            "union [optimizer_abc,callable [...,tf]]": 3,
            "client_weight_lib.clientweighttype": 1,
            "callable [...,model_lib]": 8,
            "optional [client_weight_lib]": 1,
            "clientfedavg": 1,
            "optional [union [int,sequence [int]]]": 2,
            "tuple [asyncio,bool]": 1,
            "callable [...,dict [str,any]]": 1,
            "union [tff,'kerasmodelwrapper']": 1,
            "union [tff,modelweights]": 1,
            "optional [tuple [any,int]]": 1,
            "dict [str,list [_namedbinding]]": 2,
            "list [_namedbinding]": 3,
            "dict [str,set [str]]": 1,
            "list [building_blocks]": 3,
            "_intrinsicdependencies": 1,
            "list [_mergedintrinsic]": 1,
            "tuple [building_blocks,building_blocks]": 1,
            "union [path,list [path]]": 1,
            "path": 1,
            "dict [int,any]": 1,
            "tf.module": 1,
            "union [np,np]": 2,
            "ordereddict [str,any]": 4,
            "ordereddict [str,callable [...,any]]": 3,
            "optimizer_base.optimizer": 4,
            "distributors.distributionprocess": 2,
            "client_works.clientworkprocess": 3,
            "finalizers.finalizerprocess": 2,
            "learning_process.learningprocess": 3,
            "union [optimizer_base,callable [...,tf]]": 5,
            "placements.placementliteral": 2,
            "computation_impl.concretecomputation": 3,
            "list [list [int]]": 1,
            "tuple [building_blocks,list [list [int]]]": 1,
            "file_release_manager_lib.csvsavemode": 1,
            "optional [distributors]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 314,
        "typeChanged_dict_var": {},
        "typeChanged_dict_arg": {
            "str -> text": 2,
            "mapping [text,any] -> optional [dict [text,union [int,float,text]]]": 1,
            "text -> str": 8,
            "mapping [text,sequence [union [int,float,text]]] -> mapping [str,sequence [union [int,float,str]]]": 1,
            "optional [mapping [text,union [text,float,int,bool]]] -> optional [mapping [str,union [str,float,int,bool]]]": 1,
            "mapping [text,text] -> mapping [str,str]": 1,
            "optional [mapping [text,text]] -> optional [mapping [str,str]]": 2,
            "iterable [mapping [text,union [int,float,text]]] -> iterable [mapping [str,union [int,float,str]]]": 1,
            "callable [...,tuple [list [tf],list [str]]] -> callable [...,list [tf]]": 1,
            "types.functiontype -> union [types,types]": 1,
            "optional [any] -> optional [computation_types]": 1,
            "int -> optional [int]": 8,
            "optional [str] -> optional [tf]": 1,
            "optional [callable [...,bool]] -> _typepredicate": 1,
            "computation_types.type -> computation_types.namedtupletype": 1,
            "federatedresovlingstrategyvalue -> federatedresolvingstrategyvalue": 17,
            "type ['tuple'] -> type ['struct']": 1,
            "executor_pb2.createtuplerequest -> executor_pb2.createstructrequest": 1,
            "computation_types.namedtupletype -> computation_types.structtype": 2,
            "tff.namedtupletype -> tff.structtype": 2,
            "iterable [typingtuple [str,computationbuildingblock]] -> iterable [tuple [str,computationbuildingblock]]": 1,
            "tff.structtype -> computation_types.structtype": 2,
            "optional [tff] -> optional [computation_utils]": 2,
            "optional [tff] -> optional [measured_process]": 2,
            "optional [federatingexecutorfactory] -> federatingexecutorfactory": 1,
            "_valuetype -> valuetype": 1,
            "executor_pb2.createvaluerequest -> executor_pb2.setcardinalitiesrequest": 1,
            "optional [callable [...,bool]] -> optional [_buildingblockpredicate]": 1,
            "optional [bool] -> bool": 1,
            "_typerelation -> typerelation": 1,
            "factory.aggregationprocessfactory -> _innerfactorytype": 2,
            "optional [factory] -> optional [_innerfactorytype]": 2,
            "factory.aggregationprocessfactory -> factory.unweightedaggregationfactory": 1,
            "optional [zeroingconfig] -> optional [adaptivezeroingconfig]": 1,
            "optional [union [clippingconfig,dpconfig]] -> optional [union [clippingconfig,differentialprivacyconfig]]": 1,
            "federatingexecutorfactory -> executor_factory.executorfactory": 1,
            "executor_pb2.createvaluerequest -> executor_pb2.clearexecutorrequest": 1,
            "optional [_innerfactorytype] -> optional [factory]": 2,
            "aggregationfactory -> _aggregationfactory": 1,
            "optional [adaptivezeroingconfig] -> bool": 1,
            "_aggregationfactory -> factory.aggregationfactory": 2,
            "dict [str,any] -> mapping [str,any]": 2,
            "optional [int] -> int": 1,
            "callable [...,tf] -> callable [...,any]": 1,
            "placement_literals.placementliteral -> placements.placementliteral": 6,
            "optional [placement_literals] -> optional [placements]": 2,
            "mapping [placement_literals,int] -> mapping [placements,int]": 1,
            "'valueimpl' -> 'value'": 3,
            "optional [callable [...,dict [str,any]]] -> callable [...,dict [str,any]]": 1,
            "serializable_client_data.serializableclientdata -> client_data.serializableclientdata": 1,
            "client_spec.clientspec -> optional [client_spec]": 3,
            "optional [int] -> optional [union [int,sequence [int]]]": 4,
            "client_data.serializableclientdata -> client_data.clientdata": 2,
            "client_data.clientdata -> client_data.serializableclientdata": 1,
            "callable [...,tf] -> union [optimizer_base,callable [...,tf]]": 1,
            "type -> any": 2,
            "computation_types.structtype -> computation_types.type": 1,
            "computation_base.computation -> computation_impl.computationimpl": 8,
            "callable [...,concretefunction] -> callable [...,computation_base]": 1,
            "computation_impl.computationimpl -> computation_impl.concretecomputation": 10,
            "'computationimpl' -> 'concretecomputation'": 1,
            "computation_types.type -> computation_types.federatedtype": 1,
            "str -> union [str,os]": 2,
            "building_blocks.computationbuildingblock -> building_blocks.lambda": 1,
            "optional [int] -> any": 1,
            "optional [iterable [metrics_manager_lib]] -> optional [iterable [release_manager_lib]]": 1,
            "mergeablecompexecutioncontextvalue -> optional [mergeablecompexecutioncontextvalue]": 2,
            "mergeablecompform -> union [mergeablecompform,computation_base]": 1,
            "optional [mergeablecompexecutioncontextvalue] -> optional [any]": 1,
            "optional [list [metricsmanager]] -> optional [iterable [release_manager_lib]]": 1,
            "computation_base.computation -> callable [...,metricstype]": 1,
            "optional [computation_base] -> optional [callable [...,metricstype]]": 1
        },
        "typeChanged_dict_ret": {
            "none -> any": 2,
            "iterator [dict [text,union [int,float,text]]] -> iterator [dict [str,union [int,float,str]]]": 1,
            "iterator [list [text]] -> iterator [list [str]]": 1,
            "text -> str": 1,
            "none -> tuple [any,int]": 2,
            "tuple [any,int] -> none": 1,
            "building_blocks.computationbuildingblock -> tuple [building_blocks,computation_types]": 1,
            "type -> bool": 1,
            "tuple [executor_base,list [sizing_executor]] -> executor_base.executor": 1,
            "composing_executor.composingexecutor -> federating_executor.federatingexecutor": 1,
            "int -> bool": 2,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulaggregatefn -> attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).measuredprocess": 1,
            "federatedresovlingstrategyvalue -> federatedresolvingstrategyvalue": 18,
            "tuple [dict [any,sizing_executor],dict [any,sizing_executor],list [int],list [int]] -> sizeinfo": 1,
            "tuple [building_blocks,bool] -> transformation_utils.transformreturntype": 1,
            "'tuple' -> 'struct'": 1,
            "executor_pb2.createtupleresponse -> executor_pb2.createstructresponse": 1,
            "anonymous_tuple.anonymoustuple -> structure.struct": 1,
            "tff_core.namedtupletype -> tff_core.structtype": 1,
            "'concreteclientdata' -> 'preprocessclientdata'": 1,
            "list [typingtuple [str,computationbuildingblock]] -> list [tuple [str,computationbuildingblock]]": 1,
            "str -> _possiblydisallowedchildren": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulbroadcastfn -> computation_utils.statefulbroadcastfn": 1,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).measuredprocess -> measured_process.measuredprocess": 3,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulaggregatefn -> computation_utils.statefulaggregatefn": 2,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='utils',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).statefulaggregatefn -> measured_process.measuredprocess": 2,
            "attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).iterativeprocess -> iterative_process.iterativeprocess": 1,
            "tff_core.structtype -> computation_types.structtype": 1,
            "tff.computation -> computation_base.computation": 1,
            "pb.computation -> protoandtype": 8,
            "dict [building_blocks,set [str]] -> buildingblockkeyedmapping": 1,
            "fed_avg_schedule.federatedaveragingprocessadapter -> attribute(\n    value=name(\n        value='tff',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='templates',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).iterativeprocess": 1,
            "str -> collections.ordereddict": 1,
            "iterative_process.iterativeprocess -> computation_base.computation": 1,
            "buildingblockkeyedmapping -> dict [building_blocks,set [str]]": 1,
            "callable [...,tf] -> collections.ordereddict": 1,
            "function_utils.polymorphicfunction -> function_utils.concretefunction": 1,
            "canonical_form.canonicalform -> forms.canonicalform": 1,
            "list [tuple [optional [str],any]] -> list [optional [str]]": 1,
            "factory.aggregationprocessfactory -> factory.weightedaggregationfactory": 2,
            "_arguments -> _args": 2,
            "_args -> _arguments": 2,
            "float -> aggregationfactory": 2,
            "float -> dp_factory.differentiallyprivatefactory": 1,
            "quantile_estimation.privatequantileestimationprocess -> aggregationfactory": 1,
            "tuple [any,int] -> tuple [any,union [int,none]]": 1,
            "aggregationfactory -> _aggregationfactory": 1,
            "aggregationfactory -> factory.weightedaggregationfactory": 1,
            "dp_factory.differentiallyprivatefactory -> factory.unweightedaggregationfactory": 1,
            "factory.weightedaggregationfactory -> _aggregationfactory": 1,
            "_aggregationfactory -> factory.aggregationfactory": 2,
            "_aggregationfactory -> factory.weightedaggregationfactory": 3,
            "executor_factory.executorfactory -> tuple [asyncio,bool]": 1,
            "building_blocks.call -> building_blocks.lambda": 1,
            "dict [str,any] -> none": 2,
            "str -> none": 1,
            "pb.computation -> local_computation_factory_base.computationprotoandtype": 1,
            "pb.computation -> computationprotoandtype": 1,
            "protoandtype -> computationprotoandtype": 8,
            "factory.weightedaggregationfactory -> factory.aggregationfactory": 3,
            "value_base.value -> value": 1,
            "valueimpl -> value": 2,
            "forms.canonicalform -> forms.mapreduceform": 1,
            "building_blocks.call -> building_blocks.compiledcomputation": 1,
            "tuple [task_data,_modelfn] -> baseline_task.baselinetask": 5,
            "computation_base.computation -> callable [...,tf]": 4,
            "list [dict [str,str]] -> list [tf]": 1,
            "'preprocessclientdata' -> 'clientdata'": 2,
            "'concreteclientdata' -> 'clientdata'": 2,
            "union [cd,cd] -> cd.concreteclientdata": 2,
            "'clientdata' -> 'preprocessclientdata'": 1,
            "'clientdata' -> 'concreteclientdata'": 1,
            "cd.concreteclientdata -> union [cd,cd]": 1,
            "attribute(\n    value=attribute(\n        value=name(\n            value='tf',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='keras',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optimizers',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).optimizer -> optimizer.optimizer": 1,
            "tuple [int,int] -> int": 1,
            "type -> federatedtype": 2,
            "computation_base.computation -> computation_impl.computationimpl": 4,
            "concretefunction -> computation_base.computation": 1,
            "function_utils.concretefunction -> computation_impl.computationimpl": 1,
            "computation_impl.computationimpl -> computation_impl.concretecomputation": 5,
            "computation_base.computation -> dict [str,_singlemetricfinalizertype]": 1,
            "model_lib.model -> computation_base.computation": 1,
            "iterator [str] -> building_blocks.lambda": 1,
            "dict [str,_singlemetricfinalizertype] -> dict [str,finalizer]": 1,
            "list [tuple [str,any]] -> dict [str,any]": 1,
            "any -> union [np,np]": 1,
            "mergeablecompexecutioncontextvalue -> any": 1,
            "optional [tuple [any,int]] -> tuple [any,int]": 1,
            "dict [hashable,any] -> ordereddict [hashable,any]": 1,
            "dict [str,any] -> ordereddict [str,any]": 1,
            "_adagrad -> optimizer.optimizer": 1,
            "_adam -> optimizer.optimizer": 1,
            "_sgd -> optimizer.optimizer": 1,
            "ordereddict [str,callable [...,any]] -> metricfinalizerstype": 1,
            "computation_base.computation -> ordereddict [str,any]": 1,
            "ordereddict [str,any] -> computation_base.computation": 1,
            "tuple [any,int] -> tuple [file_program_state_manager_lib,list [release_manager_lib]]": 1,
            "computation_types.type -> bool": 1,
            "tuple [file_program_state_manager_lib,list [release_manager_lib]] -> tuple [any,int]": 1,
            "type -> union [tensortype,structtype,structwithpythontype]": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 2885,
        "functionReturnsType_added": 1132,
        "variableType_added": 70,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 1294,
        "functionReturnsType_removed": 434,
        "variableType_removed": 41,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 147,
        "functionReturnsType_changed": 167,
        "variableType_changed": 0,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            0.628930817610063,
            0.7751937984496124,
            0.7936507936507936,
            71.42857142857143,
            5.88235294117647,
            3.3333333333333335,
            0.398406374501992,
            1.7241379310344827,
            0.1393081030879963,
            1.1904761904761905,
            5.88235294117647,
            5.333333333333334,
            2.3529411764705883,
            3.5294117647058822,
            0.4484304932735426,
            76.19047619047619,
            0.5813953488372093,
            3.389830508474576,
            13.28125,
            0.9868421052631579,
            8.695652173913043,
            1.935483870967742,
            3.0303030303030303,
            0.4694835680751174,
            22.0,
            1.4084507042253522,
            3.6585365853658534,
            17.505470459518598,
            0.4444444444444444,
            6.0344827586206895,
            0.20380434782608695,
            0.2042205582028591,
            1.342281879194631,
            1.342281879194631,
            5.175292153589315,
            5.175292153589315,
            16.666666666666664,
            1.5909090909090908,
            10.416666666666668,
            0.1958863858961802,
            0.20554984583761562,
            8.9171974522293,
            0.3903708523096942,
            0.37231712658782307,
            5.263157894736842,
            0.21344717182497333,
            0.21810250817884408,
            0.23255813953488372,
            0.23364485981308408,
            0.8635578583765112,
            0.8992805755395683,
            0.2949852507374631,
            0.5173688100517368,
            4.761904761904762,
            0.5376344086021506,
            0.4273504273504274,
            0.09737098344693282,
            2.0588235294117645,
            1.107011070110701,
            0.2717391304347826,
            1.107011070110701,
            0.2717391304347826,
            1.8292682926829267,
            0.38022813688212925,
            3.3333333333333335,
            4.0,
            4.778156996587031,
            2.941176470588235,
            1.3333333333333335,
            5.555555555555555,
            4.3478260869565215,
            3.5211267605633805,
            4.545454545454546,
            2.912621359223301,
            0.8130081300813009,
            1.1904761904761905,
            3.0303030303030303,
            1.1661807580174928,
            1.9867549668874174,
            0.31645569620253167,
            0.5847953216374269,
            0.9950248756218906,
            4.761904761904762,
            1.3986013986013985,
            50.0,
            6.625258799171843,
            2.5,
            6.625258799171843,
            2.6058631921824107,
            0.7092198581560284,
            3.9473684210526314,
            6.625258799171843,
            2.358490566037736,
            2.3255813953488373,
            0.9195402298850575,
            0.9195402298850575,
            6.779661016949152,
            7.291666666666667,
            0.43668122270742354,
            1.9138755980861244,
            2.209944751381215,
            40.0,
            28.57142857142857,
            2.7777777777777777,
            3.8461538461538463,
            24.705882352941178,
            11.666666666666666,
            1.1695906432748537,
            0.9174311926605505,
            10.588235294117647,
            7.142857142857142,
            50.0,
            2.3923444976076556,
            14.285714285714285,
            14.124293785310735,
            4.777070063694268,
            0.13679890560875513,
            1.2345679012345678,
            16.666666666666664,
            3.5555555555555554,
            5.46448087431694,
            0.4878048780487805,
            1.7094017094017095,
            6.25,
            0.8403361344537815,
            0.38167938931297707,
            0.04511617414843221,
            7.307692307692308,
            1.935483870967742,
            2.4390243902439024,
            1.3513513513513513,
            1.8867924528301887,
            1.2540894220283534,
            0.2590673575129534,
            4.732142857142857,
            0.10172939979654119,
            0.023769907297361538,
            2.0408163265306123,
            0.6211180124223602,
            0.10015022533800699,
            1.2700165654334623,
            3.571428571428571,
            0.26246719160104987,
            1.6666666666666667,
            3.787878787878788,
            0.46728971962616817,
            2.1739130434782608,
            3.3333333333333335,
            9.523809523809524,
            5.769230769230769,
            0.8797653958944283,
            0.1400560224089636,
            1.5267175572519083,
            1.5267175572519083,
            18.75,
            10.256410256410255,
            1.7543859649122806,
            0.5813953488372093,
            0.6578947368421052,
            8.108108108108109,
            1.0471204188481675,
            1.282051282051282,
            1.2048192771084338,
            1.6494845360824744,
            0.6578947368421052,
            0.8025682182985553,
            20.0,
            2.898550724637681,
            1.323918799646955,
            0.1869158878504673,
            3.488372093023256,
            25.0,
            0.2317497103128621,
            0.2988643156007173,
            0.2653927813163482,
            10.0,
            11.11111111111111,
            4.166666666666666,
            10.0,
            0.9345794392523363,
            10.0,
            2.4390243902439024,
            1.4492753623188406,
            0.41841004184100417,
            5.333333333333334,
            2.3255813953488373,
            2.7027027027027026,
            3.6585365853658534,
            2.7027027027027026,
            0.2857142857142857,
            7.6923076923076925,
            1.8867924528301887,
            3.9800995024875623,
            0.2728512960436562,
            0.2702702702702703,
            5.263157894736842,
            6.25,
            2.18978102189781,
            0.5681818181818182,
            0.6469500924214419,
            1.1363636363636365,
            1.1494252873563218,
            1.6666666666666667,
            2.2857142857142856,
            2.2522522522522523,
            2.262443438914027,
            5.555555555555555,
            2.803738317757009,
            6.666666666666667,
            1.36986301369863,
            5.530776092774309,
            3.125,
            1.090909090909091,
            3.125,
            3.8461538461538463,
            11.428571428571429,
            1.7241379310344827,
            0.20202020202020202,
            1.5810276679841897,
            4.958677685950414,
            1.5267175572519083,
            2.04778156996587,
            1.0101010101010102,
            1.6317016317016315,
            0.8163265306122449,
            0.5960729312762973,
            0.6019830028328611,
            4.098360655737705,
            1.1904761904761905,
            0.4830917874396135,
            14.634146341463413,
            0.966183574879227,
            1.2084592145015105,
            4.23728813559322,
            0.14619883040935672,
            0.9615384615384616,
            1.293103448275862,
            0.3389830508474576,
            8.80503144654088,
            2.0618556701030926,
            0.4796163069544364,
            2.9850746268656714,
            5.273631840796019,
            1.9607843137254901,
            1.8518518518518516,
            0.5076142131979695,
            0.5,
            3.888888888888889,
            2.7027027027027026,
            0.45871559633027525,
            0.7117437722419928,
            2.955665024630542,
            1.2422360248447204,
            5.88235294117647,
            12.903225806451612,
            1.4492753623188406,
            1.4084507042253522,
            2.380952380952381,
            0.390625,
            1.0294117647058822,
            0.5934718100890208,
            3.4482758620689653,
            16.666666666666664,
            0.8130081300813009,
            1.2048192771084338,
            2.272727272727273,
            1.3729977116704806,
            2.1052631578947367,
            0.4016064257028112,
            4.0650406504065035,
            3.6674816625916873,
            3.488372093023256,
            1.094890510948905,
            1.7391304347826086,
            0.19801980198019803,
            1.4705882352941175,
            1.3953488372093024,
            1.0280743376828785,
            12.5,
            76.92307692307693,
            3.90625,
            3.614457831325301,
            5.714285714285714,
            2.4691358024691357,
            1.1235955056179776,
            4.838709677419355,
            2.6515151515151514,
            23.809523809523807,
            3.0927835051546393,
            3.076923076923077,
            25.0,
            6.666666666666667,
            0.625,
            0.6473594548551959,
            0.5294740557712672,
            0.017334026694401112,
            0.7832898172323759,
            0.7194244604316548,
            2.7777777777777777,
            1.6538037486218304,
            0.12150668286755771,
            0.17311021350259664,
            1.6069221260815822,
            3.125,
            2.0,
            2.0,
            0.591715976331361,
            1.4124293785310735,
            100.0,
            10.0,
            6.968641114982578,
            1.3029315960912053,
            2.4390243902439024,
            1.5873015873015872,
            1.1419249592169658,
            0.7972665148063782,
            6.920415224913495,
            5.080831408775981,
            33.33333333333333,
            100.0,
            0.33783783783783783,
            6.896551724137931,
            5.460750853242321,
            1.0714285714285714,
            2.8199566160520604,
            7.894736842105263,
            1.2048192771084338,
            1.8045112781954888,
            2.7777777777777777,
            5.263157894736842,
            1.6666666666666667,
            0.8438818565400843,
            0.6134969325153374,
            2.6119402985074625,
            0.6335797254487857,
            0.31645569620253167,
            0.4878048780487805,
            0.641025641025641,
            0.5084745762711864,
            4.166666666666666,
            4.166666666666666,
            5.0,
            0.5617977528089888,
            5.555555555555555,
            6.462585034013606,
            0.8368200836820083,
            4.958677685950414,
            0.7633587786259541,
            4.751619870410368,
            5.063291139240507,
            4.9079754601226995,
            1.4912280701754386,
            1.0752688172043012,
            0.19685039370078738,
            0.7434944237918215,
            4.444444444444445,
            1.6129032258064515,
            2.9308323563892147,
            5.014326647564469,
            8.0,
            0.7272727272727273,
            0.904977375565611,
            1.4705882352941175,
            1.4705882352941175,
            1.9855595667870036,
            1.7488076311605723,
            4.444444444444445,
            1.1904761904761905,
            2.112676056338028,
            1.4925373134328357,
            3.129074315514994,
            0.3766478342749529,
            0.31545741324921134,
            3.7383177570093453,
            1.098901098901099,
            0.5025125628140703,
            7.6923076923076925,
            4.545454545454546,
            1.1976047904191618,
            0.19723865877712032,
            1.2142237640936688,
            1.2142237640936688,
            1.5511892450879008,
            3.3457249070631967,
            1.8867924528301887,
            3.6363636363636362,
            1.8072289156626504,
            1.7142857142857144,
            3.7735849056603774,
            1.875,
            1.3574660633484164,
            1.466275659824047,
            3.614457831325301,
            2.941176470588235,
            0.9836065573770493,
            2.2556390977443606,
            2.2641509433962264,
            0.2967359050445104,
            0.2967359050445104,
            1.0144927536231882,
            1.0115606936416186,
            1.671891327063741,
            1.6701461377870561,
            3.8834951456310676,
            0.6060606060606061,
            0.6045949214026602,
            0.4608294930875576,
            0.3412969283276451,
            0.3418803418803419,
            0.9433962264150944,
            7.6923076923076925,
            0.6688963210702341,
            0.39893617021276595,
            0.4,
            0.3424657534246575,
            0.3424657534246575,
            1.0526315789473684,
            2.2222222222222223,
            0.7905138339920948,
            5.797101449275362,
            2.1505376344086025,
            4.301075268817205,
            3.7037037037037033,
            15.151515151515152,
            1.2591815320041972,
            0.6666666666666667,
            0.45662100456621,
            3.571428571428571,
            3.125,
            4.761904761904762,
            3.4482758620689653,
            2.941176470588235,
            1.1385199240986716,
            7.5,
            1.345291479820628,
            1.4780405405405406,
            0.42158516020236086,
            1.2048192771084338,
            2.5,
            2.358974358974359,
            0.1937984496124031,
            4.3478260869565215,
            2.4390243902439024,
            0.43103448275862066,
            6.451612903225806,
            1.8306636155606408,
            3.2520325203252036,
            0.5813953488372093,
            2.5402201524132093,
            0.11655011655011654,
            0.09891196834817012,
            0.4792332268370607,
            1.5625,
            0.8695652173913043,
            3.1198686371100166,
            3.8461538461538463,
            0.5333333333333333,
            5.555555555555555,
            0.32679738562091504,
            0.12578616352201258,
            0.11261261261261261,
            0.1394700139470014,
            0.8403361344537815,
            6.5625,
            10.483870967741936,
            0.8771929824561403,
            0.8333333333333334,
            2.841918294849023,
            4.292929292929292,
            1.5561319007039645,
            1.560758082497213,
            0.9900990099009901,
            0.4784688995215311,
            1.9230769230769231,
            0.8130081300813009,
            1.3157894736842104,
            2.2988505747126435,
            2.631578947368421,
            3.896103896103896,
            1.7647058823529411,
            0.975609756097561,
            4.3478260869565215,
            3.5294117647058822,
            5.128205128205128,
            2.941176470588235,
            2.4390243902439024,
            2.1604938271604937,
            5.555555555555555,
            1.2711864406779663,
            0.8368200836820083,
            1.25,
            3.4965034965034967,
            3.225806451612903,
            0.11173184357541899,
            2.272727272727273,
            6.25,
            2.236842105263158,
            1.0752688172043012,
            0.31413612565445026,
            3.9930555555555554,
            0.17006802721088435,
            1.7985611510791366,
            2.941176470588235,
            2.3391812865497075,
            1.0256410256410255,
            0.8583690987124464,
            3.286384976525822,
            0.22779043280182232,
            3.0120481927710845,
            0.2717391304347826,
            2.7777777777777777,
            7.07070707070707,
            0.7352941176470588,
            2.6687598116169546,
            2.6729559748427674,
            4.672897196261682,
            0.47519799916631933,
            33.33333333333333,
            2.857142857142857,
            6.965174129353234,
            0.7326007326007326,
            2.7777777777777777,
            4.938271604938271,
            2.8452463566967383,
            2.863128491620112,
            1.6091954022988506,
            0.17064846416382254,
            6.896551724137931,
            2.7196652719665275,
            3.2663316582914574,
            2.7923211169284468,
            22.22222222222222,
            1.3986013986013985,
            0.8165487207403375,
            1.3289036544850499,
            1.5132408575031526,
            12.068965517241379,
            8.0,
            12.857142857142856,
            8.333333333333332,
            10.4,
            6.666666666666667,
            15.037593984962406,
            8.0,
            3.6036036036036037,
            1.693227091633466,
            4.285714285714286,
            1.1627906976744187,
            0.9302325581395349,
            2.302631578947368,
            0.9852216748768473,
            1.7857142857142856,
            4.294478527607362,
            4.320987654320987,
            0.4746835443037975,
            0.5825242718446602,
            1.834862385321101,
            0.3003003003003003,
            0.4273504273504274,
            1.3192612137203166,
            3.622047244094488,
            4.854368932038835,
            0.13531799729364005,
            1.7605633802816902,
            1.3192612137203166,
            3.4383954154727796,
            3.557312252964427,
            3.5046728971962615,
            0.821917808219178,
            0.9478672985781991,
            0.17152658662092624,
            0.17301038062283738,
            3.9408866995073892,
            0.78125,
            3.9408866995073892,
            0.78125,
            3.076923076923077,
            3.9408866995073892,
            0.78125,
            0.315955766192733,
            0.338409475465313,
            60.0,
            1.3440860215053763,
            0.9041591320072333,
            0.7707129094412332,
            50.0,
            3.8461538461538463,
            2.0872865275142316,
            2.857142857142857,
            0.9345794392523363,
            1.098901098901099,
            4.25531914893617,
            3.201970443349754,
            2.7027027027027026,
            0.5649717514124294,
            4.395604395604396,
            2.2857142857142856,
            2.2801302931596092,
            3.9215686274509802,
            0.42134831460674155,
            1.2269938650306749,
            0.8620689655172413,
            7.755102040816326,
            1.4388489208633095,
            0.45045045045045046,
            1.0416666666666665,
            0.8849557522123894,
            1.6129032258064515,
            0.8710801393728222,
            0.6644518272425249,
            0.4434589800443459,
            6.306306306306306,
            0.4434589800443459,
            0.6644518272425249,
            0.8710801393728222,
            0.8710801393728222,
            0.6644518272425249,
            0.4434589800443459,
            0.6382978723404255,
            1.7687074829931975,
            3.87409200968523,
            0.22026431718061676,
            1.0396361273554255,
            1.293103448275862,
            0.3527336860670194,
            0.24752475247524752,
            3.125,
            100.0,
            21.428571428571427,
            10.0,
            2.366863905325444,
            0.5208333333333333,
            2.8301886792452833,
            10.0,
            12.5,
            6.521739130434782,
            7.222222222222221,
            1.2048192771084338,
            1.524390243902439,
            2.9213483146067416,
            6.666666666666667,
            6.666666666666667,
            13.793103448275861,
            2.727272727272727,
            5.351170568561873,
            2.066772655007949,
            3.0864197530864197,
            33.33333333333333,
            3.9619651347068143,
            3.9872408293460926,
            3.0349013657056148,
            3.0165912518853695,
            1.7964071856287425,
            1.0638297872340425,
            1.1695906432748537,
            16.666666666666664,
            3.27455919395466,
            0.8771929824561403,
            0.3883495145631068,
            0.7952286282306162,
            2.8901734104046244,
            2.3391812865497075,
            0.5780346820809248,
            1.282051282051282,
            0.26690391459074736,
            1.809954751131222,
            1.3888888888888888,
            0.7518796992481203,
            2.5096525096525095,
            4.0,
            4.807692307692308,
            1.6611295681063125,
            0.3105590062111801,
            1.7482517482517483,
            0.5813953488372093,
            1.0309278350515463,
            0.4878048780487805,
            1.5122873345935728,
            1.4705882352941175,
            3.9603960396039604,
            11.11111111111111,
            2.4390243902439024,
            8.433734939759036,
            0.6116207951070336,
            4.0,
            1.8181818181818181,
            1.5037593984962405,
            0.8163265306122449,
            2.631578947368421,
            2.5974025974025974,
            2.072538860103627,
            3.3333333333333335,
            2.9702970297029703,
            1.400560224089636,
            2.6785714285714284,
            2.7027027027027026,
            2.7027027027027026,
            3.3783783783783785,
            2.1739130434782608,
            2.7027027027027026,
            2.7027027027027026,
            2.7027027027027026,
            2.7027027027027026,
            2.7027027027027026,
            9.090909090909092,
            2.2222222222222223,
            1.9230769230769231,
            0.43478260869565216,
            1.2779552715654952,
            2.1052631578947367,
            1.107011070110701,
            0.8645533141210375,
            0.28653295128939826,
            2.571428571428571,
            0.628698224852071,
            0.628698224852071,
            0.6967585580127235,
            0.7055214723926381,
            0.19138755980861244,
            2.1052631578947367,
            1.6129032258064515,
            1.5384615384615385,
            1.6129032258064515,
            1.5384615384615385,
            7.142857142857142,
            1.4492753623188406,
            2.4817518248175183,
            4.529616724738676,
            2.9629629629629632,
            0.7299270072992701,
            11.11111111111111,
            0.7664233576642335,
            0.5016722408026756,
            0.944081336238199,
            2.8901734104046244,
            9.090909090909092,
            0.5405405405405406,
            0.1375515818431912,
            1.2658227848101267,
            1.5625,
            2.4122807017543857,
            0.5291005291005291,
            3.3333333333333335,
            0.819672131147541,
            0.5291005291005291,
            33.33333333333333,
            0.5405405405405406,
            3.225806451612903,
            14.285714285714285,
            0.1669449081803005,
            1.7045454545454544,
            2.8758169934640523,
            2.2413793103448274
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2018",
                "3612",
                "1298",
                "6170",
                "320",
                "39",
                "5651",
                "7477",
                "97",
                "0",
                "0",
                "19122"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/tensorflow/federated": 6170
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 2748,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            67.24
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/tensorflow/federated": 2748
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2019": 66,
            "2020": 1854,
            "2021": 2167
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2019": 10,
            "2020": 204,
            "2021": 236
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2019": 509,
            "2020": 1094,
            "2021": 721
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2018": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2019": [
                3,
                5859,
                0,
                3975,
                0,
                10270
            ],
            "2020": [
                1069,
                9142,
                376,
                6268,
                22,
                18130
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "tensorflow-federated": 0,
                "mcmahan@google.com": 2,
                "michaelreneer@google.com": 72,
                "zachgarrett@google.com": 34,
                "saugenst@google.com": 5,
                "gardener@tensorflow.org": 17,
                "krush@google.com": 69,
                "cramertj@google.com": 60,
                "zachcharles@google.com": 76,
                "swegner@google.com": 4,
                "harryz@google.com": 1,
                "kairouz@google.com": 1,
                "weikangsong@google.com": 4,
                "jason@manc.us": 2,
                "galenandrew@google.com": 28,
                "xuzheng@google.com": 8,
                "hsidahmed@google.com": 1,
                "wennanzhu@google.com": 5,
                "konkey@google.com": 22,
                "zhhuo@google.com": 1,
                "chunxiangzheng@google.com": 2,
                "shanshanw@google.com": 14,
                "ostrowski@google.com": 15,
                "suxinguo@google.com": 1,
                "karansinghal@google.com": 2,
                "klz@google.com": 1,
                "xiaoyux@google.com": 3
            }
        ],
        "list_dev_dict_total": [
            {
                "tensorflow-federated": 0,
                "michaelreneer@google.com": 873,
                "ostrowski@google.com": 267,
                "mcmahan@google.com": 81,
                "gardener@tensorflow.org": 112,
                "konkey@google.com": 107,
                "zachgarrett@google.com": 557,
                "krush@google.com": 582,
                "mdan@google.com": 2,
                "michaelreneer@gmail.com": 1,
                "blamb@google.com": 6,
                "joshua.patrick.gardner@gmail.com": 1,
                "ingerman@google.com": 5,
                "funaox@gmail.com": 1,
                "krzys.ostrowski@gmail.com": 1,
                "galenandrew@google.com": 110,
                "yanghan9826@gmail.com": 1,
                "lily@upperquad.com": 1,
                "stefanom@google.com": 4,
                "swegner@google.com": 43,
                "scottzhu@google.com": 1,
                "huberte@google.com": 2,
                "dheeraj98reddy@gmail.com": 7,
                "eglanz@google.com": 10,
                "yashkatariya@google.com": 8,
                "jsimsa@google.com": 2,
                "zhhuo@google.com": 8,
                "khomenko@brainscode.com": 1,
                "tensorflow.copybara@gmail.com": 28,
                "kkimlabs@google.com": 1,
                "srbs@google.com": 2,
                "gjn@google.com": 1,
                "6386753+krishnap25@users.noreply.github.com": 4,
                "Gui-U@users.noreply.github.com": 1,
                "sergii.khomenko@stylight.com": 2,
                "roselander@google.com": 25,
                "mcognetta@users.noreply.github.com": 1,
                "tabrizian@outlook.com": 1,
                "kairouz@google.com": 8,
                "mrry@google.com": 2,
                "slebedev@google.com": 1,
                "schien@google.com": 2,
                "jpgard@users.noreply.github.com": 1,
                "taylorrobie@google.com": 1,
                "shanshanw@google.com": 46,
                "saugenst@google.com": 18,
                "zachcharles@google.com": 212,
                "zitengsun@google.com": 1,
                "cramertj@google.com": 178,
                "xuzheng@google.com": 118,
                "harryz@google.com": 5,
                "markdaoust@google.com": 4,
                "timonvo@google.com": 1,
                "Christoffer.Hjort1995@gmail.com": 2,
                "43638955+abhinavsp0730@users.noreply.github.com": 2,
                "jason@manc.us": 12,
                "huozhouyuan@gmail.com": 2,
                "abhinavsp0730@gmail.com": 1,
                "weikangsong@google.com": 18,
                "kaftan@google.com": 2,
                "aaudibert@google.com": 1,
                "sasha@sdll.io": 1,
                "alshedivat@google.com": 2,
                "hsidahmed@google.com": 2,
                "aminim@google.com": 1,
                "karansinghal@google.com": 13,
                "sshmulyian@google.com": 1,
                "wennanzhu@google.com": 24,
                "1131991+amitport@users.noreply.github.com": 5,
                "hanchung@google.com": 2,
                "laurenzo@google.com": 3,
                "chunxiangzheng@google.com": 4,
                "ronaldseoh@icloud.com": 7,
                "807580+SamuelMarks@users.noreply.github.com": 2,
                "36787333+amrzv@users.noreply.github.com": 1,
                "rob.suderman@gmail.com": 1,
                "33724568+legenderyLuke@users.noreply.github.com": 1,
                "59985653+not-jenni@users.noreply.github.com": 2,
                "meadowlark@google.com": 1,
                "dramage@google.com": 1,
                "scotttodd@google.com": 1,
                "pizzud@google.com": 1,
                "phawkins@google.com": 4,
                "gcmn@google.com": 2,
                "suxinguo@google.com": 2,
                "thomas.raoux@gmail.com": 1,
                "ryanmarten2000@gmail.com": 1,
                "klz@google.com": 2,
                "yuanhl@google.com": 3,
                "xiaoyux@google.com": 14,
                "lar@google.com": 2,
                "maxwellcollins@google.com": 1,
                "kaehops@gmail.com": 1,
                "sibonaci@google.com": 1,
                "rechen@google.com": 1,
                "nicolemitchell@google.com": 2,
                "mihaimaruseac@google.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]