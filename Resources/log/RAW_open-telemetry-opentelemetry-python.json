[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 1083,
        "commit_year_dict": {
            "2019": 167,
            "2020": 562,
            "2021": 354
        },
        "loc_year_edit": {
            "2019": 29155,
            "2020": 239411,
            "2021": 133880
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 225,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 5018,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2019": 422,
            "2020": 1044,
            "2021": 1377
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2019": 140,
            "2020": 557,
            "2021": 1238
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2019": 91,
            "2020": 80,
            "2021": 69
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 2843,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "str": 375,
            "span": 44,
            "traceoptions": 2,
            "tracestate": 3,
            "iterator [span]": 3,
            "iterator [none]": 2,
            "none": 311,
            "spancontext": 11,
            "'span'": 5,
            "'traceoptions'": 1,
            "'tracestate'": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['span']": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 1,
            "'spancontext'": 1,
            "optional [_untrustedimplfactory]": 1,
            "type [_t]": 10,
            "object": 24,
            "_untrustedimplfactory": 2,
            "optional [_untrustedimplfactory [_t]]": 2,
            "optional [callable [...,optional [_t]]]": 2,
            "optional [_t]": 8,
            "_t": 4,
            "bool": 141,
            "bytes": 19,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [spancontext]": 1,
            "getter": 2,
            "setter": 2,
            "int": 168,
            "list": 5,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [object]": 1,
            "distributedcontext": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [distributedcontext]": 1,
            "dctx_api.distributedcontext": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dctx_api]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [dctx_api]": 1,
            "\"trace.span\"": 4,
            "flask.flask": 3,
            "labelkeys": 6,
            "labelvalues": 8,
            "\"floatcounter\"": 1,
            "\"intcounter\"": 1,
            "\"floatgauge\"": 1,
            "\"intgauge\"": 1,
            "\"intmeasure\"": 1,
            "\"floatmeasure\"": 1,
            "\"object\"": 1,
            "\"countertimeseries\"": 2,
            "\"gaugetimeseries\"": 2,
            "\"measuretimeseries\"": 2,
            "\"spancontext\"": 2,
            "types.attributes": 18,
            "event": 1,
            "\"link\"": 1,
            "trace.span": 7,
            "export.spanexportresult": 1,
            "_untrustedimplfactory [_t]": 2,
            "attribute(\n    value=name(\n        value='opentelemetry',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='trace',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).tracer": 1,
            "spankind": 9,
            "\"valuetype\"": 3,
            "dict": 25,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 6,
            "dict [str,str]": 48,
            "list [tuple [\"metric\",union [float,int]]]": 1,
            "valuet": 26,
            "sequence [tuple [\"metric\",valuet]]": 2,
            "type [valuet]": 12,
            "type [metrict]": 3,
            "sequence [str]": 42,
            "implementationfactory": 1,
            "type [metrics_api]": 12,
            "metrics_api.valuet": 17,
            "sequence [tuple [metrics_api,metrics_api]]": 1,
            "basehandle": 1,
            "metrics_api.metrict": 3,
            "jaeger.batch": 8,
            "callable [...,any]": 1,
            "mapping [str,\"attributevalue\"]": 1,
            "optional [\"spancontext\"]": 11,
            "sequence [\"link\"]": 7,
            "\"decision\"": 8,
            "float": 27,
            "sequence [tuple [metric,sequence [str]]]": 2,
            "\"metricsexportresult\"": 3,
            "monitoring.commandstartedevent": 2,
            "monitoring.commandsucceededevent": 2,
            "monitoring.commandfailedevent": 2,
            "optional [attributes]": 9,
            "optional [types]": 3,
            "sequence [trace_api]": 6,
            "optional [int]": 86,
            "labelset": 22,
            "\"labelset\"": 6,
            "optional [type [baseexception]]": 2,
            "optional [baseexception]": 2,
            "optional [tracebacktype]": 2,
            "\"instrumentationinfo\"": 2,
            "\"tracersource\"": 1,
            "instrumentationinfo": 19,
            "sampling.sampler": 2,
            "trace_api.tracer": 4,
            "optional [str]": 50,
            "sequence [span]": 22,
            "spanexportresult": 16,
            "tracer": 2,
            "\"metric\"": 1,
            "\"trace.tracer\"": 1,
            "sequence": 4,
            "aggregator": 6,
            "\"meter\"": 14,
            "metric": 4,
            "batcher": 1,
            "sequence [metricrecord]": 20,
            "context": 17,
            "trace.tracer": 2,
            "metricrecord": 9,
            "metricsexportresult": 7,
            "\"metrics_api.meter\"": 1,
            "observercallbackt": 6,
            "metrics_api.observercallbackt": 4,
            "metrics_api.observer": 1,
            "trace_api.span": 3,
            "optional [context]": 4,
            "resource": 20,
            "labels": 3,
            "\"resource\"": 5,
            "metrics_service_pb2_grpc.metricsservicestub": 3,
            "metrics_service_pb2.exportmetricsservicerequest": 3,
            "sequence [metrics_pb2]": 3,
            "metrics_pb2.metricdescriptor": 3,
            "metrics_pb2.point": 3,
            "\"configuration\"": 1,
            "meterprovider": 14,
            "\"observer\"": 3,
            "tuple [tuple [str,str]]": 6,
            "types.attributesformatter": 2,
            "mutablemapping [str,str]": 4,
            "list [str]": 3,
            "union [\"tracerprovider\",\"meterprovider\"]": 1,
            "typing.callable": 2,
            "yarl.url": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,int]": 2,
            "requests.response": 3,
            "spanexporter": 2,
            "types.attributevalue": 9,
            "trace_api.status": 2,
            "sequence [event]": 4,
            "list [dict [str,any]]": 1,
            "tuple [str,int]": 1,
            "optional [status]": 1,
            "protospan.links": 1,
            "protospan.timeevents": 1,
            "protospan.attributes": 1,
            "attributevalue": 1,
            "optional [meterprovider]": 7,
            "\"meterprovider\"": 2,
            "exception": 13,
            "statuscanonicalcode": 6,
            "configvalue": 2,
            "optional [configvalue]": 1,
            "\"tracerprovider\"": 2,
            "type [observert]": 2,
            "metrics_api.instrumentt": 2,
            "type [instrumentt]": 1,
            "timeseries": 2,
            "optional [metricdescriptor]": 1,
            "metrics_api.meter": 1,
            "metricsexporter": 3,
            "meter": 6,
            "spanprocessor": 1,
            "callable [...,callable [...,none]]": 4,
            "any": 23,
            "\"span\"": 2,
            "union [synchronousmultispanprocessor,concurrentmultispanprocessor]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [trace,trace]": 1,
            "trace.synchronousmultispanprocessor": 1,
            "trace.concurrentmultispanprocessor": 1,
            "\"boundupdowncounter\"": 1,
            "channelcredentials": 8,
            "sequence [sdkspan]": 6,
            "exporttraceservicerequest": 6,
            "tuple [str,dict]": 2,
            "applications.starlette": 2,
            "fastapi.fastapi": 2,
            "typingsequence [sdkspan]": 2,
            "instrumentt": 5,
            "type": 1,
            "optional [dict]": 3,
            "optional [sequence [str]]": 1,
            "viewconfig": 1,
            "timestamp": 10,
            "resource_pb2.resource": 1,
            "tracerprovider": 2,
            "\"tracershim\"": 6,
            "otelspancontext": 4,
            "spancontextshim": 2,
            "\"spanshim\"": 6,
            "attributes": 15,
            "optional [object]": 2,
            "\"scopemanagershim\"": 4,
            "spanshim": 6,
            "\"scopeshim\"": 6,
            "oteltracer": 2,
            "union [spanshim,spancontextshim]": 4,
            "tuple": 1,
            "sequence [sdkmetric]": 1,
            "optional [mapping [str,\"attributevalue\"]]": 1,
            "decision": 1,
            "sampler": 7,
            "\"samplingresult\"": 1,
            "requests.session": 3,
            "threading.event": 1,
            "_tracecontext": 1,
            "text": 4,
            "keyvalue": 4,
            "dict [sdkresource,resourcedatat]": 2,
            "callable [...,typingresourcet]": 2,
            "list [typingresourcet]": 2,
            "typingsequence [sdkdatat]": 4,
            "exportservicerequestt": 2,
            "exportresultt": 2,
            "type [datapointt]": 1,
            "list [datapointt]": 1,
            "\"metricdescriptor.temporalityvalue\"": 1,
            "union [int,float]": 5,
            "\"metricdescriptor.typevalue\"": 1,
            "exportmetricsservicerequest": 1,
            "sdkspan": 12,
            "optional [metrics]": 2,
            "httpmetrictype": 1,
            "\"globalerrorhandler\"": 1,
            "trace_api.idsgenerator": 2,
            "optional [context_api]": 6,
            "optional [\"context\"]": 4,
            "\"defaultboundvaluerecorder\"": 1,
            "\"valuerecorder\"": 1,
            "\"sumobserver\"": 1,
            "\"updownsumobserver\"": 1,
            "\"valueobserver\"": 1,
            "\"defaultsumobserver\"": 1,
            "\"defaultupdownsumobserver\"": 1,
            "\"defaultvalueobserver\"": 1,
            "metrics_api.valuerecorder": 1,
            "metrics_api.sumobserver": 1,
            "metrics_api.updownsumobserver": 1,
            "metrics_api.valueobserver": 1,
            "optional [bool]": 11,
            "optional [channelcredentials]": 10,
            "\"tracestate\"": 5,
            "sequence [exportrecord]": 8,
            "exportrecord": 4,
            "sequence [spanexporter]": 5,
            "sequence [metricsexporter]": 3,
            "tuple [sequence [spanexporter],sequence [metricsexporter]]": 4,
            "union [transport_format_json,transport_format_protobuf,none]": 1,
            "trace.idsgenerator": 4,
            "trace.traceflags": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [context_api]": 1,
            "trace.defaultspan": 1,
            "\"accumulator\"": 1,
            "excludelist": 1,
            "union [metrics_api,metrics_api]": 1,
            "sequence [tuple [str,object]]": 3,
            "optional [collectorservicestub]": 3,
            "optional [collector]": 2,
            "translator": 4,
            "model_pb2.keyvalue": 15,
            "optional [model_pb2]": 3,
            "sequence [model_pb2]": 6,
            "duration": 3,
            "model_pb2.span": 3,
            "optional [sequence [model_pb2]]": 6,
            "tcollector.tag": 8,
            "optional [tcollector]": 2,
            "tcollector.span": 2,
            "sequence [tcollector]": 2,
            "optional [sequence [tcollector]]": 4,
            "status": 6,
            "sdkstatus": 2,
            "idsgenerator": 2,
            "dict [str,types]": 1,
            "trace_api.spancontext": 1,
            "optional [trace_api]": 2,
            "trace_api.spankind": 2,
            "provider": 2,
            "protocol": 2,
            "ipinput": 14,
            "nodeendpoint": 12,
            "encodedlocalendpointt": 4,
            "optional [list [event]]": 4,
            "optional [list [dict]]": 2,
            "list [dict]": 2,
            "zipkin_pb2.endpoint": 4,
            "zipkin_pb2.span": 2,
            "optional [list]": 2,
            "optional [ipaddress]": 4,
            "encoder": 6,
            "list [trace]": 3,
            "jsonv1encoder": 2,
            "jsonv2encoder": 2,
            "protobufencoder": 2,
            "idgenerator": 5,
            "optional [compression]": 8,
            "readablespan": 25,
            "optional [sequence]": 5,
            "sequence [readablespan]": 2,
            "\"tracer\"": 1,
            "optional [tracer]": 1,
            "optional [\"tracestate\"]": 1,
            "spanlimits": 2,
            "basedistro": 1,
            "distribution": 1,
            "collection [str]": 2,
            "optional [dependencyconflict]": 3,
            "entrypoint": 1,
            "baseinstrumentor": 1,
            "statuscode": 1,
            "optional [dict [str,str]]": 2,
            "compression": 1,
            "list [link]": 1,
            "optional [spancontext]": 1,
            "pb2exporttraceservicerequest": 1,
            "list [pb2resourcespans]": 1,
            "pb2span": 1,
            "optional [list [pb2span]]": 1,
            "list [pb2span]": 1,
            "optional [pb2status]": 1,
            "optional [bytes]": 1,
            "optional [list [pb2keyvalue]]": 1,
            "pb2resource": 1,
            "pb2instrumentationlibrary": 1,
            "pb2anyvalue": 1,
            "pb2keyvalue": 1,
            "list [sdkspan]": 1,
            "tuple [list [sdkspan],pb2exporttraceservicerequest]": 1,
            "mapping [str,str]": 1,
            "callable [...,none]": 1,
            "mock": 6,
            "callable [...,returnt]": 3,
            "list [optional [returnt]]": 3,
            "list [returnt]": 3,
            "optional [meter]": 3,
            "counter": 10,
            "updowncounter": 10,
            "observablecounter": 10,
            "histogram": 10,
            "observablegauge": 10,
            "observableupdowncounter": 10,
            "tcallback": 5,
            "_tinstrumentcallbackgenerator": 2,
            "_tinstrumentcallback": 2,
            "iterable [measurement]": 5,
            "measurement": 1,
            "generator [iterable [measurement],none,none]": 2,
            "union [float,int]": 2,
            "list [_proxymeter]": 2,
            "list [_proxyinstrument]": 2,
            "optional [instrumentt]": 2,
            "\"metrics.meter\"": 16,
            "_proxymeterprovider": 1,
            "_proxymeter": 3,
            "apimeterprovider": 2,
            "\"metricreader\"": 2,
            "\"metricexporter\"": 2,
            "\"view\"": 2,
            "logdata": 39,
            "sequence [logdata]": 12,
            "exportlogsservicerequest": 3,
            "logexportresult": 3,
            "optional [traceflags]": 3,
            "optional [severitynumber]": 3,
            "optional [any]": 3,
            "optional [resource]": 3,
            "logrecord": 10,
            "logprocessor": 9,
            "logging.logrecord": 9,
            "union [synchronousmultilogprocessor,concurrentmultilogprocessor]": 6,
            "logemitterprovider": 6,
            "optional [logemitterprovider]": 3,
            "logemitter": 6,
            "io": 3,
            "callable [...,str]": 3,
            "logexporter": 6,
            "optional [_flushrequest]": 9,
            "_flushrequest": 3,
            "severitynumber": 3,
            "dict [str,sequence [logexporter]]": 1,
            "sequence [metricexporter]": 1,
            "sequence [metricreader]": 1,
            "callbackt": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 1935,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "str": 284,
            "span": 18,
            "traceoptions": 1,
            "tracestate": 1,
            "iterator [span]": 1,
            "iterator [none]": 3,
            "none": 218,
            "spancontext": 10,
            "'span'": 5,
            "'traceoptions'": 1,
            "'tracestate'": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['span']": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 1,
            "'spancontext'": 1,
            "optional [_untrustedimplfactory [object]]": 1,
            "\"span\"": 6,
            "type [_t]": 10,
            "object": 16,
            "_untrustedimplfactory [_t]": 4,
            "optional [_untrustedimplfactory [_t]]": 2,
            "optional [callable [...,optional [_t]]]": 2,
            "optional [_t]": 8,
            "_t": 6,
            "labelkeys": 3,
            "\"intmeasure\"": 1,
            "\"floatmeasure\"": 1,
            "\"object\"": 6,
            "flask.flask": 3,
            "dict [str,str]": 44,
            "list [tuple [\"metric\",union [float,int]]]": 1,
            "union [type [float],type [int]]": 3,
            "bool": 107,
            "list [str]": 8,
            "metrics_api.valuet": 17,
            "\"trace_api.spancontext\"": 1,
            "types.attributes": 8,
            "\"trace_api.link\"": 1,
            "dict": 21,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 6,
            "trace_api.parentspan": 3,
            "trace_api.spankind": 1,
            "optional [types]": 1,
            "sequence [trace_api]": 2,
            "sequence [str]": 46,
            "sampling.sampler": 1,
            "type [metrics_api]": 12,
            "sequence [tuple [metric,sequence [str]]]": 2,
            "context": 10,
            "optional [str]": 28,
            "batcher": 1,
            "valuet": 25,
            "labelset": 22,
            "\"gaugehandle\"": 1,
            "bytes": 12,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [spancontext]": 1,
            "getter [_t]": 1,
            "setter [_t]": 1,
            "distributedcontext": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [distributedcontext]": 1,
            "getter": 1,
            "setter": 1,
            "\"meter\"": 9,
            "implementationfactory": 1,
            "callable [...,any]": 1,
            "\"trace.tracer\"": 1,
            "\"labelset\"": 1,
            "optional [int]": 32,
            "int": 100,
            "sequence": 3,
            "metrics_service_pb2_grpc.metricsservicestub": 3,
            "sequence [metricrecord]": 19,
            "metric": 3,
            "metricrecord": 9,
            "metricsexportresult": 7,
            "metrics_service_pb2.exportmetricsservicerequest": 3,
            "sequence [metrics_pb2]": 3,
            "metrics_pb2.metricdescriptor": 3,
            "metrics_pb2.point": 3,
            "sequence [span]": 15,
            "spanexportresult": 9,
            "spankind": 2,
            "resource": 11,
            "metrics_api.metrict": 2,
            "type [metrict]": 3,
            "configvalue": 2,
            "timeseries": 2,
            "optional [monitoredresource]": 1,
            "optional [metricdescriptor]": 1,
            "\"metricsexportresult\"": 3,
            "trace_api.status": 1,
            "sequence [event]": 1,
            "types.attributevalue": 5,
            "list [dict [str,any]]": 1,
            "tuple [str,int]": 1,
            "optional [status]": 1,
            "protospan.links": 1,
            "protospan.timeevents": 1,
            "protospan.attributes": 1,
            "attributevalue": 1,
            "\"resource\"": 1,
            "exception": 7,
            "spanexporter": 1,
            "float": 16,
            "jaeger.batch": 6,
            "channelcredentials": 5,
            "typingsequence [sdkspan]": 3,
            "exporttraceservicerequest": 3,
            "tuple [tuple [str,str]]": 7,
            "aggregator": 5,
            "type [instrumentt]": 1,
            "typing.callable": 1,
            "yarl.url": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,int]": 1,
            "tuple [str,dict]": 2,
            "statuscanonicalcode": 3,
            "requests.response": 2,
            "fastapi.fastapi": 2,
            "applications.starlette": 2,
            "monitoring.commandstartedevent": 2,
            "monitoring.commandsucceededevent": 2,
            "monitoring.commandfailedevent": 2,
            "trace.span": 4,
            "mutablemapping [str,str]": 4,
            "optional [mapping [str,\"attributevalue\"]]": 1,
            "optional [\"spancontext\"]": 11,
            "optional [attributes]": 5,
            "sequence [\"link\"]": 3,
            "\"decision\"": 4,
            "types.attributesformatter": 2,
            "instrumentt": 4,
            "union [int,float]": 2,
            "\"metricdescriptor.temporalityvalue\"": 1,
            "\"metricdescriptor.typevalue\"": 1,
            "\"boundcounter\"": 1,
            "type [observert]": 2,
            "optional [tuple [any]]": 1,
            "\"tracerprovider\"": 4,
            "aiohttp.tracerequeststartparams": 2,
            "_urlfiltert": 2,
            "_spannamet": 2,
            "tracerprovider": 3,
            "types.simplenamespace": 4,
            "aiohttp.clientsession": 5,
            "aiohttp.tracerequestendparams": 1,
            "aiohttp.tracerequestexceptionparams": 1,
            "aiohttp.traceconfig": 1,
            "requests.session": 3,
            "_tracecontext": 1,
            "meter": 4,
            "sampler": 1,
            "sequence [spanexporter]": 4,
            "trace.idsgenerator": 2,
            "sequence [metricsexporter]": 3,
            "sequence [tuple [str,object]]": 3,
            "tuple [sequence [spanexporter],sequence [metricsexporter]]": 2,
            "otelspancontext": 2,
            "spancontextshim": 1,
            "attributes": 8,
            "\"scopemanagershim\"": 2,
            "spanshim": 3,
            "\"tracershim\"": 3,
            "oteltracer": 1,
            "union [spanshim,spancontextshim]": 2,
            "list": 2,
            "\"spanshim\"": 3,
            "optional [object]": 1,
            "\"scopeshim\"": 3,
            "idsgenerator": 5,
            "\"configuration\"": 1,
            "optional [configvalue]": 1,
            "excludelist": 1,
            "sequence [exportrecord]": 11,
            "timestamp": 7,
            "exportrecord": 4,
            "resource_pb2.resource": 1,
            "type [datapointt]": 1,
            "optional [bool]": 7,
            "optional [channelcredentials]": 7,
            "optional [sequence]": 5,
            "list [datapointt]": 1,
            "exportmetricsservicerequest": 1,
            "sequence [tuple [\"metric\",valuet]]": 2,
            "type [valuet]": 12,
            "observercallbackt": 6,
            "\"observer\"": 2,
            "optional [meterprovider]": 4,
            "meterprovider": 8,
            "\"defaultboundcounter\"": 1,
            "\"defaultboundupdowncounter\"": 1,
            "\"defaultboundvaluerecorder\"": 1,
            "\"counter\"": 2,
            "\"updowncounter\"": 2,
            "\"valuerecorder\"": 2,
            "\"sumobserver\"": 1,
            "\"updownsumobserver\"": 1,
            "\"valueobserver\"": 1,
            "\"defaultsumobserver\"": 1,
            "\"defaultupdownsumobserver\"": 1,
            "\"defaultvalueobserver\"": 1,
            "optional [metrics]": 2,
            "httpmetrictype": 1,
            "\"metrict\"": 1,
            "\"accumulator\"": 2,
            "metrics_api.observercallbackt": 4,
            "metrics_api.instrumentt": 2,
            "\"meterprovider\"": 1,
            "\"instrumentationinfo\"": 1,
            "union [metrics_api,metrics_api]": 1,
            "sequence [tuple [metrics_api,metrics_api]]": 1,
            "metrics_api.observer": 1,
            "metrics_api.meter": 1,
            "metricsexporter": 3,
            "baseboundinstrument": 1,
            "metrics_api.counter": 1,
            "metrics_api.updowncounter": 1,
            "metrics_api.valuerecorder": 1,
            "metrics_api.sumobserver": 1,
            "metrics_api.updownsumobserver": 1,
            "metrics_api.valueobserver": 1,
            "\"metrics_api.meter\"": 1,
            "type": 1,
            "optional [dict]": 2,
            "optional [sequence [str]]": 1,
            "viewconfig": 1,
            "provider": 2,
            "union [transport_format_json,transport_format_protobuf,none]": 1,
            "trace_api.span": 1,
            "iterator [trace_api]": 1,
            "optional [collectorservicestub]": 2,
            "optional [collector]": 1,
            "translator": 2,
            "readablespan": 25,
            "model_pb2.keyvalue": 10,
            "optional [model_pb2]": 2,
            "sequence [model_pb2]": 4,
            "duration": 2,
            "model_pb2.span": 2,
            "optional [sequence [model_pb2]]": 4,
            "tcollector.tag": 4,
            "optional [tcollector]": 1,
            "tcollector.span": 1,
            "sequence [tcollector]": 1,
            "optional [sequence [tcollector]]": 2,
            "text": 2,
            "any": 11,
            "dict [sdkresource,resourcedatat]": 1,
            "callable [...,typingresourcet]": 1,
            "optional [compression]": 5,
            "typingsequence [sdkdatat]": 2,
            "keyvalue": 1,
            "list [typingresourcet]": 1,
            "exportservicerequestt": 1,
            "exportresultt": 1,
            "sequence [readablespan]": 2,
            "status": 2,
            "sdkstatus": 1,
            "protocol": 1,
            "ipinput": 6,
            "nodeendpoint": 6,
            "encodedlocalendpointt": 2,
            "optional [list [event]]": 2,
            "optional [list [dict]]": 1,
            "list [dict]": 1,
            "zipkin_pb2.endpoint": 2,
            "zipkin_pb2.span": 1,
            "optional [list]": 1,
            "optional [ipaddress]": 2,
            "encoder": 2,
            "list [trace]": 1,
            "jsonv1encoder": 1,
            "jsonv2encoder": 1,
            "protobufencoder": 1,
            "statuscode": 2,
            "idgenerator": 2,
            "trace_api.tracer": 3,
            "compression": 1,
            "basedistro": 1,
            "distribution": 1,
            "collection [str]": 2,
            "optional [dependencyconflict]": 3,
            "entrypoint": 1,
            "baseinstrumentor": 1,
            "measurement": 1,
            "optional [meter]": 2,
            "list [_proxymeter]": 1,
            "list [_proxyinstrument]": 1,
            "counter": 5,
            "updowncounter": 5,
            "observablecounter": 5,
            "histogram": 5,
            "observablegauge": 5,
            "observableupdowncounter": 5,
            "optional [instrumentt]": 1,
            "\"metrics.meter\"": 8,
            "tcallback": 4,
            "_tinstrumentcallbackgenerator": 2,
            "_tinstrumentcallback": 2,
            "iterable [measurement]": 3,
            "union [float,int]": 1,
            "instrumentationinfo": 10,
            "apimeterprovider": 1,
            "\"metricreader\"": 2,
            "\"metricexporter\"": 2,
            "\"view\"": 2,
            "logdata": 26,
            "sequence [logdata]": 8,
            "exportlogsservicerequest": 2,
            "logexportresult": 2,
            "optional [traceflags]": 2,
            "optional [severitynumber]": 2,
            "optional [any]": 2,
            "optional [resource]": 2,
            "logrecord": 6,
            "logprocessor": 6,
            "callable [...,callable [...,none]]": 2,
            "logging.logrecord": 6,
            "union [synchronousmultilogprocessor,concurrentmultilogprocessor]": 4,
            "logemitterprovider": 4,
            "optional [logemitterprovider]": 2,
            "logemitter": 4,
            "io": 2,
            "callable [...,str]": 2,
            "logexporter": 4,
            "optional [_flushrequest]": 6,
            "_flushrequest": 2,
            "severitynumber": 2,
            "callable [...,returnt]": 2,
            "list [optional [returnt]]": 2,
            "list [returnt]": 2,
            "generator [iterable [measurement],none,none]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 240,
        "typeChanged_dict_var": {
            "optional [_untrustedimplfactory] -> optional [_untrustedimplfactory [object]]": 1
        },
        "typeChanged_dict_arg": {
            "span -> 'span'": 3,
            "traceoptions -> 'traceoptions'": 1,
            "tracestate -> 'tracestate'": 1,
            "_untrustedimplfactory -> _untrustedimplfactory [_t]": 2,
            "'object' -> \"object\"": 4,
            "'span' -> \"span\"": 4,
            "'spancontext' -> \"spancontext\"": 2,
            "'traceoptions' -> \"traceoptions\"": 1,
            "'tracestate' -> \"tracestate\"": 1,
            "labelkeys -> list [str]": 3,
            "labelvalues -> list [str]": 8,
            "getter -> getter [_t]": 1,
            "object -> _t": 2,
            "setter -> setter [_t]": 1,
            "\"valuetype\" -> union [type [float],type [int]]": 3,
            "list [str] -> sequence [str]": 6,
            "\"object\" -> object": 2,
            "mapping [str,\"attributevalue\"] -> optional [mapping [str,\"attributevalue\"]]": 1,
            "int -> optional [int]": 2,
            "\"tracersource\" -> \"tracerprovider\"": 1,
            "\"instrumentationinfo\" -> instrumentationinfo": 1,
            "metric -> metrics_api.metrict": 1,
            "sequence [trace_api] -> sequence [event]": 1,
            "trace_api.event -> eventbase": 1,
            "trace_api.parentspan -> optional [trace_api]": 1,
            "none -> resource": 1,
            "\"observer\" -> metrics_api.observer": 1,
            "trace_api.span -> span": 1,
            "sequence [sdkspan] -> typingsequence [sdkspan]": 2,
            "dict [str,str] -> tuple [tuple [str,str]]": 1,
            "typingsequence [sdkspan] -> sequence [sdkspan]": 1,
            "optional [types] -> types.attributes": 2,
            "optional [mapping [str,\"attributevalue\"]] -> attributes": 1,
            "optional [attributes] -> attributes": 3,
            "tuple -> optional [tuple [any]]": 1,
            "sequence [sdkmetric] -> sequence [metricrecord]": 1,
            "metrics_api.metrict -> \"metrict\"": 1,
            "str -> optional [str]": 1,
            "channelcredentials -> optional [channelcredentials]": 1,
            "attributes -> \"attributes\"": 1,
            "sequence [metricrecord] -> sequence [exportrecord]": 2,
            "\"meter\" -> \"accumulator\"": 1,
            "optional [str] -> optional [sequence]": 3,
            "trace.idsgenerator -> idsgenerator": 1,
            "trace_api.idsgenerator -> idsgenerator": 2,
            "span -> readablespan": 9,
            "sequence [span] -> sequence [readablespan]": 2,
            "sdkspan -> readablespan": 11,
            "sequence [sdkspan] -> sequence [readablespan]": 2,
            "\"span\" -> \"readablespan\"": 3,
            "\"trace.span\" -> \"trace.readablespan\"": 1,
            "str -> optional [compression]": 1,
            "text -> str": 2,
            "sequence [spanexporter] -> dict [str,type [spanexporter]]": 1,
            "tcallback -> callbackt": 1
        },
        "typeChanged_dict_ret": {
            "span -> 'span'": 2,
            "iterator [span] -> iterator ['span']": 1,
            "spancontext -> 'spancontext'": 1,
            "iterator ['span'] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['span']": 1,
            "iterator [none] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 1,
            "'object' -> \"object\"": 2,
            "'spancontext' -> \"spancontext\"": 2,
            "'traceoptions' -> \"traceoptions\"": 1,
            "'tracestate' -> \"tracestate\"": 1,
            "'span' -> \"span\"": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['span'] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"span\"]": 1,
            "\"floatcounter\" -> union [\"floatcounter\",\"intcounter\"]": 1,
            "\"intcounter\" -> union [\"floatgauge\",\"intgauge\"]": 1,
            "\"floatgauge\" -> union [\"floatmeasure\",\"intmeasure\"]": 1,
            "\"intgauge\" -> \"object\"": 1,
            "\"countertimeseries\" -> \"counterhandle\"": 2,
            "\"gaugetimeseries\" -> \"gaugehandle\"": 2,
            "\"measuretimeseries\" -> \"measurehandle\"": 2,
            "union [\"floatcounter\",\"intcounter\"] -> none": 1,
            "union [\"floatgauge\",\"intgauge\"] -> none": 1,
            "union [\"floatmeasure\",\"intmeasure\"] -> \"object\"": 1,
            "none -> \"defaultmetrichandle\"": 1,
            "none -> \"counterhandle\"": 1,
            "\"counterhandle\" -> \"gaugehandle\"": 1,
            "\"counterhandle\" -> \"measurehandle\"": 1,
            "\"gaugehandle\" -> none": 1,
            "\"gaugehandle\" -> \"metric\"": 1,
            "\"measurehandle\" -> meter": 1,
            "\"measurehandle\" -> none": 1,
            "\"object\" -> object": 1,
            "\"trace_api.span\" -> \"span\"": 1,
            "int -> none": 2,
            "\"span\" -> trace_api.span": 1,
            "attribute(\n    value=name(\n        value='opentelemetry',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='trace',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).tracer -> attribute(\n    value=name(\n        value='opentelemetry',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='trace',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).tracersource": 1,
            "none -> \"trace_api.tracer\"": 1,
            "none -> bool": 6,
            "attribute(\n    value=name(\n        value='opentelemetry',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='trace',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).tracersource -> attribute(\n    value=name(\n        value='opentelemetry',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='trace',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).tracerprovider": 1,
            "none -> object": 2,
            "context -> object": 1,
            "meter -> \"meter\"": 1,
            "none -> meterprovider": 2,
            "\"labelset\" -> \"observer\"": 2,
            "\"defaultmetrichandle\" -> \"defaultboundinstrument\"": 1,
            "\"counterhandle\" -> \"boundcounter\"": 1,
            "\"measurehandle\" -> \"boundmeasure\"": 1,
            "basehandle -> baseboundinstrument": 1,
            "meterprovider -> none": 2,
            "trace.tracer -> none": 1,
            "\"labelset\" -> none": 3,
            "optional [str] -> none": 1,
            "\"boundmeasure\" -> \"boundvaluerecorder\"": 1,
            "union [\"tracerprovider\",\"meterprovider\"] -> provider": 1,
            "trace_api.span -> optional [span]": 1,
            "span -> none": 1,
            "str -> dict": 1,
            "none -> optional [monitoredresource]": 1,
            "optional [span] -> span": 1,
            "aggregator -> sequence [metricrecord]": 1,
            "\"decision\" -> \"samplingresult\"": 3,
            "exporttraceservicerequest -> none": 1,
            "statuscanonicalcode -> dict [str,str]": 1,
            "\"defaultboundinstrument\" -> none": 1,
            "\"boundupdowncounter\" -> \"defaultboundcounter\"": 1,
            "\"boundvaluerecorder\" -> \"defaultboundupdowncounter\"": 1,
            "\"metric\" -> \"counter\"": 2,
            "\"observer\" -> \"updowncounter\"": 2,
            "none -> \"valuerecorder\"": 1,
            "metrics_api.metrict -> metrics_api.counter": 1,
            "metrics_api.observer -> metrics_api.updowncounter": 1,
            "statuscanonicalcode -> dict": 1,
            "statuscanonicalcode -> statuscode": 1,
            "sequence [metricrecord] -> sequence [exportrecord]": 1,
            "tuple [sequence [spanexporter],sequence [metricsexporter]] -> sequence [tuple [str,object]]": 1,
            "trace.idsgenerator -> idsgenerator": 1,
            "none -> int": 1,
            "\"meterprovider\" -> \"tracerprovider\"": 1,
            "tuple [sequence [spanexporter],sequence [metricsexporter]] -> sequence [spanexporter]": 1,
            "none -> readablespan": 1,
            "bool -> none": 1,
            "idsgenerator -> idgenerator": 1,
            "trace.defaultspan -> trace.nonrecordingspan": 1,
            "keyvalue -> optional [compression]": 1,
            "str -> sequence [str]": 1,
            "none -> str": 1,
            "str -> int": 1,
            "bool -> optional [types]": 1,
            "none -> union [types,none]": 1,
            "optional [dict [str,str]] -> compression": 1,
            "\"meter\" -> none": 1,
            "meter -> none": 1,
            "logrecord -> attributes": 1,
            "sequence [spanexporter] -> dict [str,type [spanexporter]]": 1,
            "dict [str,type [spanexporter]] -> tuple [dict [str,type [spanexporter]],dict [str,type [logexporter]]]": 1,
            "counter -> apicounter": 1,
            "updowncounter -> apiupdowncounter": 1,
            "observablecounter -> apiobservablecounter": 1,
            "histogram -> apihistogram": 1,
            "observablegauge -> apiobservablegauge": 1,
            "observableupdowncounter -> apiobservableupdowncounter": 1,
            "meter -> bool": 1,
            "none -> meter": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 1807,
        "functionReturnsType_added": 1000,
        "variableType_added": 36,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 1279,
        "functionReturnsType_removed": 638,
        "variableType_removed": 18,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 115,
        "functionReturnsType_changed": 124,
        "variableType_changed": 1,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            4.545454545454546,
            4.545454545454546,
            4.526748971193416,
            77.77777777777779,
            4.545454545454546,
            2.4229074889867843,
            3.151862464183381,
            5.555555555555555,
            5.660377358490567,
            0.8620689655172413,
            1.9693654266958425,
            3.8461538461538463,
            6.25,
            1.7921146953405016,
            2.3178807947019866,
            1.0101010101010102,
            0.5208333333333333,
            11.711711711711711,
            10.084033613445378,
            6.122448979591836,
            0.3448275862068966,
            4.961832061068702,
            5.240174672489083,
            5.0,
            3.225806451612903,
            4.878048780487805,
            8.482142857142858,
            4.143646408839778,
            1.0050251256281406,
            0.9090909090909091,
            3.488372093023256,
            5.027932960893855,
            3.7037037037037033,
            0.45045045045045046,
            0.45045045045045046,
            7.872078720787208,
            7.046070460704606,
            1.0050251256281406,
            10.0,
            4.545454545454546,
            0.07587253414264036,
            1.8181818181818181,
            12.5,
            6.047516198704104,
            6.569343065693431,
            6.8181818181818175,
            2.923976608187134,
            2.7522935779816518,
            0.7194244604316548,
            9.473684210526317,
            5.970149253731343,
            0.33167495854063017,
            1.4814814814814816,
            2.0,
            4.477611940298507,
            0.5405405405405406,
            1.0416666666666665,
            8.717948717948717,
            17.073170731707318,
            2.158273381294964,
            0.4629629629629629,
            9.375,
            1.1764705882352942,
            0.398406374501992,
            3.058823529411765,
            1.3761467889908259,
            0.31007751937984496,
            1.8151815181518154,
            0.13679890560875513,
            9.63855421686747,
            1.1904761904761905,
            0.4761904761904762,
            0.8849557522123894,
            2.380952380952381,
            1.1111111111111112,
            0.9345794392523363,
            2.5665399239543727,
            5.294117647058823,
            1.92090395480226,
            1.937046004842615,
            15.909090909090908,
            2.7439024390243905,
            2.8503562945368173,
            5.333333333333334,
            5.88235294117647,
            2.029520295202952,
            0.516795865633075,
            4.484304932735426,
            0.7556675062972292,
            0.48134777376654636,
            3.7698412698412698,
            0.9280742459396751,
            0.31982942430703626,
            5.847953216374268,
            4.27807486631016,
            0.5681818181818182,
            0.3374578177727784,
            1.7301038062283738,
            4.938271604938271,
            0.058004640371229696,
            0.06510416666666666,
            3.954802259887006,
            1.1627906976744187,
            1.5990159901599015,
            0.5882352941176471,
            3.903345724907063,
            0.340522133938706,
            2.0,
            3.571428571428571,
            1.0309278350515463,
            9.170305676855897,
            6.5015479876160995,
            0.18083182640144665,
            13.17365269461078,
            8.0,
            0.91324200913242,
            0.7132667617689016,
            0.08498583569405099,
            0.9090909090909091,
            22.22222222222222,
            1.6129032258064515,
            0.6451612903225806,
            0.17271157167530224,
            2.631578947368421,
            0.130718954248366,
            0.13054830287206268,
            0.6329113924050633,
            2.0408163265306123,
            0.644122383252818,
            1.6129032258064515,
            2.857142857142857,
            0.5128205128205128,
            3.5294117647058822,
            2.272727272727273,
            0.9866511897852582,
            1.2221423436376708,
            7.142857142857142,
            0.2857142857142857,
            0.23014959723820483,
            1.1173184357541899,
            0.49019607843137253,
            1.5184381778741864,
            5.128205128205128,
            11.11111111111111,
            0.8130081300813009,
            17.073170731707318,
            0.6896551724137931,
            4.444444444444445,
            3.5294117647058822,
            0.4524886877828055,
            0.4591368227731864,
            0.36199095022624433,
            0.228310502283105,
            0.3125,
            0.9174311926605505,
            2.247191011235955,
            6.306306306306306,
            3.67965367965368,
            0.21321961620469082,
            4.10958904109589,
            0.6666666666666667,
            0.3972194637537239,
            6.25,
            3.125,
            0.4728132387706856,
            0.9900990099009901,
            25.0,
            0.27932960893854747,
            0.36036036036036034,
            2.564102564102564,
            33.33333333333333,
            10.0,
            1.2195121951219512,
            1.2195121951219512,
            0.487012987012987,
            6.666666666666667,
            0.15822784810126583,
            0.5319148936170213,
            5.05050505050505,
            3.278688524590164,
            1.9607843137254901,
            0.398406374501992,
            0.5586592178770949,
            0.8351488743645605,
            4.0,
            6.25,
            0.5562297734627831,
            0.5472092329121481,
            0.9911894273127754,
            2.2044088176352705,
            0.14194464158977999,
            0.18366597281743602,
            0.18482010842779695,
            0.10987286140323341,
            0.11142948105698822,
            0.021668472372697724,
            0.02176278563656148,
            1.935483870967742,
            21.951219512195124,
            0.6589785831960462,
            0.851063829787234,
            0.11862396204033215,
            3.125,
            6.25,
            6.813186813186813,
            6.96629213483146,
            7.199999999999999,
            0.7633587786259541,
            4.365079365079365,
            2.564102564102564,
            2.158273381294964,
            2.1621621621621623,
            1.257861635220126,
            2.1739130434782608,
            9.523809523809524,
            1.1764705882352942,
            1.5384615384615385,
            0.2546689303904924,
            42.028985507246375,
            2.9702970297029703,
            1.9607843137254901,
            3.4482758620689653,
            2.083333333333333,
            2.7777777777777777,
            1.13314447592068,
            0.8426966292134831,
            0.5102040816326531,
            4.672897196261682,
            4.761904761904762,
            1.744186046511628,
            1.7647058823529411,
            2.127659574468085,
            2.0408163265306123,
            2.898550724637681,
            1.2658227848101267,
            2.2988505747126435,
            2.912621359223301,
            1.4285714285714286,
            5.594405594405594,
            4.166666666666666,
            7.4074074074074066,
            17.281553398058254,
            3.2640949554896146,
            1.2746234067207416,
            7.608695652173914,
            10.0,
            1.0204081632653061,
            0.5825242718446602,
            0.2564102564102564,
            1.2658227848101267,
            1.5151515151515151,
            1.0101010101010102,
            3.0864197530864197,
            17.391304347826086,
            6.666666666666667,
            22.727272727272727,
            3.7037037037037033,
            2.0,
            9.090909090909092,
            0.12814762606522714,
            5.555555555555555,
            2.5,
            10.344827586206897,
            10.256410256410255,
            1.2711864406779663,
            7.142857142857142,
            9.090909090909092,
            3.8461538461538463,
            1.639344262295082,
            1.3986013986013985,
            0.35056967572305,
            12.5,
            3.076923076923077,
            0.6802721088435374,
            2.5974025974025974,
            0.3048780487804878,
            4.918032786885246,
            2.5974025974025974,
            2.840909090909091,
            3.4482758620689653,
            0.8849557522123894,
            2.898550724637681,
            2.2058823529411766,
            2.7950310559006213,
            0.40816326530612246,
            0.8002783576896312,
            0.390625,
            1.5151515151515151,
            3.9473684210526314,
            3.9215686274509802,
            4.25531914893617,
            2.0,
            7.446808510638298,
            0.11049723756906078,
            0.1838235294117647,
            1.0820559062218216,
            1.0807565295706996,
            1.6260162601626018,
            1.601423487544484,
            2.7777777777777777,
            50.0,
            16.666666666666664,
            0.7978723404255319,
            6.25,
            3.571428571428571,
            2.0793950850661624,
            4.3478260869565215,
            0.44150110375275936,
            3.9065593242708196,
            0.0249003984063745,
            7.418397626112759,
            5.344827586206897,
            5.194805194805195,
            5.333333333333334,
            2.274422073079791,
            0.6286013619696176,
            5.442176870748299,
            5.369127516778524,
            0.33670033670033667,
            14.285714285714285,
            3.508771929824561,
            1.7142857142857144,
            3.571428571428571,
            1.4492753623188406,
            3.3112582781456954,
            5.769230769230769,
            1.0416666666666665,
            1.7241379310344827,
            2.2598870056497176,
            0.8403361344537815,
            2.0408163265306123,
            0.4608294930875576,
            0.5622334238076774,
            0.5658161631258674,
            2.4165707710011506,
            3.160270880361174,
            4.761904761904762,
            0.579080709373869,
            0.5792903692976104,
            1.6998434354730485,
            2.1970477171301064,
            6.569343065693431,
            4.716981132075472,
            0.45513654096228867,
            1.183431952662722,
            1.2048192771084338,
            16.666666666666664,
            1.7467248908296942,
            2.0202020202020203,
            4.366812227074235,
            1.4705882352941175,
            2.7027027027027026,
            9.30232558139535,
            0.9009009009009009,
            1.8433179723502304,
            2.8368794326241136,
            1.238390092879257,
            0.2985074626865672,
            0.9745533297238765,
            2.005730659025788,
            2.2151898734177213,
            2.052597819114817,
            0.9708737864077669,
            1.8050541516245486,
            1.1764705882352942,
            0.4454342984409799,
            0.6211180124223602,
            0.7142857142857143,
            2.857142857142857,
            0.5681818181818182,
            0.7142857142857143,
            15.789473684210526,
            4.792332268370607,
            0.8653846153846154,
            1.6830294530154277,
            5.084745762711865,
            1.4285714285714286,
            8.647450110864744,
            0.5649717514124294,
            0.4754358161648178,
            4.513064133016627,
            7.758620689655173,
            7.82608695652174,
            3.4782608695652173,
            3.4782608695652173,
            9.187279151943462,
            3.5502958579881656,
            3.0303030303030303,
            3.189066059225513,
            2.658788774002954,
            1.8181818181818181,
            50.0,
            1.7241379310344827,
            3.1746031746031744,
            6.958250497017893,
            6.97211155378486,
            8.695652173913043,
            9.183673469387756,
            1.639344262295082,
            4.166666666666666,
            4.3478260869565215,
            1.9815059445178336,
            1.989389920424403,
            1.9815059445178336,
            1.9815059445178336,
            5.4945054945054945,
            2.4390243902439024,
            0.7518796992481203,
            15.859030837004406,
            2.8169014084507045,
            1.5414258188824663,
            1.8292682926829267,
            8.6687306501548,
            0.15337423312883436
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2019",
                "1083",
                "352",
                "5018",
                "128",
                "150",
                "2163",
                "4080",
                "144",
                "0",
                "0",
                "11577"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/open-telemetry/opentelemetry-python": 5018
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 1436,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            50.51
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/open-telemetry/opentelemetry-python": 1436
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2019": 422,
            "2020": 1044,
            "2021": 1377
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2019": 40,
            "2020": 117,
            "2021": 68
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2019": 120,
            "2020": 444,
            "2021": 286
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2018": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2019": [
                85,
                254,
                64,
                146,
                0,
                254
            ],
            "2020": [
                648,
                3497,
                290,
                2053,
                0,
                4612
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "open-telemetry-opentelemetry-python": 0,
                "libc@google.com": 4,
                "reyang@microsoft.com": 2,
                "christian.neumueller@dynatrace.com": 9,
                "yusuke@tsutsumi.io": 8,
                "mauricio@kinvolk.io": 17,
                "6374032+a-feld@users.noreply.github.com": 1,
                "lechen@microsoft.com": 37,
                "39923391+hectorhdzg@users.noreply.github.com": 6,
                "johanan.liebermann@gmail.com": 1,
                "aboten@lightstep.com": 27,
                "ocelotl@users.noreply.github.com": 22,
                "alrex.boten@gmail.com": 6,
                "5766239+jakemalachowski@users.noreply.github.com": 1,
                "joshuahlang@users.noreply.github.com": 1,
                "nir.hadassi@gmail.com": 2,
                "tahir@tahirbutt.com": 1,
                "a3xue@uwaterloo.ca": 3,
                "owais@users.noreply.github.com": 16,
                "tahir.butt@datadoghq.com": 1,
                "aaxue@google.com": 3,
                "ruslanbergutov@gmail.com": 2,
                "aaronabbott@google.com": 9,
                "connoradams@google.com": 2,
                "mario.jonke@dynatrace.com": 6,
                "ahlaw.dev@gmail.com": 1,
                "christoph@brand.rest": 1,
                "enruizno@uwaterloo.ca": 1,
                "abhilashgnan@gmail.com": 1,
                "nprajilesh@gmail.com": 1,
                "rob.knox.dev@gmail.com": 4,
                "wilguogithub@gmail.com": 1,
                "shreyagupta3011@gmail.com": 1,
                "shovnik.bhattacharya@gmail.com": 1,
                "azfaarq@amazon.com": 1,
                "enowell@amazon.com": 1,
                "srikanth.chekuri92@gmail.com": 17,
                "anton.ryzhov@zalando.de": 2,
                "losinskij@gmail.com": 1,
                "73838995+dmolenda-sumo@users.noreply.github.com": 1,
                "robertsben@users.noreply.github.com": 1,
                "nathanielruiz98@gmail.com": 1,
                "1755071+adriangb@users.noreply.github.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "open-telemetry-opentelemetry-python": 0,
                "bdrutu@google.com": 2,
                "S.Kanzhelev@live.com": 2,
                "libc@google.com": 71,
                "christian.neumueller@dynatrace.com": 33,
                "reyang@microsoft.com": 18,
                "calberto.cortez@gmail.com": 3,
                "christian+github@neumueller.me": 1,
                "yusuke@tsutsumi.io": 40,
                "6374032+a-feld@users.noreply.github.com": 5,
                "alban@kinvolk.io": 1,
                "mimworkmail@gmail.com": 5,
                "mauricio@kinvolk.io": 62,
                "lechen@microsoft.com": 97,
                "39923391+hectorhdzg@users.noreply.github.com": 18,
                "ramthi@users.noreply.github.com": 1,
                "johanan.liebermann@gmail.com": 1,
                "johannes@kinvolk.io": 3,
                "alrex.boten@gmail.com": 14,
                "gliptak@gmail.com": 2,
                "clsung@gmail.com": 2,
                "aboten@lightstep.com": 196,
                "ocelotl@users.noreply.github.com": 103,
                "danielgonzalezlopes@gmail.com": 6,
                "5766239+jakemalachowski@users.noreply.github.com": 2,
                "gopavel0@gmail.com": 1,
                "joshuahlang@users.noreply.github.com": 2,
                "ThePumpingLemma@users.noreply.github.com": 1,
                "lizf@honeycomb.io": 2,
                "mario.jonke@dynatrace.com": 18,
                "31159882+disfluxly@users.noreply.github.com": 1,
                "61800298+ffe4@users.noreply.github.com": 12,
                "owais@users.noreply.github.com": 62,
                "gky360@gmail.com": 1,
                "nir.hadassi@gmail.com": 3,
                "tahir@tahirbutt.com": 2,
                "a3xue@uwaterloo.ca": 4,
                "hakon@aamdal.com": 2,
                "cnnr252@gmail.com": 1,
                "connoradams@google.com": 9,
                "daisuketaniwaki@gmail.com": 3,
                "tahir.butt@datadoghq.com": 11,
                "yashmehrotra95@gmail.com": 1,
                "ruslanbergutov@gmail.com": 6,
                "vladimir.webdev@gmail.com": 1,
                "emmanuel.courreges@orange.com": 3,
                "aaxue@google.com": 13,
                "aaronabbott@google.com": 24,
                "sethmaxwl@gmail.com": 1,
                "mustin.eric@gmail.com": 2,
                "trust.pradeep@gmail.com": 4,
                "abhilashgnan@gmail.com": 4,
                "jonaherosenblum@gmail.com": 1,
                "34178459+aravinsiva@users.noreply.github.com": 1,
                "sartx007@gmail.com": 1,
                "apostolich@gmail.com": 1,
                "681004+thomasdesr@users.noreply.github.com": 1,
                "mitchell@lightstep.com": 1,
                "akoumjian@users.noreply.github.com": 1,
                "simonthoby@live.fr": 1,
                "tuandatk25a@gmail.com": 1,
                "gunnlaugur@gmail.com": 1,
                "sflanders@splunk.com": 1,
                "florimond.manca@gmail.com": 1,
                "liming.d.pro@gmail.com": 2,
                "alertedsnake@users.noreply.github.com": 4,
                "ahlaw.dev@gmail.com": 2,
                "wilguogithub@gmail.com": 2,
                "christoph@brand.rest": 1,
                "ebrake@ebrake.info": 1,
                "enruizno@uwaterloo.ca": 1,
                "liujasn@amazon.com": 1,
                "nprajilesh@gmail.com": 2,
                "laamos@amazon.com": 1,
                "paul@dreamisle.ca": 1,
                "enoble@oreilly.com": 1,
                "rydzyk69@gmail.com": 1,
                "72463443+stschenk@users.noreply.github.com": 1,
                "enowell@amazon.com": 21,
                "pavan.krish123@gmail.com": 1,
                "nico.chari@gmail.com": 2,
                "patrick_yang1996@hotmail.com": 1,
                "rob.knox.dev@gmail.com": 5,
                "704735206@qq.com": 1,
                "srikanth.chekuri92@gmail.com": 54,
                "shreyagupta3011@gmail.com": 1,
                "rickychukw@gmail.com": 1,
                "shovnik.bhattacharya@gmail.com": 1,
                "azfaar.qureshi@gmail.com": 1,
                "azfaarq@amazon.com": 1,
                "lilotom@gmail.com": 1,
                "31932630+snyder114@users.noreply.github.com": 3,
                "s27y@hotmail.com": 1,
                "abtin@riseup.net": 1,
                "39820442+Rashmi-K-A@users.noreply.github.com": 1,
                "55284676+dmarar@users.noreply.github.com": 3,
                "mails@violalyu.com": 1,
                "anton@ryzhov.me": 1,
                "shovnik@amazon.com": 1,
                "anton.ryzhov@zalando.de": 3,
                "morgan_mclean@hotmail.com": 2,
                "ewan.higgs@gmail.com": 1,
                "siimkallas@gmail.com": 1,
                "losinskij@gmail.com": 1,
                "73838995+dmolenda-sumo@users.noreply.github.com": 1,
                "mrcn.zrmb@gmail.com": 1,
                "manojpandey1996@gmail.com": 1,
                "chi.jonathanwong@gmail.com": 2,
                "austin@lightstep.com": 1,
                "way@whoop.com": 1,
                "hairmare@purplehaze.ch": 1,
                "jcchavezs@gmail.com": 1,
                "kristian@spritelink.net": 1,
                "elindy26@gmail.com": 2,
                "33990804+c-kruse@users.noreply.github.com": 1,
                "ell22@duke.edu": 1,
                "5293167+marcosflobo@users.noreply.github.com": 1,
                "dgetu00@gmail.com": 1,
                "jlisee@gmail.com": 1,
                "robertsben@users.noreply.github.com": 3,
                "eunice98k@gmail.com": 1,
                "mohanjishnu@gmail.com": 1,
                "raj.nishtala@gmail.com": 1,
                "nathanielruiz98@gmail.com": 7,
                "60111015+kuerbis-martin@users.noreply.github.com": 1,
                "major@mhtx.net": 1,
                "145104+ymotongpoo@users.noreply.github.com": 1,
                "garcia.olais@gmail.com": 1,
                "code@musicinmybrain.net": 2,
                "amirgiraffe@gmail.com": 1,
                "mattp.droid@gmail.com": 1,
                "45812677+JamesJHPark@users.noreply.github.com": 2,
                "chalin@users.noreply.github.com": 5,
                "81902191+oxeye-nikolay@users.noreply.github.com": 1,
                "andrew.matteson@appliedbiomath.com": 1,
                "benjaminsky@gmail.com": 1,
                "software@nmarier.com": 1,
                "thanos@diacakis.com": 1,
                "tkern@arnatious.com": 1,
                "1755071+adriangb@users.noreply.github.com": 2,
                "4194920+tigrannajaryan@users.noreply.github.com": 1,
                "adamantike@users.noreply.github.com": 1,
                "robb@thekidds.org": 1,
                "matt.r.oberle@gmail.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]