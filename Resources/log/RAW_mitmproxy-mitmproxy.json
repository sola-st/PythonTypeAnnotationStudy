[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 7425,
        "commit_year_dict": {
            "2015": 1379,
            "2016": 2393,
            "2017": 1328,
            "2018": 696,
            "2019": 299,
            "2020": 813,
            "2021": 517
        },
        "loc_year_edit": {
            "2015": 334960,
            "2016": 1709272,
            "2017": 195669,
            "2018": 100702,
            "2019": 24921,
            "2020": 151637,
            "2021": 101382
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 347,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 5380,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2016": 456,
            "2017": 399,
            "2018": 156,
            "2019": 49,
            "2020": 1566,
            "2021": 662
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2016": 165,
            "2017": 164,
            "2018": 59,
            "2019": 18,
            "2020": 1013,
            "2021": 321
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2016": 16,
            "2017": 39,
            "2018": 18,
            "2019": 15,
            "2020": 146,
            "2021": 118
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 3288,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "tserializable": 19,
            "io.binaryio": 6,
            "collections.deque": 4,
            "int": 120,
            "bytes": 266,
            "none": 228,
            "tuple [tserializable,bytes]": 3,
            "str": 450,
            "\"mitmproxy.console.master.consolemaster\"": 8,
            "models.httpflow": 1,
            "bool": 275,
            "\"grideditor\"": 6,
            "optional [int]": 11,
            "tuple [iterable [bytes],container [int]]": 2,
            "cell": 4,
            "any": 22,
            "optional [str]": 85,
            "iterable [list]": 4,
            "callable [...,none]": 5,
            "sequence [list]": 2,
            "mapping [union [str,bytes],union [str,bytes]]": 2,
            "generator [tuple [union [str,bytes],union [str,bytes]],none,none]": 1,
            "optional [typing]": 2,
            "dict": 28,
            "tfilter": 3,
            "clientconnection": 2,
            "serverconnection": 3,
            "sequence [str]": 9,
            "sequence [tuple [str,str,str]]": 2,
            "tuple [str,str]": 1,
            "sequence [tuple [str,str]]": 3,
            "union [str,none,bool]": 2,
            "moptions.options": 2,
            "models.flow": 1,
            "\"mitmproxy.web.master.webmaster\"": 1,
            "optional [authentication]": 2,
            "union [str,bytes]": 40,
            "multidict.multidictview": 9,
            "anystr": 10,
            "union [dict [anystr,anystr],iterable [tuple [bytes,bytes]]]": 3,
            "connections.clientconnection": 4,
            "connections.serverconnection": 5,
            "http.httpflow": 94,
            "flow.flow": 17,
            "\"mitmproxy.tools.web.master.webmaster\"": 1,
            "typing.any": 27,
            "type": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [type]": 1,
            "optional [tuple [str,str]]": 2,
            "\"tdisplay\"": 1,
            "pydivert.windivert": 5,
            "pydivert.packet": 2,
            "log.logentry": 4,
            "iterable [flow]": 2,
            "io.flowreader": 1,
            "http_replay.requestreplaythread": 1,
            "\"mitmproxy.tools.console.master.consolemaster\"": 4,
            "httpclient.httpresponse": 6,
            "optional [io [str]]": 1,
            "socket.socket": 10,
            "tuple [str,int]": 2,
            "proxyconfig": 1,
            "iterable [tuple [union [str,bytes],union [str,bytes]]]": 1,
            "optional [bytes]": 36,
            "view": 3,
            "optional [view]": 2,
            "iterable [list [tuple [str,anystr]]]": 1,
            "iterator [t]": 1,
            "iterator [tuple [optional [t]]]": 1,
            "token": 9,
            "iterable [token]": 2,
            "optional [anystr]": 2,
            "options": 5,
            "sequence [union [tuple [str,str,str],str]]": 1,
            "metadata": 4,
            "websocketmessage": 1,
            "tuple [str,str,str]": 1,
            "http.httpresponse": 6,
            "optional [http]": 7,
            "httpresponse": 3,
            "cookies": 10,
            "optional [xssdata]": 4,
            "optional [sqlidata]": 4,
            "vulndata": 6,
            "list [str]": 12,
            "typing.type": 2,
            "serverspec": 1,
            "tuple [str,serverspec]": 1,
            "dict [str,any]": 2,
            "dict [union [bytes,str],any]": 2,
            "tuple": 11,
            "dict [str,str]": 1,
            "torigin": 1,
            "tuple [list [tpairs],int]": 1,
            "iterable [str]": 1,
            "list [tsetcookie]": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='sequence',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [flow]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 4,
            "tuple [str,iterable [list [tuple [str,anystr]]]]": 1,
            "command.cuts": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,bytes]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,typing [str]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='sequence',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing]": 1,
            "teventgenerator": 13,
            "iterable [tuple [str,str]]": 2,
            "optional [exceptions]": 1,
            "list [tuple [str,str]]": 3,
            "tchoice": 1,
            "command.path": 1,
            "command.cmd": 1,
            "command.arg": 1,
            "strbytes": 4,
            "attribute(\n    value=name(\n        value='mitmproxy',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='types',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).data": 1,
            "typecheck.type": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,int]": 3,
            "flowfilter.tfilter": 3,
            "mutablemapping [connections,tuple [str,str]]": 1,
            "dict [torigin,dict [str,str]]": 1,
            "optional [flowfilter]": 3,
            "list [view]": 1,
            "dict [str,list [view]]": 1,
            "sequence [type [_action]]": 1,
            "sequence [type [_rex]]": 1,
            "httprequest": 4,
            "flow.error": 4,
            "mapping [str,str]": 2,
            "dict [str,type [flow]]": 1,
            "options.options": 4,
            "list [tpairs]": 1,
            "tpairs": 1,
            "messagedata": 3,
            "config.proxyconfig": 2,
            "controller.channel": 3,
            "optional [net_tls]": 2,
            "websocketflow": 1,
            "dict [object,wsconnection]": 1,
            "mutablemapping [str,any]": 1,
            "list [tcpmessage]": 3,
            "list [websocketmessage]": 2,
            "queue.queue": 2,
            "tcp.tcpflow": 12,
            "buildenviron": 5,
            "typing.binaryio": 1,
            "http_pb2.httprequest": 2,
            "http_pb2.clientconnection": 2,
            "http_pb2.serverconnection": 2,
            "http_pb2.httperror": 2,
            "http_pb2.httpresponse": 1,
            "http_pb2.httpflow": 2,
            "httpflow": 67,
            "mheaders.headers": 1,
            "float": 39,
            "requestdata": 2,
            "responsedata": 2,
            "optional [httpresponse]": 1,
            "optional [flow]": 3,
            "optional [callable [...,tuple [str,int]]]": 1,
            "list [iterator [optional [t]]]": 1,
            "union [str,io]": 1,
            "list [state]": 1,
            "command.command": 1,
            "attribute(\n    value=name(\n        value='mitmproxy',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='flow',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).flow": 1,
            "urwid.widget": 1,
            "base.tviewline": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [base]": 1,
            "beautifulsoup": 6,
            "dict [str,typing [beautifulsoup]]": 2,
            "dict [flowfilter,any]": 3,
            "callable": 14,
            "textio": 6,
            "dict [typing [flowfilter,str],any]": 2,
            "generator [any,none,none]": 2,
            "list [any]": 6,
            "path": 2,
            "dict [str,type [urlindexwriter]]": 2,
            "optional [union [str,flowfilter]]": 2,
            "urlindexwriter": 2,
            "union [str,path]": 2,
            "union [str,flowfilter]": 2,
            "injectiongenerator": 2,
            "contentviews.tviewresult": 2,
            "http.headers": 5,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [flowfilter,str,str]": 1,
            "type [t]": 1,
            "t": 3,
            "union [none,str,bytes]": 11,
            "optional [tuple [str,str,dict [str,str]]]": 1,
            "optional [headers]": 6,
            "union [callable,bool]": 2,
            "headers": 5,
            "optional [float]": 25,
            "union [headers,tuple [tuple [bytes,bytes],...]]": 3,
            "union [none,headers,tuple [tuple [bytes,bytes],...]]": 4,
            "union [bytes,str]": 3,
            "union [headers,dict [union [str,bytes],union [str,bytes]],iterable [tuple [bytes,bytes]]]": 2,
            "\"response\"": 2,
            "tuple [str,optional [int]]": 1,
            "http.httprequest": 6,
            "http.request": 1,
            "http.response": 3,
            "union [none,bytes]": 1,
            "union [none,str]": 1,
            "mitmclidirector": 4,
            "asyncio.task": 3,
            "coroutine": 1,
            "optional [tuple]": 7,
            "optional [asyncio]": 1,
            "mutablemapping [compat,tuple [str,str]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [certs]": 2,
            "compat.client": 1,
            "compat.server": 1,
            "client": 8,
            "server": 7,
            "connection": 29,
            "context": 47,
            "event": 5,
            "events.event": 92,
            "clientservercontext": 11,
            "selectors.baseselector": 2,
            "layer": 10,
            "commands.command": 8,
            "mutablemapping [connection,streamio]": 3,
            "commands.openconnection": 3,
            "mutablemapping [connection,ssl]": 5,
            "commands.hook": 4,
            "asyncio.abstracteventloop": 3,
            "websocket.websocketflow": 4,
            "commands.tcommandgenerator": 51,
            "tcommandgenerator": 1,
            "list [\"mitmproxy.proxy2.layer.layer\"]": 1,
            "layer.nextlayer": 2,
            "layer.layer": 7,
            "hostmatcher": 1,
            "union [bytes,bool]": 1,
            "mutablemapping [context,ssl]": 3,
            "mutablemapping [context,connectionstate]": 1,
            "mutablemapping [context,bytearray]": 1,
            "optional [tlsclienthello]": 1,
            "context.context": 30,
            "commands.senddata": 3,
            "events.datareceived": 10,
            "context.connection": 15,
            "generator [commands,none,bytes]": 1,
            "iterator [bytes]": 2,
            "sequence [bytes]": 4,
            "mutablemapping [ssl,bytearray]": 3,
            "context.server": 19,
            "master.master": 2,
            "asyncio.abstractserver": 1,
            "tutils.playbook": 1,
            "ssltest": 1,
            "io.bytesio": 1,
            "server.connectionhandler": 3,
            "proxy.rootcontext": 2,
            "httpcommand": 4,
            "dict [tflowid,semantics]": 2,
            "dict [commands,semantics]": 2,
            "semantics.httplayer": 2,
            "list [h2]": 4,
            "dict [tflowid,int]": 2,
            "httpevent": 10,
            "iterable [bytes]": 3,
            "list [bytes]": 8,
            "tuple [bytes,int]": 1,
            "tuple [str,bytes,optional [bytes],optional [bytes],optional [int],optional [bytes],bytes]": 1,
            "request.request": 2,
            "tuple [bytes,int,bytes]": 1,
            "response.response": 1,
            "union [bytes,bool,none]": 1,
            "optional [layer]": 3,
            "events.start": 2,
            "bytearray": 3,
            "generator [commands,any,bool]": 3,
            "establishservertls": 1,
            "optional [context]": 7,
            "optional [ssl]": 3,
            "optional [establishservertls]": 1,
            "connectionstate": 7,
            "\"context\"": 2,
            "ssl.connection": 2,
            "certs.certstore": 1,
            "tls.tlsstart": 3,
            "tuple [certs,ssl,str]": 2,
            "hook": 3,
            "tls.clienthellohookdata": 1,
            "optional [sequence [certs]]": 2,
            "streamid": 13,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [httpevent]": 2,
            "optional [\"server\"]": 1,
            "tunnelstate": 3,
            "optional [commands]": 4,
            "receivebuffer": 4,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 76,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [tuple [bool,optional [str]]]": 9,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [optional [str]]": 2,
            "commandgenerator [none]": 5,
            "classvar [h2]": 1,
            "bufferedh2connection": 1,
            "callable [...,httpflow]": 1,
            "framefactory": 3,
            "openconnection": 2,
            "list [hyperframe]": 2,
            "playbook": 2,
            "appdata": 1,
            "union [test_tls,ssl]": 2,
            "context.client": 8,
            "serverconnectionhookdata": 6,
            "address": 10,
            "optional [certs]": 8,
            "\"client\"": 3,
            "list [layer]": 2,
            "\"layerstack\"": 2,
            "optional [httpflow]": 2,
            "optional [response]": 1,
            "dict [str,tuple [any,any,any]]": 2,
            "tuple [str,int,bytes,bytes,bytes,bytes,bytes]": 1,
            "headers.headers": 1,
            "list [tuple [bytes,bytes]]": 2,
            "union [bytes,literal [true],none]": 3,
            "asyncio.streamreader": 3,
            "asyncio.streamwriter": 3,
            "foocommand": 4,
            "optional [address]": 16,
            "list [events]": 2,
            "mutablemapping [context,tuple [str,str]]": 1,
            "union [bool,\"mitmproxy.proxy.layer.layer\"]": 1,
            "classvar [str]": 5,
            "dict [str,type [hook]]": 2,
            "literal [\"error\",\"warn\",\"info\",\"alert\",\"debug\"]": 1,
            "sequence [certs]": 2,
            "union [bytes,none]": 1,
            "optional [server_spec]": 2,
            "list [\"mitmproxy.proxy.layer.layer\"]": 1,
            "\"server\"": 2,
            "commandgenerator": 2,
            "optional [paused]": 1,
            "deque [events]": 1,
            "events.commandreply": 1,
            "\"nextlayer\"": 1,
            "list [mevents]": 1,
            "mevents.event": 2,
            "optional [streamid]": 1,
            "union [callable [...,layer [none]],callable]": 1,
            "tbodyreader": 2,
            "type [union [requestprotocolerror,responseprotocolerror]]": 1,
            "type [union [requestdata,responsedata]]": 1,
            "type [union [requestendofmessage,responseendofmessage]]": 1,
            "events.connectionevent": 5,
            "net_http.request": 1,
            "net_http.response": 1,
            "optional [tcp]": 1,
            "tlsstartdata": 2,
            "clienthellodata": 1,
            "tuple [playbook,framefactory]": 1,
            "asyncio.event": 1,
            "dict [str,type [mitmproxyevent]]": 1,
            "set [str]": 3,
            "sequence [mitmproxy]": 3,
            "logentry": 1,
            "nextlayer": 1,
            "events.mitmproxyevent": 2,
            "list [type [events]]": 1,
            "dict [str,type [eventhook]]": 1,
            "union [net_http,tcpmessage,websocketmessage]": 1,
            "union [headers,mapping [str,union [str,bytes]],iterable [tuple [bytes,bytes]]]": 1,
            "\"request\"": 1,
            "mutablemapping [connection,tuple [str,str]]": 2,
            "union [str,literal [true],none]": 2,
            "union [str,none]": 1,
            "list [type [hooks]]": 1,
            "tuple [tuple,...]": 1,
            "vt": 5,
            "kt": 9,
            "iterator [kt]": 2,
            "list [vt]": 2,
            "iterator [vt]": 1,
            "abstractset [tuple [kt,vt]]": 1,
            "\"multidict[kt,vt]\"": 1,
            "iterable [tuple [bytes,bytes]]": 1,
            "tuple [tuple [bytes,bytes],...]": 1,
            "iterator [str]": 1,
            "list [union [str,bytes]]": 1,
            "abstractset [tuple [str,str]]": 1,
            "tuple [str,...]": 2,
            "attribute(\n    value=name(\n        value='multidict',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='multidictview',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,str]": 1,
            "attribute(\n    value=name(\n        value='multidict',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='multidictview',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [bytes,bytes]": 1,
            "opcode": 2,
            "sequence [vt]": 1,
            "list [tuple [kt,vt]]": 1,
            "optional [websocketdata]": 1,
            "optional [bool]": 2,
            "union [int,opcode]": 1,
            "websocketmessagestate": 2,
            "dict [tuple,proxyconnectionhandler]": 1,
            "sequence [flow]": 1,
            "events.messageinjected": 1,
            "flow": 1,
            "server_hooks.serverconnectionhookdata": 2,
            "optmanager.optmanager": 1,
            "tls.tlsstartdata": 1,
            "websocketdata": 1,
            "optional [io]": 4,
            "literal [\"warn\",\"info\"]": 1,
            "union [bytes,iterable [bytes]]": 1,
            "binaryio": 2,
            "io [bytes]": 1,
            "dummyflow": 1,
            "net_tls.clienthello": 1,
            "optmanager._option": 2,
            "union [literal [true],none,connection]": 2,
            "union [literal [true],none,http]": 2,
            "union [literal [true],none,flow]": 1,
            "union [literal [true],none,websocket]": 1,
            "websocket.websocketdata": 1,
            "socks5authdata": 1,
            "modes.socks5authdata": 2,
            "optional [validator]": 1,
            "ldap3.connection": 1,
            "ldap3.server": 1,
            "connection.client": 1,
            "set": 2,
            "connection.address": 3,
            "tlsstrategy": 1,
            "tls.clienthellodata": 1,
            "tls.tlshookdata": 1,
            "tlshookdata": 1,
            "list [int]": 4,
            "list [tuple [int,bytes]]": 1,
            "clienthello": 1,
            "connection.connection": 1,
            "union [str,tfilter]": 1,
            "viewconfig": 1,
            "tls.tlsdata": 1,
            "tlsdata": 3
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 1740,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "tserializable": 12,
            "io.binaryio": 4,
            "collections.deque": 2,
            "int": 56,
            "bytes": 128,
            "none": 91,
            "tuple [tserializable,bytes]": 2,
            "str": 184,
            "any": 10,
            "dict": 18,
            "\"mitmproxy.console.master.consolemaster\"": 5,
            "models.httpflow": 1,
            "\"grideditor\"": 3,
            "optional [int]": 5,
            "bool": 167,
            "tuple [iterable [bytes],container [int]]": 1,
            "iterable [list]": 2,
            "callable [...,none]": 3,
            "sequence [list]": 1,
            "cell": 2,
            "optional [str]": 56,
            "optional [typing]": 1,
            "clientconnection": 3,
            "serverconnection": 3,
            "models.flow": 1,
            "\"mitmproxy.web.master.webmaster\"": 1,
            "optional [authentication]": 2,
            "union [str,none,bool]": 2,
            "union [str,bytes]": 19,
            "multidict.multidictview": 6,
            "anystr": 1,
            "union [dict [anystr,anystr],iterable [tuple [bytes,bytes]]]": 1,
            "sequence [tuple [str,str]]": 2,
            "optional [tuple [str,str]]": 1,
            "optional [io [str]]": 2,
            "mapping [union [str,bytes],union [str,bytes]]": 1,
            "generator [tuple [union [str,bytes],union [str,bytes]],none,none]": 1,
            "httpclient.httpresponse": 3,
            "sequence [str]": 10,
            "sequence [union [tuple [str,str,str],str]]": 3,
            "type": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [type]": 1,
            "io.flowreader": 1,
            "\"tdisplay\"": 1,
            "flow.flow": 4,
            "iterable [flow]": 1,
            "dict [union [bytes,str],any]": 2,
            "http.httpflow": 51,
            "typing.anystr": 1,
            "typing.any": 4,
            "strbytes": 4,
            "http_replay.requestreplaythread": 1,
            "options.options": 3,
            "controller.channel": 3,
            "buildenviron": 1,
            "typing.binaryio": 1,
            "\"mitmproxy.tools.console.master.consolemaster\"": 1,
            "httprequest": 3,
            "httpresponse": 3,
            "flow.error": 2,
            "connections.serverconnection": 3,
            "connections.clientconnection": 2,
            "socket.socket": 8,
            "tuple [str,int]": 2,
            "union [str,io]": 1,
            "list [state]": 1,
            "list [tcpmessage]": 2,
            "float": 13,
            "list [str]": 5,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,int]": 1,
            "tcp.tcpflow": 7,
            "beautifulsoup": 3,
            "dict [str,typing [beautifulsoup]]": 1,
            "httpflow": 38,
            "dict [flowfilter,any]": 2,
            "callable": 7,
            "textio": 5,
            "dict [typing [flowfilter,str],any]": 1,
            "generator [any,none,none]": 1,
            "list [any]": 5,
            "path": 1,
            "dict [str,type [urlindexwriter]]": 1,
            "optional [union [str,flowfilter]]": 1,
            "urlindexwriter": 1,
            "union [str,path]": 1,
            "union [str,flowfilter]": 1,
            "injectiongenerator": 1,
            "list [tuple [str,str]]": 1,
            "cookies": 5,
            "optional [xssdata]": 2,
            "optional [sqlidata]": 2,
            "vulndata": 3,
            "contentviews.tviewresult": 1,
            "flowfilter.tfilter": 2,
            "optional [http]": 3,
            "messagedata": 2,
            "base.tviewline": 1,
            "mutablemapping [connections,tuple [str,str]]": 1,
            "events.event": 76,
            "connection": 18,
            "selectors.baseselector": 2,
            "tuple": 6,
            "layer": 7,
            "event": 3,
            "mutablemapping [connection,streamio]": 2,
            "commands.openconnection": 1,
            "mutablemapping [connection,ssl]": 5,
            "client": 6,
            "server": 4,
            "context": 28,
            "tcommandgenerator": 2,
            "clientservercontext": 6,
            "commands.tcommandgenerator": 43,
            "optional [bytes]": 20,
            "websocket.websocketflow": 4,
            "layer.layer": 6,
            "events.datareceived": 7,
            "generator [commands,none,bytes]": 1,
            "optional [server]": 1,
            "mutablemapping [context,connectionstate]": 1,
            "optional [tlsclienthello]": 1,
            "context.connection": 13,
            "queue.queue": 2,
            "asyncio.abstracteventloop": 2,
            "io.bytesio": 1,
            "server.connectionhandler": 3,
            "\"buffer\"": 1,
            "optional [list [bytes]]": 1,
            "mutablemapping [ssl,bytearray]": 3,
            "mutablemapping [context,ssl]": 3,
            "commands.senddata": 3,
            "events.start": 3,
            "httpcommand": 4,
            "dict [tflowid,semantics]": 2,
            "dict [commands,semantics]": 2,
            "semantics.httplayer": 2,
            "list [h2]": 4,
            "dict [tflowid,int]": 2,
            "httpevent": 9,
            "optional [layer]": 3,
            "context.context": 19,
            "context.server": 9,
            "bytearray": 3,
            "generator [commands,any,bool]": 2,
            "commands.command": 5,
            "proxy.rootcontext": 2,
            "streamid": 12,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [httpevent]": 1,
            "http.httprequest": 5,
            "http.httpresponse": 4,
            "hook": 3,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 59,
            "union [bytes,bool]": 1,
            "optional [tuple]": 3,
            "tunnelstate": 2,
            "optional [commands]": 4,
            "optional [context]": 3,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [tuple [bool,optional [str]]]": 7,
            "receivebuffer": 3,
            "iterable [bytes]": 3,
            "framefactory": 3,
            "playbook": 1,
            "callable [...,httpflow]": 1,
            "optional [sequence [certs]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing]": 1,
            "mutablemapping [compat,tuple [str,str]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [certs]": 2,
            "http_pb2.httprequest": 2,
            "http_pb2.httpresponse": 2,
            "http_pb2.clientconnection": 2,
            "http_pb2.serverconnection": 2,
            "http_pb2.httperror": 2,
            "http_pb2.httpflow": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [flow]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [httpflow]": 1,
            "config.proxyconfig": 1,
            "optional [net_tls]": 2,
            "websocketflow": 1,
            "dict [object,wsconnection]": 1,
            "union [bool,\"mitmproxy.proxy2.layer.layer\"]": 1,
            "classvar [str]": 5,
            "dict [str,type [hook]]": 2,
            "literal [\"error\",\"warn\",\"info\",\"alert\",\"debug\"]": 1,
            "connectionstate": 6,
            "optional [address]": 14,
            "sequence [certs]": 2,
            "sequence [bytes]": 2,
            "union [bytes,literal [true],none]": 2,
            "optional [float]": 15,
            "address": 5,
            "union [bytes,none]": 1,
            "optional [server_spec]": 2,
            "options": 2,
            "list [\"mitmproxy.proxy2.layer.layer\"]": 1,
            "\"client\"": 2,
            "optional [certs]": 5,
            "\"server\"": 2,
            "\"context\"": 2,
            "commandgenerator": 2,
            "optional [paused]": 1,
            "deque [events]": 1,
            "events.commandreply": 1,
            "\"nextlayer\"": 2,
            "list [mevents]": 1,
            "mevents.event": 2,
            "commandgenerator [none]": 2,
            "optional [httpflow]": 1,
            "optional [streamid]": 1,
            "union [callable [...,layer [none]],callable]": 1,
            "tbodyreader": 2,
            "type [union [requestprotocolerror,responseprotocolerror]]": 1,
            "type [union [requestdata,responsedata]]": 1,
            "type [union [requestendofmessage,responseendofmessage]]": 1,
            "events.connectionevent": 5,
            "net_http.request": 1,
            "net_http.response": 1,
            "optional [tcp]": 1,
            "optional [ssl]": 2,
            "tlsstartdata": 1,
            "clienthellodata": 1,
            "ssl.connection": 1,
            "iterator [bytes]": 1,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [optional [str]]": 1,
            "context.client": 3,
            "serverconnectionhookdata": 3,
            "list [events]": 1,
            "list [layer]": 1,
            "\"layerstack\"": 1,
            "asyncio.streamreader": 1,
            "asyncio.streamwriter": 1,
            "openconnection": 1,
            "list [hyperframe]": 1,
            "tuple [playbook,framefactory]": 1,
            "dict [str,tuple [any,any,any]]": 1,
            "foocommand": 2,
            "optional [exceptions]": 1,
            "list [bytes]": 4,
            "tuple [certs,ssl,str]": 1,
            "list [tuple [bytes,bytes]]": 1,
            "request.request": 2,
            "optional [response]": 1,
            "tuple [str,int,bytes,bytes,bytes,bytes,bytes]": 1,
            "tuple [bytes,int,bytes]": 1,
            "headers.headers": 1,
            "response.response": 1,
            "dict [str,type [mitmproxyevent]]": 1,
            "set [str]": 2,
            "sequence [mitmproxy]": 2,
            "dict [str,type [eventhook]]": 1,
            "union [none,str,bytes]": 5,
            "headers": 3,
            "optional [headers]": 4,
            "union [callable,bool]": 1,
            "requestdata": 1,
            "union [headers,tuple [tuple [bytes,bytes],...]]": 2,
            "union [none,headers,tuple [tuple [bytes,bytes],...]]": 2,
            "union [bytes,str]": 2,
            "union [headers,dict [union [str,bytes],union [str,bytes]],iterable [tuple [bytes,bytes]]]": 1,
            "\"request\"": 1,
            "responsedata": 1,
            "union [headers,mapping [str,union [str,bytes]],iterable [tuple [bytes,bytes]]]": 1,
            "\"response\"": 1,
            "response": 1,
            "request": 1,
            "mutablemapping [context,tuple [str,str]]": 1,
            "union [str,literal [true],none]": 3,
            "union [str,none]": 2,
            "list [type [hooks]]": 1,
            "connection.server": 1,
            "connection.client": 1,
            "iterator [kt]": 1,
            "iterator [vt]": 1,
            "abstractset [tuple [kt,vt]]": 1,
            "abstractset [tuple [str,str]]": 1,
            "teventgenerator": 1,
            "opcode": 1,
            "list [websocketmessage]": 1,
            "websocketmessage": 1,
            "optional [bool]": 1,
            "sequence [flow]": 1,
            "events.messageinjected": 1,
            "server_hooks.serverconnectionhookdata": 1,
            "optional [flowfilter]": 2,
            "optional [io]": 2,
            "tls.tlsstartdata": 2,
            "binaryio": 1,
            "optmanager._option": 1,
            "mutablemapping [connection,tuple [str,str]]": 1,
            "tuple [str,str,str]": 1,
            "clienthello": 1,
            "connection.connection": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [flowfilter,str,str]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 352,
        "typeChanged_dict_var": {
            "str -> classvar [str]": 2,
            "http.headers -> optional [http]": 1,
            "mheaders.headers -> headers": 1,
            "bytes -> optional [bytes]": 1,
            "float -> optional [float]": 1,
            "httprequest -> http.request": 1,
            "optional [httpresponse] -> optional [http]": 1,
            "connections.serverconnection -> compat.server": 1,
            "connections.clientconnection -> compat.client": 1,
            "bool -> str": 1,
            "server -> optional [server]": 1,
            "clientservercontext -> context": 3,
            "layer -> layer.layer": 1,
            "optional [server] -> server": 1,
            "mutablemapping [context,bytearray] -> bytearray": 1,
            "layer.layer -> optional [layer]": 1,
            "optional [layer] -> layer.layer": 1,
            "tcp.tcpflow -> optional [tcp]": 1,
            "tuple -> optional [tuple]": 2,
            "union [bytes,bool,none] -> union [bytes,literal [true],none]": 1,
            "optional [bytes] -> union [bytes,none]": 1,
            "optional [\"server\"] -> sequence [\"server\"]": 1,
            "sequence [\"server\"] -> sequence [server_spec]": 1,
            "sequence [server_spec] -> optional [server_spec]": 1,
            "optional [tuple] -> optional [address]": 3,
            "sequence [bytes] -> sequence [str]": 2,
            "tuple -> address": 2,
            "asyncio.abstractserver -> optional [asyncio]": 1,
            "callable [...,union [requestprotocolerror,responseprotocolerror]] -> type [union [requestprotocolerror,responseprotocolerror]]": 1,
            "callable [...,union [requestdata,responsedata]] -> type [union [requestdata,responsedata]]": 1,
            "callable [...,union [requestendofmessage,responseendofmessage]] -> type [union [requestendofmessage,responseendofmessage]]": 1,
            "optional [str] -> optional [bytes]": 2,
            "classvar [bool] -> union [bool,\"mitmproxy.proxy2.layer.layer\"]": 1,
            "callable [...,layer [none]] -> union [callable [...,layer [none]],callable]": 1,
            "optional [sequence [certs]] -> sequence [certs]": 1,
            "compat.server -> context.server": 1,
            "compat.client -> context.client": 1,
            "optional [str] -> optional [path]": 1,
            "optional [path] -> optional [str]": 1,
            "list [bytes] -> list [str]": 1,
            "optional [bytes] -> optional [str]": 2,
            "union [bytes,literal [true],none] -> union [str,literal [true],none]": 2,
            "union [bytes,none] -> union [str,none]": 1,
            "sequence [str] -> sequence [bytes]": 1,
            "tlsstartdata -> clienthellodata": 1,
            "clienthellodata -> tlsstartdata": 1,
            "http.request -> request": 1,
            "optional [http] -> optional [response]": 1,
            "http.httprequest -> http.request": 1,
            "http.httpresponse -> http.response": 1,
            "context.client -> connection.client": 6,
            "context.server -> connection.server": 6,
            "client -> connection.client": 1,
            "server -> connection.server": 1,
            "context.connection -> connection.connection": 3,
            "union [callable,bool] -> union [callable [...,bytes],bool]": 1,
            "tuple [tuple,...] -> tuple [tuple [kt,vt],...]": 1,
            "bytes -> union [bytes,str]": 1,
            "union [bytes,str] -> bytes": 1,
            "union [str,literal [true],none] -> optional [str]": 1,
            "union [callable [...,bytes],bool] -> union [callable [...,union [iterable [bytes],bytes]],bool]": 1,
            "tlsstartdata -> tlshookdata": 2,
            "net_tls.clienthello -> clienthello": 1,
            "tlshookdata -> tlsdata": 3
        },
        "typeChanged_dict_arg": {
            "grideditor -> \"grideditor\"": 2,
            "optional [str] -> sequence [str]": 1,
            "optional [str] -> optional [int]": 1,
            "tuple [str,str] -> optional [tuple [str,str]]": 1,
            "str -> optional [str]": 4,
            "bool -> optional [str]": 1,
            "optional [tuple [str,str]] -> optional [str]": 1,
            "optional [typing] -> optional [io [str]]": 1,
            "log.logentry -> logentry": 1,
            "mapping [union [str,bytes],union [str,bytes]] -> mapping [anystr,anystr]": 1,
            "sequence [tuple [str,str,str]] -> sequence [union [tuple [str,str,str],str]]": 2,
            "options -> options.options": 1,
            "union [str,bytes] -> optional [bytes]": 1,
            "union [str,bytes] -> optional [str]": 1,
            "anystr -> union [bytes,str]": 2,
            "union [dict [anystr,anystr],iterable [tuple [bytes,bytes]]] -> union [dict [str,anystr],iterable [tuple [bytes,bytes]]]": 2,
            "proxyconfig -> config.proxyconfig": 1,
            "type -> typing.any": 1,
            "iterator [t] -> iterable [t]": 1,
            "dict [str,any] -> dict [union [bytes,str],any]": 1,
            "\"mitmproxy.console.master.consolemaster\" -> \"mitmproxy.tools.console.master.consolemaster\"": 3,
            "io.binaryio -> typing.binaryio": 2,
            "\"mitmproxy.tools.console.master.consolemaster\" -> master.consolemaster": 1,
            "master.consolemaster -> \"mitmproxy.tools.console.master.consolemaster\"": 1,
            "bytes -> typing.anystr": 1,
            "any -> typing.any": 1,
            "iterable [tuple [str,str]] -> iterable [str]": 2,
            "str -> command.path": 2,
            "tchoice -> str": 1,
            "union [str,bytes] -> str": 1,
            "str -> union [str,bytes]": 2,
            "flow.flow -> httpflow": 1,
            "httpflow -> flow.flow": 1,
            "token -> optional [token]": 8,
            "optional [anystr] -> union [str,bytes,none]": 2,
            "optional [int] -> optional [float]": 1,
            "bytes -> anystr": 1,
            "optional [bytes] -> none": 1,
            "optional [str] -> none": 1,
            "union [dict [str,anystr],iterable [tuple [bytes,bytes]]] -> union [headers,dict [union [str,bytes],union [str,bytes]],iterable [tuple [bytes,bytes]]]": 1,
            "optional [str] -> union [none,str,bytes]": 1,
            "union [bytes,str] -> optional [bytes]": 1,
            "union [dict [str,anystr],iterable [tuple [bytes,bytes]]] -> union [headers,tuple [tuple [bytes,bytes],...]]": 1,
            "union [str,bytes,none] -> none": 1,
            "union [str,bytes,none] -> union [str,bytes]": 1,
            "union [headers,dict [union [str,bytes],union [str,bytes]],iterable [tuple [bytes,bytes]]] -> union [headers,mapping [str,union [str,bytes]],iterable [tuple [bytes,bytes]]]": 1,
            "bytes -> union [bytes,str]": 1,
            "mitmclidirector -> clidirector": 4,
            "events.event -> events.openconnection": 1,
            "events.openconnection -> events.event": 1,
            "commands.command -> commands.openconnection": 1,
            "bool -> str": 1,
            "server -> optional [server]": 1,
            "clientservercontext -> context": 3,
            "events.event -> events.datareceived": 2,
            "events.datareceived -> events.event": 3,
            "events.datareceived -> events.start": 1,
            "events.datareceived -> union [events,events]": 1,
            "union [events,events] -> events.event": 1,
            "events.event -> events.connectionevent": 1,
            "tls.tlsstart -> tls.starthookdata": 3,
            "tls.clienthellohookdata -> tls.clienthellodata": 1,
            "tls.starthookdata -> tls.tlsstartdata": 3,
            "events.event -> httpevent": 1,
            "optional [context] -> context.connection": 2,
            "optional [tuple] -> optional [address]": 1,
            "list [type [events]] -> list [type [event_hooks]]": 1,
            "commands.hook -> commands.starthook": 1,
            "events.commandreply -> events.commandcompleted": 1,
            "events.mitmproxyevent -> event_hooks.eventhook": 2,
            "list [type [event_hooks]] -> list [type [hooks]]": 1,
            "event_hooks.eventhook -> hooks.hook": 2,
            "flow.flow -> union [http,tcpflow,websocketflow]": 1,
            "net_http.headers -> http.headers": 1,
            "optional [net_http] -> optional [http]": 1,
            "union [net_http,tcpmessage,websocketmessage] -> union [http,tcpmessage,websocketmessage]": 1,
            "optional [http] -> optional [headers]": 1,
            "request.request -> request": 1,
            "optional [response] -> optional [response]": 1,
            "net_http.request -> http.request": 1,
            "net_http.response -> http.response": 1,
            "optional [context] -> optional [connection]": 2,
            "client -> connection.client": 1,
            "context.server -> connection.server": 1,
            "context.connection -> connection.connection": 3,
            "union [none,headers,tuple [tuple [bytes,bytes],...]] -> union [headers,tuple [tuple [bytes,bytes],...],none]": 1,
            "tuple [str,...] -> iterable [str]": 1,
            "union [http,tcpflow,websocketflow] -> union [http,tcpflow]": 1,
            "websocket.websocketflow -> tcp.tcpflow": 1,
            "union [bytes,str] -> bytes": 1,
            "events.connectionevent -> events.event": 1,
            "flow.flow -> flow": 1,
            "events.event -> events.messageinjected": 1,
            "layer -> union [layer,\"layerstack\"]": 1,
            "str -> bytes": 2,
            "binaryio -> io [bytes]": 1,
            "union [literal [true],none,connection] -> optional [connection]": 2,
            "union [literal [true],none,http] -> optional [http]": 1,
            "union [literal [true],none,http] -> union [bool,http]": 1,
            "union [literal [true],none,flow] -> union [bool,flow]": 1,
            "union [literal [true],none,websocket] -> union [bool,websocket]": 1,
            "tls.tlsstartdata -> tls.tlshookdata": 2,
            "tls.tlshookdata -> tls.tlsdata": 3
        },
        "typeChanged_dict_ret": {
            "str -> optional [str]": 2,
            "iterable [tuple [union [str,bytes],union [str,bytes]]] -> iterable [list [tuple [str,anystr]]]": 1,
            "union [str,bytes] -> optional [anystr]": 2,
            "iterator [tuple [optional [t]]] -> iterator [tuple [optional [t],...]]": 1,
            "dict [str,any] -> dict [union [bytes,str],any]": 1,
            "tuple [tserializable,bytes] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [tserializable,bytes]": 1,
            "none -> bool": 2,
            "tuple [str,iterable [list [tuple [str,anystr]]]] -> cviewswapcase": 1,
            "cviewswapcase -> contentviews.tviewresult": 1,
            "none -> int": 1,
            "none -> str": 4,
            "bool -> none": 5,
            "str -> none": 4,
            "optional [view] -> none": 1,
            "none -> flow.flow": 1,
            "bytes -> http_pb2.httpresponse": 1,
            "bytes -> flow.flow": 1,
            "flow.flow -> httprequest": 1,
            "bytes -> httpresponse": 1,
            "flow.flow -> clientconnection": 1,
            "flow.error -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [flow]": 1,
            "flow.flow -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [httpflow]": 1,
            "none -> optional [str]": 3,
            "tfilter -> optional [tfilter]": 1,
            "bytes -> optional [bytes]": 2,
            "optional [bytes] -> typing.any": 1,
            "optional [anystr] -> none": 2,
            "bytes -> str": 1,
            "optional [bytes] -> none": 2,
            "optional [str] -> float": 1,
            "optional [str] -> \"request\"": 1,
            "optional [str] -> bytes": 1,
            "httpresponse -> http.response": 1,
            "httprequest -> http.request": 1,
            "teventgenerator -> tcommandgenerator": 1,
            "teventgenerator -> commands.tcommandgenerator": 4,
            "commands.tcommandgenerator -> optional [tlsclienthello]": 1,
            "commands.tcommandgenerator -> generator [commands,any,bool]": 3,
            "optional [tlsclienthello] -> optional [clienthello]": 1,
            "none -> \"buffer\"": 1,
            "optional [bytes] -> bytes": 1,
            "optional [bytes] -> optional [list [bytes]]": 1,
            "generator [commands,any,bool] -> commands.tcommandgenerator": 1,
            "none -> commands.tcommandgenerator": 1,
            "commands.tcommandgenerator -> attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 6,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='iterator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [httpevent] -> str": 1,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none] -> attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [tuple [bool,optional [str]]]": 1,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [tuple [bool,optional [str]]] -> attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none]": 2,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [optional [str]] -> attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [tuple [bool,optional [str]]]": 1,
            "playbook -> tuple [playbook,framefactory]": 1,
            "tuple [str,bytes,optional [bytes],optional [bytes],optional [int],optional [bytes],bytes] -> tuple [str,int,bytes,bytes,bytes,bytes,bytes]": 1,
            "address -> \"server\"": 1,
            "tuple [str,int,bytes,bytes,bytes,bytes,bytes] -> none": 1,
            "address -> optional [address]": 1,
            "tuple [bytes,int] -> none": 1,
            "compat.client -> context.client": 1,
            "compat.server -> context.server": 1,
            "tuple [certs,ssl,str] -> certs.certstoreentry": 1,
            "http.httpresponse -> http.response": 1,
            "http.response -> response": 1,
            "http.request -> request": 1,
            "headers.headers -> headers": 1,
            "request.request -> request": 1,
            "response.response -> response": 1,
            "bool -> \"context\"": 1,
            "context.client -> connection.client": 1,
            "context.server -> connection.server": 3,
            "float -> optional [bytes]": 1,
            "optional [str] -> none": 1,
            "multidict.multidictview -> attribute(\n    value=name(\n        value='multidict',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='multidictview',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,str]": 2,
            "multidict.multidictview -> attribute(\n    value=name(\n        value='multidict',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='multidictview',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,tuple [str,multidict [str,optional [str]]]]": 1,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none] -> attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [optional [str]]": 1,
            "str -> bool": 1,
            "bool -> websocketmessagestate": 1,
            "commandgenerator [none] -> str": 1,
            "attribute(\n    value=name(\n        value='layer',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='commandgenerator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [none] -> tunnel.layerstack": 1,
            "http.response -> bool": 1,
            "optional [tuple [str,str]] -> str": 1,
            "none -> tuple [str,str,str]": 1,
            "optional [net_tls] -> optional [clienthello]": 1,
            "http.response -> bytes": 1,
            "optional [tfilter] -> bool": 1,
            "bool -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [flowfilter,str,str]": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 1666,
        "functionReturnsType_added": 972,
        "variableType_added": 650,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 881,
        "functionReturnsType_removed": 465,
        "variableType_removed": 394,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 147,
        "functionReturnsType_changed": 115,
        "variableType_changed": 90,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            0.938337801608579,
            0.9333333333333335,
            3.571428571428571,
            68.93203883495146,
            7.6923076923076925,
            6.896551724137931,
            0.8771929824561403,
            0.6550218340611353,
            0.6521739130434783,
            0.6288484213284423,
            0.06168080185042405,
            0.04399472063352398,
            0.04399472063352398,
            1.1152416356877324,
            1.1494252873563218,
            2.3255813953488373,
            2.3255813953488373,
            0.8032128514056224,
            0.8064516129032258,
            0.1929187471629596,
            0.19276561968477152,
            1.2422360248447204,
            1.486988847583643,
            3.4482758620689653,
            2.7777777777777777,
            0.7751937984496124,
            2.5,
            1.5151515151515151,
            4.3478260869565215,
            2.5,
            7.6923076923076925,
            3.75,
            0.4484304932735426,
            0.6535947712418301,
            0.6493506493506493,
            5.555555555555555,
            1.3513513513513513,
            2.666666666666667,
            0.44150110375275936,
            50.0,
            10.256410256410255,
            1.4285714285714286,
            2.941176470588235,
            0.07974481658692185,
            4.545454545454546,
            7.142857142857142,
            7.6923076923076925,
            2.2988505747126435,
            1.4598540145985401,
            5.263157894736842,
            2.9177718832891246,
            7.6923076923076925,
            3.3333333333333335,
            5.405405405405405,
            5.263157894736842,
            24.59016393442623,
            24.59016393442623,
            50.0,
            0.6389776357827476,
            0.5952380952380952,
            1.6166281755196306,
            0.24630541871921183,
            2.6627218934911245,
            0.4629629629629629,
            2.941176470588235,
            6.25,
            6.25,
            14.285714285714285,
            1.5037593984962405,
            7.4074074074074066,
            7.82122905027933,
            0.6329113924050633,
            0.3058103975535168,
            0.6060606060606061,
            0.8,
            10.909090909090908,
            0.3289473684210526,
            50.0,
            1.1695906432748537,
            0.12330456226880394,
            0.005272593061267532,
            0.005274168878887502,
            8.47457627118644,
            16.0,
            2.7777777777777777,
            2.4096385542168677,
            1.2987012987012987,
            11.11111111111111,
            2.193548387096774,
            4.528301886792453,
            21.31578947368421,
            0.15479876160990713,
            2.5423728813559325,
            2.941176470588235,
            4.761904761904762,
            0.425531914893617,
            1.6260162601626018,
            1.834862385321101,
            3.2710280373831773,
            100.0,
            33.33333333333333,
            10.95890410958904,
            3.9215686274509802,
            3.125,
            1.790633608815427,
            1.808066759388039,
            17.647058823529413,
            3.125,
            20.0,
            2.5316455696202533,
            10.344827586206897,
            1.257861635220126,
            0.4975124378109453,
            4.477611940298507,
            9.615384615384617,
            2.857142857142857,
            12.5,
            6.896551724137931,
            4.597701149425287,
            38.23529411764706,
            2.2222222222222223,
            2.127659574468085,
            2.1739130434782608,
            0.5128205128205128,
            0.12254901960784313,
            0.5952380952380952,
            1.095890410958904,
            0.273224043715847,
            16.0,
            1.1235955056179776,
            2.0408163265306123,
            1.0416666666666665,
            1.4285714285714286,
            7.6923076923076925,
            0.390625,
            21.428571428571427,
            0.4,
            1.9230769230769231,
            5.47945205479452,
            4.761904761904762,
            4.716981132075472,
            4.62962962962963,
            0.3236245954692557,
            0.6896551724137931,
            5.555555555555555,
            5.88235294117647,
            1.1627906976744187,
            3.0303030303030303,
            2.5316455696202533,
            3.4482758620689653,
            4.3478260869565215,
            4.3478260869565215,
            1.5873015873015872,
            22.857142857142858,
            10.526315789473683,
            2.7027027027027026,
            1.6666666666666667,
            8.0,
            3.7037037037037033,
            1.9607843137254901,
            3.2520325203252036,
            0.676818950930626,
            0.3194888178913738,
            1.0204081632653061,
            0.7633587786259541,
            1.8867924528301887,
            2.631578947368421,
            0.8849557522123894,
            1.0526315789473684,
            3.8461538461538463,
            5.333333333333334,
            1.5789473684210527,
            10.76923076923077,
            5.660377358490567,
            2.479338842975207,
            3.571428571428571,
            3.508771929824561,
            1.7241379310344827,
            0.006126700159294204,
            11.11111111111111,
            6.25,
            1.7921146953405016,
            0.6688963210702341,
            0.17271157167530224,
            6.896551724137931,
            3.3333333333333335,
            3.79746835443038,
            33.557046979865774,
            2.6022304832713754,
            6.41025641025641,
            9.090909090909092,
            1.0,
            2.4390243902439024,
            0.2070393374741201,
            1.2131715771230502,
            0.4629629629629629,
            0.6622516556291391,
            1.8518518518518516,
            0.6622516556291391,
            5.405405405405405,
            5.88235294117647,
            5.88235294117647,
            7.6923076923076925,
            0.7782101167315175,
            0.45045045045045046,
            0.20833333333333334,
            9.090909090909092,
            20.0,
            2.272727272727273,
            2.0,
            0.2306805074971165,
            1.694915254237288,
            0.10787486515641855,
            3.804347826086957,
            0.5181347150259068,
            8.0,
            2.7027027027027026,
            7.777777777777778,
            2.083333333333333,
            1.5873015873015872,
            2.631578947368421,
            2.512562814070352,
            0.38022813688212925,
            100.0,
            0.8,
            7.6923076923076925,
            7.4074074074074066,
            33.33333333333333,
            7.586206896551724,
            7.913669064748201,
            3.0716723549488054,
            3.0927835051546393,
            0.19569471624266144,
            0.628930817610063,
            25.0,
            0.8264462809917356,
            0.2242152466367713,
            2.112676056338028,
            2.380952380952381,
            2.7027027027027026,
            0.5208333333333333,
            11.76470588235294,
            33.33333333333333,
            2.1739130434782608,
            12.5,
            5.555555555555555,
            9.523809523809524,
            1.9607843137254901,
            3.3333333333333335,
            1.0416666666666665,
            8.695652173913043,
            4.3478260869565215,
            2.708803611738149,
            100.0,
            100.0,
            33.33333333333333,
            1.9189189189189189,
            1.9327508604712735,
            12.5,
            25.0,
            20.0,
            6.896551724137931,
            0.8064516129032258,
            0.8064516129032258,
            0.8064516129032258,
            0.8064516129032258,
            0.8064516129032258,
            6.25,
            9.711538461538462,
            0.09910802775024777,
            0.8708272859216255,
            33.33333333333333,
            2.2988505747126435,
            33.33333333333333,
            25.0,
            3.7037037037037033,
            0.7366482504604052,
            6.896551724137931,
            5.405405405405405,
            16.216216216216218,
            6.25,
            6.25,
            11.11111111111111,
            2.2598870056497176,
            9.90990990990991,
            5.555555555555555,
            5.88235294117647,
            6.25,
            5.47945205479452,
            4.166666666666666,
            3.8461538461538463,
            4.132231404958678,
            0.8130081300813009,
            7.608695652173914,
            0.9090909090909091,
            6.666666666666667,
            4.810996563573884,
            5.0,
            8.223684210526317,
            1.6,
            1.3793103448275863,
            3.731343283582089,
            2.371541501976284,
            0.3824091778202677,
            0.625,
            1.694915254237288,
            5.263157894736842,
            9.090909090909092,
            2.7777777777777777,
            7.6923076923076925,
            7.352941176470589,
            2.6436781609195403,
            2.6386645126548194,
            4.166666666666666,
            15.384615384615385,
            10.714285714285714,
            1.6260162601626018,
            10.714285714285714,
            0.6578947368421052,
            7.751937984496124,
            7.751937984496124,
            5.747126436781609,
            6.944444444444445,
            2.7777777777777777,
            1.0309278350515463,
            1.9230769230769231,
            0.9708737864077669,
            6.382978723404255,
            33.33333333333333,
            25.0,
            9.090909090909092,
            0.8333333333333334,
            4.905660377358491,
            1.345291479820628,
            1.6129032258064515,
            12.5,
            3.9215686274509802,
            1.0,
            1.4705882352941175,
            2.158273381294964,
            3.8062283737024223,
            4.3478260869565215,
            5.194805194805195,
            8.0,
            2.0408163265306123,
            2.333931777378815,
            4.0,
            10.344827586206897,
            3.6585365853658534,
            0.8576329331046313,
            5.084745762711865,
            0.7067137809187279,
            4.594180704441041,
            3.8793103448275863,
            0.6734006734006733,
            2.994791666666667,
            2.9812054439403757,
            1.8518518518518516,
            3.3333333333333335,
            1.0526315789473684,
            0.6993006993006993,
            0.39370078740157477,
            1.639344262295082,
            1.8633540372670807,
            0.24630541871921183,
            2.857142857142857,
            2.813852813852814,
            3.2520325203252036,
            0.8130081300813009,
            1.2658227848101267,
            2.586206896551724,
            0.6097560975609756,
            1.0,
            3.430079155672823,
            2.4752475247524752,
            2.966314731020613,
            1.9900497512437811,
            1.7297297297297298,
            0.2068252326783868,
            2.6548672566371683,
            2.1834061135371177,
            4.195804195804196,
            0.3412969283276451,
            0.3508771929824561,
            0.17271157167530224,
            2.1459227467811157,
            1.8867924528301887,
            0.6696428571428571,
            10.0,
            0.41841004184100417,
            10.045662100456621,
            11.583011583011583,
            0.6237006237006237,
            2.6455026455026456,
            5.633802816901409,
            0.38314176245210724,
            1.4388489208633095,
            0.7712082262210797,
            18.181818181818183,
            14.285714285714285,
            2.7027027027027026,
            1.3245033112582782,
            1.4336917562724014,
            1.5086206896551724,
            0.9259259259259258,
            0.33444816053511706,
            1.9417475728155338,
            0.24813895781637718,
            0.30864197530864196,
            1.2987012987012987,
            2.564102564102564,
            1.7543859649122806,
            11.11111111111111,
            10.0,
            2.631578947368421,
            8.333333333333332,
            4.3478260869565215,
            1.4336917562724014,
            0.9523809523809524,
            1.0,
            6.451612903225806,
            0.6211180124223602,
            16.666666666666664,
            11.11111111111111,
            3.4090909090909087,
            1.1235955056179776,
            0.8403361344537815,
            0.9345794392523363,
            4.545454545454546,
            5.714285714285714,
            0.78125,
            0.7246376811594203,
            33.33333333333333,
            1.2345679012345678,
            2.857142857142857,
            100.0,
            2.0689655172413794,
            1.4044943820224718,
            0.9900990099009901,
            18.75,
            6.976744186046512,
            7.6923076923076925,
            1.2345679012345678,
            2.6595744680851063,
            1.1816838995568686,
            2.083333333333333,
            1.2345679012345678,
            1.3888888888888888,
            1.6317016317016315,
            0.22727272727272727,
            5.769230769230769,
            2.293577981651376,
            4.522613065326634,
            0.6734006734006733,
            5.0,
            0.04350474201687984,
            2.731071028227861,
            2.0267096168042413,
            0.016182539040375435,
            5.88235294117647,
            0.04952947003467063,
            2.7874564459930316,
            0.6507592190889371,
            0.13351134846461948,
            0.33670033670033667,
            0.47393364928909953,
            0.964630225080386,
            2.242152466367713,
            0.26041666666666663,
            0.35211267605633806,
            0.17152658662092624,
            1.1173184357541899,
            1.8421052631578945,
            3.8461538461538463,
            2.0202020202020203,
            4.25531914893617,
            0.22658610271903326,
            2.34375,
            1.5384615384615385,
            0.30959752321981426,
            0.6802721088435374,
            2.380952380952381,
            2.214022140221402,
            2.2222222222222223,
            0.9157509157509158,
            3.015075376884422,
            3.0456852791878175,
            0.7518796992481203,
            5.511811023622047,
            0.1779359430604982,
            1.4084507042253522,
            6.896551724137931,
            7.742782152230972,
            7.554417413572343,
            0.5478569126651628,
            4.040404040404041,
            5.263157894736842,
            7.183364839319471,
            7.569721115537849,
            2.827521206409048,
            0.3412969283276451,
            0.3676470588235294,
            0.5319148936170213,
            11.59090909090909,
            4.049844236760125,
            1.1688311688311688,
            2.5974025974025974,
            2.7624309392265194,
            1.1799410029498525,
            1.0309278350515463,
            1.9230769230769231,
            3.943661971830986,
            0.2145922746781116,
            5.555555555555555,
            0.22675736961451248,
            3.827751196172249,
            2.1505376344086025,
            0.5630630630630631,
            0.6578947368421052,
            12.280701754385964,
            4.918032786885246,
            0.8403361344537815,
            5.88235294117647,
            5.0,
            3.6585365853658534,
            2.0408163265306123,
            5.555555555555555,
            1.574803149606299,
            1.680672268907563,
            2.5806451612903225,
            0.5649717514124294,
            1.282051282051282,
            1.0416666666666665,
            27.586206896551722,
            6.25,
            12.5,
            3.6363636363636362,
            5.555555555555555,
            1.0869565217391304,
            1.8867924528301887,
            3.571428571428571,
            3.8461538461538463,
            5.357142857142857,
            6.666666666666667,
            0.45871559633027525,
            1.1560693641618496,
            3.3333333333333335,
            0.8097165991902834,
            0.6097560975609756,
            3.3333333333333335,
            2.3255813953488373,
            3.7037037037037033,
            1.1695906432748537,
            5.88235294117647,
            14.285714285714285,
            33.33333333333333,
            11.11111111111111,
            1.639344262295082,
            2.5,
            2.73972602739726,
            40.0,
            15.0,
            6.25,
            5.084745762711865,
            20.0,
            3.125,
            15.384615384615385,
            11.11111111111111,
            8.333333333333332,
            7.142857142857142,
            16.666666666666664,
            2.857142857142857,
            1.8518518518518516,
            14.285714285714285,
            1.4492753623188406,
            6.451612903225806,
            25.0,
            25.0,
            11.11111111111111,
            30.0,
            11.11111111111111,
            0.007434391495056129,
            0.2416292716603383,
            11.11111111111111,
            0.390625,
            1.2195121951219512,
            1.7543859649122806,
            3.076923076923077,
            1.6025641025641024,
            1.0526315789473684,
            8.968609865470851,
            2.82258064516129,
            1.4644351464435146,
            12.5,
            0.8849557522123894,
            7.006369426751593,
            1.4134275618374559,
            3.6363636363636362,
            0.9216589861751152,
            3.783783783783784,
            4.242424242424243,
            1.6853932584269662,
            1.7241379310344827,
            0.4784688995215311,
            0.425531914893617,
            2.0,
            44.44444444444444,
            8.75,
            2.7027027027027026,
            1.282051282051282,
            0.7183908045977011,
            0.5805515239477503,
            2.380952380952381,
            6.451612903225806,
            25.0,
            1.694915254237288
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2010",
                "7425",
                "20177",
                "5380",
                "2629",
                "308",
                "5523",
                "11763",
                "366",
                "0",
                "0",
                "47911"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/mitmproxy/mitmproxy": 5380
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 2858,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            86.92
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/mitmproxy/mitmproxy": 2858
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2016": 456,
            "2017": 399,
            "2018": 156,
            "2019": 49,
            "2020": 1566,
            "2021": 662
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2016": 39,
            "2017": 67,
            "2018": 25,
            "2019": 10,
            "2020": 125,
            "2021": 81
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2016": 1137,
            "2017": 1258,
            "2018": 666,
            "2019": 237,
            "2020": 643,
            "2021": 428
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                6755,
                0,
                3926,
                0,
                6329
            ],
            "2016": [
                6,
                9808,
                10,
                5977,
                0,
                9779
            ],
            "2017": [
                1069,
                11185,
                750,
                6685,
                0,
                14204
            ],
            "2018": [
                3696,
                30320,
                2583,
                17799,
                620,
                37376
            ],
            "2019": [
                10336,
                85134,
                7271,
                49953,
                1761,
                105083
            ],
            "2020": [
                3697,
                25655,
                2563,
                14865,
                784,
                32521
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "mitmproxy-mitmproxy": 0,
                "git@maximilianhils.com": 220,
                "aldo@nullcube.com": 35,
                "thomas@kriechbaumer.name": 14,
                "dwfreed@mtu.edu": 1,
                "sachinkel19@gmail.com": 3,
                "ujjwalverma1111@gmail.com": 3,
                "mame8282@googlemail.com": 3,
                "krsoninikhil@gmail.com": 1,
                "david@daviddworken.com": 2,
                "aldo@corte.si": 18,
                "iharsh234@gmail.com": 2,
                "me@matshao.com": 3,
                "rshtmudgal@gmail.com": 1,
                "ttahabatt@gmail.com": 1,
                "midhun.nitw@gmail.com": 1,
                "marcy@realeyes.com": 1,
                "blackjuniper@protonmail.com": 5,
                "pietrotirenna.pt@gmail.com": 1,
                "jessonsotoventura@gmail.com": 1,
                "tero.saaristo@gmail.com": 1,
                "typoon@gmail.com": 2,
                "qq2694985673@outlook.com": 1,
                "kimballleavitt@gmail.com": 2,
                "18281368+nikitastupin@users.noreply.github.com": 3,
                "55282902+anneborcherding@users.noreply.github.com": 2,
                "JustAnotherArchivist@users.noreply.github.com": 1,
                "lankeren123543@gmail.com": 3,
                "anne.borcherding@iosb.fraunhofer.de": 3,
                "git@mplattner.at": 2,
                "tom@stosb.com": 1,
                "bburky@bburky.com": 1,
                "linw1995@icloud.com": 1,
                "kamil.borzym@gmail.com": 1,
                "brad.dixon@carvesystems.com": 1,
                "alexander@prinzhorn.it": 2,
                "me@manjusaka.me": 1,
                "zhangjinjie@yimian.com.cn": 2,
                "Hoffmann.P@gmx.net": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "mitmproxy-mitmproxy": 0,
                "aldo@nullcube.com": 986,
                "git@maximilianhils.com": 2904,
                "michaeljau@users.noreply.github.com": 1,
                "nickhs@umich.edu": 1,
                "mg@tekii.com.ar": 53,
                "marcelo.glezer@gmail.com": 25,
                "sakurai.youhei@gmail.com": 4,
                "dcypherd@gmail.com": 33,
                "vxrram95@gmail.com": 1,
                "sunu0000@gmail.com": 1,
                "sp3478@gmail.com": 9,
                "dextrous93@gmail.com": 1,
                "onlywade@gmail.com": 2,
                "luis.peralta@gmail.com": 1,
                "krzysztof.bielicki@allegro.pl": 2,
                "vzvu3k6k@gmail.com": 1,
                "macmantrl@me.com": 2,
                "ryoqun@gmail.com": 1,
                "cwhan.tunz@gmail.com": 5,
                "miguelc@r2d2.geek.local": 1,
                "airscorp@gmail.com": 1,
                "hans.wuerstchen42@gmail.com": 1,
                "dlethin@gmail.com": 1,
                "thomas@kriechbaumer.name": 716,
                "dweinst@insitusec.com": 14,
                "drahos.jake@gmail.com": 9,
                "drahos@iastate.edu": 2,
                "user1@cygwin": 5,
                "kylemorton@google.com": 9,
                "aldo@corte.si": 520,
                "jlhonora@ing.puc.cl": 1,
                "isra017@gmail.com": 2,
                "=": 1,
                "Kriechi@users.noreply.github.com": 310,
                "tle@holymonkey.com": 1,
                "chris.czub@gmail.com": 10,
                "seth.pellegrino@jivesoftware.com": 1,
                "colin@bendell.ca": 2,
                "ben@caffeinatedanalytics.com": 1,
                "Badg@users.noreply.github.com": 2,
                "aqwsedrft1234@yahoo.co.jp": 1,
                "david@daviddworken.com": 3,
                "me@matshao.com": 240,
                "jvillacorta@fusepowered.com": 1,
                "jwilk@jwilk.net": 1,
                "mbazzinotti@gmail.com": 4,
                "sandor.nemes@gmail.com": 6,
                "stefan@warting.se": 1,
                "snemes@users.noreply.github.com": 4,
                "nkommenda@hotmail.com": 2,
                "felixonmars@archlinux.org": 10,
                "ganguera@gmail.com": 3,
                "lilydjwg@gmail.com": 4,
                "ryan.g.welton@gmail.com": 3,
                "dufferzafar0@gmail.com": 265,
                "anantk17@ymail.com": 1,
                "anant.kandikuppa@gmail.com": 1,
                "chris.hamant@realart.com": 1,
                "github@qslw.com": 1,
                "willcoster@google.com": 5,
                "cabraham@twitter.com": 8,
                "utkualtinkaya@gmail.com": 1,
                "sam@zombisoft.com": 5,
                "benjamin.lee@realthought.net": 3,
                "support@requires.io": 23,
                "thiago.arrais@gmail.com": 1,
                "ganatraparth1995@gmail.com": 1,
                "jason.daurus@gmail.com": 97,
                "kzxiao.hy@gmail.com": 4,
                "adityadivekar03@gmail.com": 1,
                "cle1000.cb@gmail.com": 78,
                "john@kozyrakis.gr": 9,
                "Zohar.Lorberbaum@qumu.com": 5,
                "zlorber@gmail.com": 5,
                "azhang9@gmail.com": 1,
                "iblancasa@gmail.com": 1,
                "StevenVanAcker@users.noreply.github.com": 1,
                "steven@snoble.net": 1,
                "javabrett@gmail.com": 2,
                "jasonpepas@gmail.com": 1,
                "jjones646@users.noreply.github.com": 1,
                "kostya.shift@gmail.com": 1,
                "yoginski@gmail.com": 2,
                "sachinkel19@gmail.com": 22,
                "lukasaoz@gmail.com": 2,
                "xntrik@gmail.com": 1,
                "redfast00@gmail.com": 3,
                "tdickers@akamai.com": 1,
                "dwfreed@mtu.edu": 10,
                "BSalita@yahoo.com": 1,
                "wes.turner@gmail.com": 1,
                "linmiao.xu@gmail.com": 1,
                "jkrause@opentable.com": 2,
                "stevenroberthunter@gmail.com": 1,
                "strohu@users.noreply.github.com": 1,
                "drakecaraker1989@gmail.com": 1,
                "vincent.haupert@gmail.com": 2,
                "angelonicolosi@yanchware.com": 1,
                "mkagenius@gmail.com": 3,
                "arjun.k018@gmail.com": 11,
                "Schamper@users.noreply.github.com": 4,
                "vulnminer@gmail.com": 1,
                "chhsiao90@gmail.com": 6,
                "smill@cuckoo.sh": 13,
                "phackt@users.noreply.github.com": 1,
                "rofreg@gmail.com": 3,
                "tylertstonge@gmail.com": 1,
                "djsan15@users.noreply.github.com": 1,
                "brady@lyft.com": 1,
                "slobodan@miskovic.ca": 2,
                "sahilc.2200@gmail.com": 1,
                "andrew@andreworr.ca": 1,
                "vincent.haupert@cs.fau.de": 1,
                "naveen.pai@bloomreach.com": 2,
                "phackt@protonmail.com": 1,
                "quentin.pradet@gmail.com": 1,
                "mike@fotinakis.com": 1,
                "eboda@users.noreply.github.com": 1,
                "jacobsunny95@gmail.com": 1,
                "rodrigo.senra@emc.com": 1,
                "era+github.com@iki.fi": 1,
                "wufeifei@wufeifei.com": 2,
                "eric.hanchrow@gmail.com": 1,
                "hegde.nishanth@gmail.com": 1,
                "markus@unterwaditzer.net": 1,
                "pierre@ambox.fr": 9,
                "lymanZerga11@users.noreply.github.com": 15,
                "0neblock@users.noreply.github.com": 1,
                "ujjwalverma1111@gmail.com": 68,
                "krsoninikhil@gmail.com": 10,
                "yjh0502@gmail.com": 2,
                "mosajjal@users.noreply.github.com": 1,
                "mame8282@googlemail.com": 4,
                "daniel.lenski@finalphasesystems.com": 1,
                "whackashoe@gmail.com": 1,
                "jordan.loehr@gmail.com": 1,
                "tomtasche@gmail.com": 1,
                "tarn@tarnbarford.net": 1,
                "shawd@vmware.com": 1,
                "yamamori.akihiro@donuts.ne.jp": 1,
                "dx@dxzone.com.ar": 1,
                "iharsh234@gmail.com": 6,
                "frankahn9@gmail.com": 2,
                "nikolaos.filippakis@cern.ch": 1,
                "BasThomas@users.noreply.github.com": 1,
                "jonathanrfisher1@gmail.com": 1,
                "vinaydargar@gmail.com": 1,
                "rob@computerlab.io": 1,
                "m_beloborodko@wargaming.net": 1,
                "charles.dhondt@gmail.com": 9,
                "zhigang1992@gmail.com": 1,
                "Ritiek@users.noreply.github.com": 4,
                "charlesdhdt@users.noreply.github.com": 1,
                "aseemshrey@gmail.com": 1,
                "davidpshaw@gmail.com": 1,
                "oliver.e.graff@gmail.com": 1,
                "github.com@phor.net": 1,
                "mengbiping@gmail.com": 1,
                "paulo@pauloromeira.com": 1,
                "matt.weidner@gmail.com": 5,
                "simonvermeersch@gmail.com": 1,
                "suraj.t97@gmail.com": 2,
                "rgerganov@vmware.com": 1,
                "rst0git@users.noreply.github.com": 2,
                "avatarou9@gmail.com": 1,
                "jim.higson@gmail.com": 2,
                "6829628+fate0@users.noreply.github.com": 1,
                "fusion86@cerbus.nl": 1,
                "bablusahoo16@gmail.com": 3,
                "ttahabatt@gmail.com": 47,
                "rshtmudgal@gmail.com": 23,
                "aniketpanjwani2018@u.northwestern.edu": 2,
                "gokulchandra@users.noreply.github.com": 1,
                "edward.medvedev@gmail.com": 2,
                "PaleNeutron@users.noreply.github.com": 1,
                "yan12125@gmail.com": 1,
                "peter.trantiendat@gmail.com": 1,
                "monami.sharma@gmail.com": 1,
                "luzpaz@users.noreply.github.com": 1,
                "deepshpathak@gmail.com": 3,
                "fanilgandhi@gmail.com": 7,
                "9128903+fenilgandhi@users.noreply.github.com": 2,
                "github@oliver.fish": 1,
                "hcbarry@users.noreply.github.com": 1,
                "jplochocki@op.pl": 1,
                "t7.mike@gmail.com": 1,
                "jackspharaoh@gmail.com": 1,
                "emil@emilstahl.dk": 1,
                "itzik.braun@gmail.com": 1,
                "midhun.nitw@gmail.com": 1,
                "corentintalarmain@gmail.com": 1,
                "clyfish@gmail.com": 1,
                "peterthemaurer@gmail.com": 1,
                "simon@elvery.net": 1,
                "miheerdew@gmail.com": 4,
                "HJKdev+GitHub@gmail.com": 1,
                "pietrotirenna.pt@gmail.com": 17,
                "joaquingc123@gmail.com": 1,
                "mrigankkrishan@gmail.com": 1,
                "grant.murphy@elastic.co": 2,
                "marcy@realeyes.com": 5,
                "blackjuniper@protonmail.com": 24,
                "amm0nite@users.noreply.github.com": 1,
                "bunnyhero@bunnyhero.com": 1,
                "andersonvom@gmail.com": 2,
                "s.schliesing@ndr.de": 3,
                "eluch@different.hu": 3,
                "gwang@brandttechnologies.com": 1,
                "courrier@david-kremer.fr": 2,
                "benno.fuenfstueck@gmail.com": 1,
                "artchaidarun@gmail.com": 1,
                "Tey@users.noreply.github.com": 1,
                "jbrulz@gmail.com": 1,
                "kamil.borzym@gmail.com": 2,
                "arunswaminathan94@gmail.com": 3,
                "fghzxm@outlook.com": 2,
                "alex.lauerman@gmail.com": 1,
                "20434085+abhigyank@users.noreply.github.com": 2,
                "j.favin@hotmail.fr": 5,
                "huang_yue_zhi@outlook.com": 1,
                "rajat.gupta99924@gmail.com": 10,
                "35985127+rjt-gupta@users.noreply.github.com": 3,
                "BkPHcgQL3V@gmx.com": 3,
                "contact@tiger-222.fr": 2,
                "yassin.mumen@gmail.com": 1,
                "petersmythe@users.noreply.github.com": 2,
                "yen@chyen.cc": 1,
                "rpigott@berkeley.edu": 4,
                "rob.wills@gmail.com": 1,
                "ls@localhost.localdomain": 1,
                "luciopaiva@gmail.com": 1,
                "mathieu.bordere@gmail.com": 1,
                "tonyb@tonybox.net": 2,
                "zhrhodes@gmail.com": 1,
                "pierregordon@protonmail.com": 4,
                "jessonsotoventura@gmail.com": 14,
                "tero.saaristo@gmail.com": 1,
                "54766858+RamiBerm@users.noreply.github.com": 1,
                "adam@amhopkins.com": 1,
                "king6cong@gmail.com": 1,
                "tom.saleeba@gmail.com": 2,
                "javier.tejero@travelperk.com": 1,
                "Nirusu@users.noreply.github.com": 1,
                "30344579+vin01@users.noreply.github.com": 1,
                "vinc.i@protonmail.ch": 1,
                "mkawaganga@gmail.com": 2,
                "rev3ks@gmail.com": 1,
                "yoann.lamouroux@data-impact.fr": 7,
                "you@example.com": 3,
                "github@mckeimic.com": 2,
                "jbr@cuckoo.sh": 1,
                "cs010@hotmail.com": 1,
                "2475625231@qq.com": 1,
                "yo@matiaslang.me": 5,
                "sethbarrios@google.com": 1,
                "typoon@gmail.com": 52,
                "Aliaksei.Shrub@wolterskluwer.com": 1,
                "gergesh@gmail.com": 2,
                "cixtords@gmail.com": 1,
                "35108822+pasanr@users.noreply.github.com": 1,
                "asfaltboy@gmail.com": 1,
                "ylamouroux@vente-privee.com": 1,
                "ThinkChaos@users.noreply.github.com": 1,
                "itaisod@gmail.com": 7,
                "mprencipe@gmail.com": 1,
                "bethtownsend92@gmail.com": 1,
                "beth@sortable.com": 1,
                "40205164+2NuFyeat4PZt@users.noreply.github.com": 1,
                "rohfle@gmail.com": 2,
                "axmo12@gmail.com": 1,
                "meetmangukiya98@gmail.com": 1,
                "Blown_Snail@foxmail.com": 1,
                "qq2694985673@outlook.com": 1,
                "skkaushik212@gmail.com": 17,
                "naivekun0817@gmail.com": 3,
                "github@maximilianhils.com": 19,
                "alexander@prinzhorn.it": 20,
                "oxr463@gmx.us": 1,
                "kimballleavitt@gmail.com": 5,
                "ramage.lucas@protonmail.com": 2,
                "marcus@matosconsulting.com": 3,
                "krazycavin@gmail.com": 2,
                "18281368+nikitastupin@users.noreply.github.com": 15,
                "philipp.j.fritz@gmail.com": 1,
                "senyuuri@gmail.com": 1,
                "55282902+anneborcherding@users.noreply.github.com": 2,
                "deepanshu.lulla@gmail.com": 1,
                "JustAnotherArchivist@users.noreply.github.com": 3,
                "thunghan@gmail.com": 1,
                "matt@soluble.ai": 1,
                "brad.dixon@carvesystems.com": 13,
                "Jones258@Gmail.com": 1,
                "vsreejeet@gmail.com": 1,
                "ruzfor@outlook.com": 1,
                "vane11opeschw33tz@gmail.com": 1,
                "git@mplattner.at": 53,
                "yogesh.ojha11@gmail.com": 4,
                "github@teddjohnson.org": 1,
                "Vane11opeSchw33tz@gmail.com": 4,
                "force.minpiku@gmail.com": 3,
                "lankeren123543@gmail.com": 16,
                "zokutyou2@gmail.com": 39,
                "61991283+tunnelpr0@users.noreply.github.com": 3,
                "sb.malaoui@gmail.com": 1,
                "vikasgupta.nit@gmail.com": 1,
                "anne.borcherding@iosb.fraunhofer.de": 5,
                "tom@stosb.com": 3,
                "mrnbayoh@gmail.com": 1,
                "martin@plattner.me": 1,
                "mail@vincent-haupert.de": 2,
                "rugk+git@posteo.de": 2,
                "michael.monsivais@gmail.com": 1,
                "32003197+wchasekelley@users.noreply.github.com": 1,
                "wchasekelley@gmail.com": 1,
                "miro@synopsys.com": 3,
                "42177912+mirosyn@users.noreply.github.com": 2,
                "Simon.Legner@gmail.com": 1,
                "bburky@bburky.com": 2,
                "kjoconnor@gmail.com": 1,
                "shiva@exotel.in": 2,
                "jan-peter.stotz@sit.fraunhofer.de": 2,
                "jrblixt@gmail.com": 1,
                "bernardas.alisauskas@pm.me": 2,
                "samhitak@hotmail.com": 1,
                "linw1995@icloud.com": 1,
                "tim.gates@iress.com": 1,
                "mail@joachim-breitner.de": 1,
                "thomas@homburg.dk": 1,
                "grahamrobbins@gmail.com": 1,
                "zivillian@users.noreply.github.com": 1,
                "anatoli@rainforce.org": 4,
                "r00t@constancy.org": 1,
                "52913345+alt-glitch@users.noreply.github.com": 1,
                "dkasak@termina.org.uk": 1,
                "20339505+dlbas@users.noreply.github.com": 1,
                "hsu@peterdavehello.org": 8,
                "ebeland@gmail.com": 1,
                "57334943+aesyondu@users.noreply.github.com": 1,
                "43539094+jannst@users.noreply.github.com": 1,
                "jannik.sturhann@haw-hamburg.de": 1,
                "wrekone@users.noreply.github.com": 1,
                "zoltan.reegn@gmail.com": 3,
                "hello@ironpeak.be": 1,
                "thatsnail@gmail.com": 1,
                "brann.jesper@gmail.com": 1,
                "83434023+SaladDais@users.noreply.github.com": 1,
                "me@manjusaka.me": 1,
                "aaronthj82@gmail.com": 1,
                "remigiusz.zetkowski+github@gmail.com": 1,
                "balciunas90@gmail.com": 1,
                "zhangjinjie@yimian.com.cn": 3,
                "34972397+matthewhughes934@users.noreply.github.com": 3,
                "eltociear@gmail.com": 1,
                "matthewhughes934@gmail.com": 1,
                "70739609+aaron-tan@users.noreply.github.com": 1,
                "starcraft6723@hotmail.com": 1,
                "Hoffmann.P@gmx.net": 1,
                "karljparkinson@gmail.com": 1,
                "elespike@lab26.net": 2,
                "dev@xopn.de": 1,
                "shindexro@gmail.com": 3,
                "asottile@umich.edu": 1,
                "lllama@users.noreply.github.com": 1,
                "jim@thebiggame.org": 1,
                "78342516+shubhangi013@users.noreply.github.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]