[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 4176,
        "commit_year_dict": {
            "2015": 109,
            "2016": 505,
            "2017": 373,
            "2018": 476,
            "2019": 955,
            "2020": 778,
            "2021": 980
        },
        "loc_year_edit": {
            "2015": 32363,
            "2016": 231548,
            "2017": 111054,
            "2018": 316397,
            "2019": 477450,
            "2020": 157922,
            "2021": 247200
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 668,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 14649,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2016": 303,
            "2017": 344,
            "2018": 1022,
            "2019": 3687,
            "2020": 3138,
            "2021": 1686
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2016": 152,
            "2017": 70,
            "2018": 530,
            "2019": 950,
            "2020": 860,
            "2021": 669
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2015": 1,
            "2016": 13,
            "2017": 85,
            "2018": 43,
            "2019": 215,
            "2020": 541,
            "2021": 340
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 10180,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "bytes": 76,
            "'metamagic.caos.builtins.bytes'": 1,
            "int": 236,
            "'metamagic.caos.builtins.int'": 1,
            "'metamagic.caos.builtins.float'": 2,
            "'metamagic.caos.builtins.decimal'": 1,
            "str": 1005,
            "'metamagic.caos.builtins.str'": 1,
            "irast.path": 2,
            "list": 65,
            "bool": 746,
            "io.fileio": 6,
            "dict": 11,
            "set": 5,
            "'std::float'": 2,
            "'std::decimal'": 1,
            "'std::sequence'": 1,
            "sn.name": 33,
            "parsing.parsercontext": 17,
            "base": 59,
            "object": 64,
            "typenamenode": 4,
            "classrefnode": 6,
            "constantnode": 5,
            "tuple": 4,
            "'debug sql parser'": 2,
            "'dump edgeql/ir/sql asts'": 1,
            "'print expanded delta command tree prior to processing'": 1,
            "'print delta command tree annortated with db ops'": 1,
            "'print delta command tree produced from ddl'": 1,
            "'output sql commands as executed during migration'": 1,
            "'print server errors'": 1,
            "'dump local variables in tracebacks'": 1,
            "'debug edgeql parser (rebuild grammar verbosly)'": 1,
            "s_schema.schema": 837,
            "s_atoms.atom": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,...]": 5,
            "s_obj.class": 6,
            "s_funcs.function": 21,
            "ql_ast.typenamenode": 1,
            "language": 1,
            "objectname": 2,
            "literalnode": 1,
            "functioncode": 1,
            "irast.binop": 6,
            "'dump sql ast/query before/after optimization'": 1,
            "pgast.commontableexpr": 32,
            "pgast.selectstmt": 25,
            "collections.ordereddict": 1,
            "relation": 2,
            "pgast.restarget": 1,
            "pgast.rangevar": 1,
            "pgast.base": 55,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,relation]": 1,
            "inlinestrategy": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='set',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "meta.queryinfo": 1,
            "pgast.query": 144,
            "context.compilercontext": 64,
            "none": 862,
            "irast.base": 96,
            "irast.mutatingstmt": 33,
            "pgast.dml": 6,
            "irast.set": 164,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,pgast,pgast]": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,astutils]": 1,
            "context.environment": 119,
            "irast.stmt": 8,
            "pgast.baserangevar": 30,
            "irast.pathid": 30,
            "pgast.baserelation": 2,
            "irast.selectstmt": 5,
            "irast.groupstmt": 4,
            "irast.insertstmt": 9,
            "irast.updatestmt": 6,
            "irast.deletestmt": 5,
            "qlast.base": 48,
            "context.contextlevel": 108,
            "qlast.typename": 17,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast,irast]": 3,
            "irast.typeref": 35,
            "so.class": 3,
            "ql_ast.typename": 1,
            "typing.any": 7,
            "context.compilercontextlevel": 136,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast]": 4,
            "namewithparents": 12,
            "esast.constraintdeclaration": 1,
            "pointerspec": 2,
            "pgast.columnref": 4,
            "'basescopetreenode'": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='set',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pathid]": 1,
            "s_types.type": 185,
            "stdbytes": 2,
            "stdint": 2,
            "stdfloat": 1,
            "stddecimal": 4,
            "s_int.stdfloat": 2,
            "stdsequence": 1,
            "stdstr": 2,
            "s_types.viewtype": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_modules]": 4,
            "'type'": 25,
            "pgast.insertstmt": 7,
            "pgast.outputvar": 15,
            "pg_types.pointerstorageinfo": 4,
            "optionalrel": 2,
            "setrvars": 23,
            "irast.scopebranchnode": 1,
            "s_scalars.scalartype": 2,
            "so.object": 36,
            "int32": 4,
            "int16": 4,
            "stdint32": 4,
            "s_numeric.stdfloat64": 5,
            "stdint16": 4,
            "stdfloat32": 4,
            "s_obj.object": 12,
            "s_sources.source": 12,
            "s_pointers.pointercardinality": 1,
            "int64": 2,
            "stdint64": 2,
            "stdfloat64": 2,
            "io": 3,
            "irast.emptyset": 3,
            "irast.pointer": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast]": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,optionalrel]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast]": 1,
            "os.pathlike": 14,
            "pg_cluster.cluster": 1,
            "qlast.typeexpr": 9,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast]": 3,
            "dbops.plblock": 17,
            "base.plblock": 189,
            "base.compositecommandgroup": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 8,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_types]": 9,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) ['type']": 1,
            "type": 32,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [type]": 4,
            "tokens.t_sconst": 2,
            "irast.baseconstant": 17,
            "irast.unaryop": 1,
            "irast.integerconstant": 2,
            "irast.floatconstant": 2,
            "irast.stringconstant": 2,
            "irast.rawstringconstant": 2,
            "irast.booleanconstant": 3,
            "s_name.name": 3,
            "qlast.schemaitemclass": 2,
            "ft.operatorkind": 3,
            "s_func.funcparameterlist": 4,
            "qlast.operatorcommand": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "so.objectref": 3,
            "'schema'": 10,
            "uuid.uuid": 22,
            "s_deltas.createdelta": 2,
            "schemaname": 5,
            "irast.operatorcall": 11,
            "s_casts.cast": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_casts]": 2,
            "d_nodes.field": 1,
            "attribute": 2,
            "interface": 2,
            "float": 44,
            "pool": 2,
            "manager": 2,
            "qlast.detachedexpr": 3,
            "qlast.baseconstant": 3,
            "qlast.ifelse": 3,
            "qlast.isop": 1,
            "qlast.binop": 3,
            "qlast.set": 2,
            "irast.typecheckop": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [qlast]": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,typing [str]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "s_expr.expression": 3,
            "qlast.expr": 27,
            "pathlib.path": 27,
            "edgedb.tuple": 1,
            "edgedb.namedtuple": 3,
            "edgedb.linkset": 1,
            "edgedb.link": 3,
            "edgedb.object": 5,
            "datetime.datetime": 3,
            "datetime.date": 2,
            "datetime.time": 2,
            "datetime.timedelta": 1,
            "querymode": 2,
            "context.replcontext": 51,
            "configlevel": 1,
            "setting": 2,
            "config.port": 1,
            "gqlast.variabledefinition": 1,
            "gt.gqlcoreschema": 3,
            "qlast.configset": 1,
            "qlast.configreset": 1,
            "qlast.configinsert": 1,
            "qlast.configop": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,s_types]": 2,
            "irast.configset": 1,
            "irast.configreset": 2,
            "irast.configinsert": 5,
            "qlast.insertquery": 3,
            "edgedb.enumvalue": 3,
            "qltypes.cardinality": 38,
            "annotation": 3,
            "pgerrorcode": 1,
            "errors.edgedberror": 2,
            "expression": 13,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_types]": 1,
            "pgast.baseexpr": 48,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [str],str]": 1,
            "qlast.createobject": 5,
            "layouttracecontext": 6,
            "deptracecontext": 6,
            "list [ast]": 1,
            "ast.classdef": 1,
            "union [ast,ast]": 1,
            "ast.asyncfunctiondef": 1,
            "ast.ast": 3,
            "typecoverage": 6,
            "path": 8,
            "optional [iterable [str]]": 29,
            "sd.deltaroot": 8,
            "ln": 2,
            "node": 2,
            "list [str]": 46,
            "iterable [str]": 14,
            "iterator [str]": 4,
            "migrations.migration": 1,
            "optional [unittest]": 1,
            "multiprocessing.simplequeue": 3,
            "mutableset [s_name]": 5,
            "sd.command": 36,
            "s_abc.schema": 3,
            "sd.objectcommand": 5,
            "s_abc.object": 1,
            "optional [tuple [type,...]]": 1,
            "union [type,tuple [type,...]]": 1,
            "type [parametrictype]": 4,
            "tuple [type,...]": 10,
            "iterable [any]": 3,
            "list [t]": 10,
            "any": 139,
            "iterable [t]": 12,
            "slice": 4,
            "t": 32,
            "set [t]": 2,
            "abstractset [any]": 2,
            "abstractset [t]": 15,
            "dict [k,v]": 2,
            "v": 8,
            "k": 5,
            "iterable [k]": 1,
            "optional [v]": 1,
            "checkeddict [k,v]": 2,
            "tuple [any,...]": 7,
            "parametrictype": 1,
            "frozencheckedlist [t]": 4,
            "checkedlist [t]": 6,
            "iterator [t]": 1,
            "frozencheckedset [t]": 5,
            "checkedset [t]": 9,
            "iterator [k]": 1,
            "optional [str]": 123,
            "optional [objectmeta]": 1,
            "qlast.describestmt": 1,
            "list [s_obj]": 1,
            "iterable [so]": 15,
            "list [objectmeta]": 1,
            "dict [qltypes,objectmeta]": 1,
            "optional [qltypes]": 4,
            "qltypes.schemaobjectclass": 3,
            "iterator [objectmeta]": 1,
            "objectmeta": 1,
            "optional [so]": 27,
            "iterator [so]": 1,
            "schema": 1,
            "irast.typecast": 5,
            "dict [tuple [str,type],objectcommandmeta]": 1,
            "commandcontext": 8,
            "type [object_t]": 1,
            "dict [sd,list [sd]]": 1,
            "dict [uuid,so]": 3,
            "dict [tuple [str,sn],dict [str,any]]": 2,
            "dict [sn,sn]": 4,
            "dict [tuple [type [sd],sn],sd]": 1,
            "dict [sd,set [sd]]": 1,
            "dict [sd,int]": 1,
            "list [sd]": 7,
            "optional [s_schema]": 19,
            "set [so]": 3,
            "compilercontext [contextlevel]": 1,
            "optional [contextlevel]": 5,
            "contextlevel_t": 7,
            "compilercontext [contextlevel_t]": 1,
            "optional [contextlevel_t]": 4,
            "list [contextlevel_t]": 1,
            "type [contextlevel_t]": 1,
            "defaultdict [str,int]": 1,
            "compilercontextmanager [contextlevel_t]": 2,
            "pgcodegen.sqlsourcegenerator": 1,
            "optional [pgast]": 31,
            "pgast.tupleelementbase": 1,
            "callable [...,any]": 3,
            "list [any]": 3,
            "pgast.expr": 2,
            "environment": 1,
            "dict [str,int]": 1,
            "dict [pgast,pgast]": 1,
            "optional [union [pgast,novolatilitysentinel]]": 1,
            "dict [tuple [irast,irast],union [pgast,pgast]]": 1,
            "set [irast]": 15,
            "dict [irast,irast]": 4,
            "chainmap [irast,pgast]": 1,
            "irast.scopetreenode": 34,
            "defaultdict [tuple [str,optional [irast]],list [tuple [str,union [pgast,pgast],irast]]]": 1,
            "defaultdict [tuple [str,optional [irast]],list [tuple [str,union [pgast,pgast]]]]": 1,
            "compilercontextlevel": 2,
            "contextswitchmode": 2,
            "attribute(\n    value=name(\n        value='compiler',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='compilercontextmanager',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [compilercontextlevel]": 4,
            "aliases.aliasgenerator": 1,
            "optional [outputformat]": 2,
            "dict [irast,bool]": 1,
            "optional [irast]": 32,
            "tuple [str,...]": 9,
            "mapping [str,pgast]": 1,
            "pgast.pathrangevar": 3,
            "iterable [pgast]": 1,
            "list [pgast]": 8,
            "pgast.tuplevar": 1,
            "list [tuple [str,union [pgast,pgast],irast]]": 1,
            "list [tuple [str,union [pgast,pgast]]]": 1,
            "iterable [callable [...,bool]]": 6,
            "set [s_obj]": 1,
            "iterable [s_types]": 11,
            "tuple [s_schema,s_types,bool]": 3,
            "sd.commandcontext": 254,
            "optional [qlast]": 60,
            "tuple [so,...]": 8,
            "qlast.ddl": 6,
            "optional [sd]": 5,
            "mapping [optional [str],str]": 36,
            "migrations.createmigration": 2,
            "sequence [tuple [str,qlast]]": 1,
            "tuple [s_schema,sd]": 4,
            "optional [commandcontext]": 1,
            "command": 1,
            "base.query": 1,
            "objectcontainer_t": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [objectcontainer_t,typing]": 1,
            "type [namet]": 2,
            "union [schemaname,str]": 7,
            "namet": 2,
            "tuple [union [schemaname,str],optional [str],str]": 1,
            "union [pathlib,str]": 8,
            "list [callable [...,none]]": 1,
            "callable [...,none]": 3,
            "fakeatexit": 1,
            "tuple [s_func]": 1,
            "tuple [list [str],optional [str]]": 1,
            "sequence [pgast]": 3,
            "base.ast": 1,
            "sequence [base]": 1,
            "union [base,sequence [base]]": 1,
            "optional": 8,
            "union": 3,
            "qlast": 173,
            "sequence": 4,
            "tuple [list [str],frozenset [qlast]]": 1,
            "dict [str,qlast]": 4,
            "qlast.path": 22,
            "qlast.objectref": 9,
            "sequence [s_func]": 1,
            "mapping [any,qlast]": 1,
            "union [parameterdesc,parameter]": 1,
            "ft.parameterkind": 3,
            "optional [expr]": 3,
            "ft.typemodifier": 5,
            "pgparams": 1,
            "mapping [str,parameter]": 1,
            "list [parameterdesc]": 2,
            "tuple [str,dict [str,str]]": 1,
            "optional [s_types]": 6,
            "so.objectlist": 5,
            "functionid": 11,
            "stat": 4,
            "rgb": 4,
            "stats": 6,
            "list [functionid]": 4,
            "dict [functionid,function]": 6,
            "dict [call,stat]": 4,
            "tuple [functionid,...]": 4,
            "counter [call]": 8,
            "set [call]": 2,
            "list [block]": 6,
            "abstractset [call]": 4,
            "optional [block]": 2,
            "sequence [functionid]": 2,
            "optional [functionid]": 2,
            "list [list [rgb]]": 2,
            "iterator [rgb]": 2,
            "tuple [dict [functionid,function],dict [call,stat]]": 2,
            "functionname": 2,
            "tuple [list [block],list [block],float]": 2,
            "tuple [list [str],int]": 2,
            "type [uuid]": 2,
            "optional [s_obj]": 5,
            "optional [mapping [union [str,qlast],union [irast,s_obj]]]": 1,
            "optional [mapping [optional [str],str]]": 16,
            "sequence [s_types]": 4,
            "optional [s_func]": 4,
            "optional [s_name]": 9,
            "irast.command": 2,
            "optional [mapping [union [str,qlast],s_obj]]": 1,
            "s_func.parameterlikelist": 3,
            "tuple [dict [str,irast],list [qlast]]": 2,
            "s_func.function": 1,
            "irast.statement": 5,
            "irast.expr": 3,
            "qlast.statement": 4,
            "union [irast,irast]": 4,
            "optional [parsing]": 14,
            "iterable [s_func]": 1,
            "s_func.parameterdesc": 1,
            "mapping [str,s_func]": 1,
            "tuple [s_func,...]": 2,
            "optional [s_casts]": 1,
            "optional [s_pointers]": 14,
            "s_objtypes.objecttype": 8,
            "list [qlast]": 14,
            "contextlevel": 3,
            "s_pointers.pointerlike": 13,
            "tuple [s_obj,...]": 2,
            "union [s_obj,s_obj,none]": 3,
            "union [none,s_obj,s_obj]": 1,
            "optional [environment]": 2,
            "attribute(\n    value=name(\n        value='compiler',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='compilercontextmanager',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [contextlevel]": 3,
            "iterable [qltypes]": 5,
            "iterable [irast]": 3,
            "irast.typeintrospection": 3,
            "irast.functioncall": 4,
            "list [irast]": 7,
            "irast.parameter": 3,
            "irast.constantset": 4,
            "s_pointers.pointer": 15,
            "irast.sliceindirection": 4,
            "irast.indexindirection": 3,
            "irast.array": 3,
            "irast.tuple": 3,
            "irast.tupleindirection": 2,
            "irast.anytyperef": 1,
            "irast.anytupleref": 1,
            "tuple [s_types,s_types]": 1,
            "s_pointers.pointerdirection": 9,
            "union [none,s_types,irast]": 2,
            "abstractset [str]": 38,
            "callable [...,contextmanager [context]]": 1,
            "iterator [context]": 1,
            "union [s_types,s_pointers]": 3,
            "optional [pathid]": 5,
            "pathid": 17,
            "optional [derivableobjectbase]": 1,
            "mapping [str,parameterlike]": 1,
            "optional [parameterlike]": 1,
            "tuple [parameterlike,...]": 1,
            "parameter": 1,
            "referencing.referencedt": 2,
            "optional [mapping [str,any]]": 8,
            "tuple [s_schema,referencing]": 2,
            "union [so,so,none]": 2,
            "optional [callable [...,bool]]": 6,
            "optional [pointers]": 1,
            "sequence [table]": 1,
            "iterable [edgedb]": 2,
            "union [literal ['left'],literal ['center'],literal ['right']]": 1,
            "list [columnspec]": 2,
            "typing.textio": 1,
            "list [int]": 5,
            "list [list [str]]": 1,
            "sequence [str]": 9,
            "dict [s_types,tuple [str,parsing]]": 1,
            "baseexception": 3,
            "list [pointer]": 1,
            "optional [cprofile]": 2,
            "commandcallback": 1,
            "optional [dict [str,str]]": 1,
            "tuple [command,...]": 2,
            "sequence [command]": 1,
            "optional [mapping [str,str]]": 4,
            "dict [str,list [command]]": 1,
            "list [tuple [str,str,str]]": 1,
            "tuple [command,abstractset [str],optional [str]]": 1,
            "optional [int]": 19,
            "terminal.buffer": 19,
            "union [edgedb,edgedb,edgedb,edgedb]": 1,
            "union [int,float]": 1,
            "decimal.decimal": 1,
            "edgedb.duration": 1,
            "dict [str,str]": 6,
            "type [sd]": 3,
            "pg_compiler.outputformat": 2,
            "tuple [s_schema,str]": 2,
            "union [str,pathlib,none]": 1,
            "dict [functionid,callcounts]": 4,
            "cprofile.profile": 1,
            "tuple [int,int]": 4,
            "sequence [union [qlast,qlast]]": 1,
            "dict [str,list [qlast]]": 1,
            "dict [irast,pgast]": 1,
            "pgast.relrangevar": 2,
            "optional [tuple [str,...]]": 1,
            "astmatch.matchastnode": 1,
            "optional [list [irast]]": 2,
            "tuple [union [irast,tuple [irast,s_pointers]],...]": 1,
            "tuple [union [uuid,str,tuple [str,s_pointers,bool]],...]": 1,
            "frozenset [str]": 4,
            "abstractset [anynamespace]": 3,
            "iterator [pathid]": 2,
            "optional [weakref [scopetreenode]]": 1,
            "scopetreenode": 4,
            "optional [scopetreenode]": 5,
            "iterator [scopetreenodewithpathid]": 1,
            "set [pathid]": 3,
            "pathid.pathid": 4,
            "abstractset [pathid]": 2,
            "set [str]": 7,
            "dict [str,any]": 25,
            "type [irast]": 2,
            "type [errors]": 1,
            "irast.basepointerref": 19,
            "dict [irast,s_pointers]": 1,
            "tuple [s_pointers,s_pointers]": 1,
            "pointerrefcache": 1,
            "optional [dict [tuple [s_pointers,s_pointers],irast]]": 1,
            "iterable [s_obj]": 1,
            "list [so]": 11,
            "optional [frozenset [str]]": 3,
            "sequence [irast]": 1,
            "fenceinfo": 2,
            "iterator [scopetreenode]": 1,
            "sn.schemaname": 13,
            "tuple [str]": 2,
            "iterator [s_mod]": 1,
            "dbstate.compilerconnectionstate": 1,
            "list [dumpblockdescriptor]": 3,
            "tuple [uuid,...]": 1,
            "edgedb.blockingioconnection": 8,
            "dict [str,list [tuple [int,bytes]]]": 1,
            "dstructs.dumpdatablock": 1,
            "dstructs.dumpdesc": 1,
            "list [bytes]": 2,
            "list [tuple [int,bytes]]": 2,
            "list [dumpblockinfo]": 2,
            "dumpinfo": 3,
            "deque [dumpblockinfo]": 2,
            "iterable [tuple [bytes,bytes]]": 2,
            "click.context": 2,
            "io.bytesio": 1,
            "asyncpg.connection": 17,
            "compilerdatabasestate": 1,
            "compilecontext": 1,
            "dumpdescriptor": 1,
            "list [tuple [bytes,bytes]]": 1,
            "sequence [dumpblockdescriptor]": 1,
            "restoredescriptor": 1,
            "sequence [dbstate]": 1,
            "sequence [restoreblockdescriptor]": 1,
            "optional [type [qltracer]]": 2,
            "tuple [str,str]": 5,
            "qlast.createindex": 1,
            "qlast.basesmixin": 1,
            "list [s_name]": 1,
            "iterable [s_pointers]": 2,
            "irast.tupleindirectionpointerref": 2,
            "irast.typeintersectionpointerref": 2,
            "irast.tupleindirectionlink": 1,
            "irast.typeintersectionlink": 1,
            "tuple [irast,list [s_pointers]]": 1,
            "iterable [objecttype]": 1,
            "objecttype": 1,
            "iterable [pointer]": 1,
            "tuple [s_schema,pointer]": 1,
            "tuple [s_schema,s_types]": 1,
            "typeintersectionresult": 1,
            "set [s_types]": 5,
            "tuple [frozenset [s_types],bool]": 1,
            "iterable [source]": 1,
            "source": 2,
            "dict [uuid,irast]": 4,
            "optional [ql_compiler_ctx]": 1,
            "optional [dict [uuid,irast]]": 2,
            "cluster": 3,
            "remotecluster": 1,
            "optional [ssl_module]": 1,
            "optional [bool]": 5,
            "optional [pathlib]": 11,
            "collection [str]": 2,
            "union [int,list [int]]": 4,
            "list [union [str,tuple [str,int]]]": 1,
            "list [tuple [str,...]]": 1,
            "tuple [list [str],list [int]]": 1,
            "tuple [tuple [union [str,tuple [str,int]],...],connectionparameters]": 1,
            "memoryframe": 3,
            "dict [lineid,memoryframe]": 1,
            "dict [lineno,str]": 1,
            "list [functionname]": 1,
            "union [ast,ast,ast]": 1,
            "dict [modulepath,dict [lineno,str]]": 1,
            "dict [tuple [modulepath,lineno],str]": 1,
            "tuple [modulepath,lineno]": 1,
            "modulepath": 1,
            "lineno": 1,
            "optional [scopecache]": 1,
            "iterator [block]": 1,
            "pointer": 1,
            "optional [createobjecttype]": 1,
            "dict [str,so]": 1,
            "optional [so [s_types]]": 1,
            "so.inheritingobjectbaset": 3,
            "callable [...,so]": 1,
            "optional [iterable [so]]": 3,
            "list [tuple [so,int]]": 1,
            "union [list [str],set [str]]": 1,
            "errors.schemaerror": 2,
            "noreturn": 3,
            "serverconfig": 3,
            "list [asyncio]": 2,
            "list [baseport]": 1,
            "mapping [config,baseport]": 1,
            "asyncio.streamreader": 2,
            "asyncio.process": 3,
            "so.refdict": 17,
            "binwrapper.binwrapper": 3,
            "optional [mapping [tuple [str,str],uuid]]": 2,
            "optional [mapping [str,uuid]]": 2,
            "list [tuple [str,str,bytes]]": 2,
            "optional [qlast_]": 5,
            "optional [irast_]": 4,
            "dict [str,optional [str]]": 1,
            "type [expression]": 6,
            "qlast_.base": 4,
            "optional [mapping [union [str,qlast_],so]]": 1,
            "irast_.command": 1,
            "irast_.statement": 2,
            "tuple [expression,expression]": 1,
            "sequence [so]": 2,
            "type [expressionlist]": 1,
            "optional [expressionlist]": 2,
            "so.comparisoncontext": 3,
            "dict [so,str]": 1,
            "annotationvalue": 2,
            "sd.objectcommandmeta": 1,
            "qlast.createannotation": 2,
            "sd.alterobjectproperty": 16,
            "createannotation": 1,
            "annotationsubject": 2,
            "qlast.createannotationvalue": 2,
            "createannotationvalue": 1,
            "qlast.alterannotationvalue": 2,
            "alterannotationvalue": 1,
            "tuple [s_schema,str,set [uuid]]": 1,
            "set [uuid]": 4,
            "asyncpg_con.connection": 4,
            "pgcluster.basecluster": 6,
            "mapping [str,str]": 4,
            "spec": 2,
            "optional [immu [str,any]]": 1,
            "attribute(\n    value=name(\n        value='immu',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='map',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,any]": 1,
            "optional [base]": 1,
            "pgcluster.remotecluster": 1,
            "tuple [list [str],list [str]]": 2,
            "so.inheritingobjectbase": 9,
            "dict [s_schema,tuple [s_referencing,qlast,list [inheritingobject]]]": 3,
            "dict [str,type [sd]]": 1,
            "s_referencing.referencedinheritingobject": 1,
            "list [inheritingobject]": 2,
            "tuple [s_schema,s_referencing]": 1,
            "qlast.objectddl": 7,
            "list [tuple [list [so],union [str,so,tuple [str,so]]]]": 1,
            "tuple [tuple [so,...],tuple [tuple [list [so],union [str,so,tuple [str,so]]],...]]": 1,
            "qlast.objectddl_t": 4,
            "list [sn]": 1,
            "sd.commandgroup": 2,
            "dict [str,iterable [str]]": 1,
            "tuple [s_schema,so]": 1,
            "inheritingobject": 1,
            "tuple [sn,...]": 4,
            "frozenset [irast]": 3,
            "frozenset [pathid]": 1,
            "list [scopetreenodewithpathid]": 1,
            "union [str,qlast]": 1,
            "optional [type [s_obj]]": 7,
            "optional [s_oper]": 1,
            "s_constr.constraint": 3,
            "s_inh.inheritingobject": 1,
            "classvar [dict [any,dict [type,adapter]]]": 2,
            "classvar [bool]": 2,
            "optional [type]": 6,
            "type [adapter_t]": 1,
            "optional [dict [str,any]]": 4,
            "adapter_t": 1,
            "dict [any,adapter]": 1,
            "dict [type,adapter]": 1,
            "adapter": 2,
            "dict [any,dict [type,adapter]]": 2,
            "set [adapter]": 1,
            "optional [adapter]": 3,
            "tuple [type [adapter],optional [frozenset [tuple [str,any]]]]": 1,
            "final": 2,
            "type [t]": 3,
            "union [t,nodefaultt]": 1,
            "callable [...,str]": 3,
            "dict [str,field [any]]": 4,
            "type [structmeta_t]": 1,
            "field [t]": 4,
            "structmeta_t": 1,
            "optional [field [any]]": 1,
            "mapping [str,any]": 9,
            "type [struct_t]": 2,
            "struct_t": 6,
            "iterator [tuple [str,str]]": 1,
            "iterator [tuple [str,any]]": 1,
            "mixedstructmeta": 1,
            "dict [str,type [sd [so]]]": 1,
            "qlast.ddloperation": 46,
            "tuple [type [sd],sn]": 1,
            "set [tuple [str,sn]]": 1,
            "match": 1,
            "optional [deque [token]]": 1,
            "token": 1,
            "optional [abstractset [str]]": 3,
            "referencedt": 2,
            "referencedinheritingobjectt": 4,
            "list [referencedinheritingobjectt]": 3,
            "optional [type [sd [sd]]]": 2,
            "referencedobjectcommandmeta": 1,
            "qlast.namedddl": 4,
            "type [qlast]": 11,
            "list [s_inheriting]": 2,
            "tuple [sd,sd]": 1,
            "referencedinheritingobject": 3,
            "classvar [type [qlast]]": 1,
            "alterreferencedinheritingobject": 1,
            "mapping [str,bool]": 2,
            "list [callable [...,bool]]": 1,
            "classvar [optional [tuple [type,...]]]": 3,
            "classvar [dict [str,tuple [int,str]]]": 1,
            "union [union [type,str],tuple [union [type,str],...]]": 1,
            "dict [str,tuple [int,str]]": 1,
            "dict [int,str]": 1,
            "classvar [type]": 3,
            "click.param": 1,
            "enums.ioformat": 5,
            "attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [so]": 2,
            "attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommand',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [so]": 1,
            "collection [irast]": 32,
            "attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommandcontext',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [so]": 1,
            "alterreferencedinheritingobject [referencedinheritingobjectt]": 1,
            "types.type": 3,
            "optional [uuid]": 4,
            "so.inheritingobject": 4,
            "optional [types]": 1,
            "type [s_types]": 1,
            "optional [type [s_types]]": 3,
            "s_types.typet": 3,
            "optional [collections]": 1,
            "qlast.createconcretelink": 1,
            "attribute(\n    value=name(\n        value='referencing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='alterreferencedinheritingobject',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [link]": 1,
            "union [qlast,qlast]": 3,
            "optional [type [so]]": 3,
            "expressionshell": 1,
            "list [scalartype]": 1,
            "attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [scalartype]": 1,
            "so.objectshell": 4,
            "s_types.typeshell": 4,
            "dict [str,s_types]": 1,
            "list [s_types]": 5,
            "union [so,so]": 2,
            "classvar [dict [any,str]]": 1,
            "classvar [int]": 1,
            "classvar [type [str]]": 1,
            "classvar [type [t]]": 1,
            "list [tuple [gql_lexer,int,int,int,int,str]]": 1,
            "list [gql_error]": 2,
            "optional [dict [str,tuple [str,int,int]]]": 4,
            "graphql.document": 3,
            "gql_lexer.token": 2,
            "transpiledoperation": 1,
            "gql_ast.valuenode": 1,
            "union [str,float,int,bool]": 1,
            "optional [list [tuple [int,int,int,str]]]": 1,
            "compiledoperation": 2,
            "union [s_types,s_types]": 1,
            "qltypes.schemacardinality": 2,
            "cardinalitybound": 4,
            "tuple [cardinalitybound,cardinalitybound]": 1,
            "schemacardinality": 2,
            "tuple [bool,schemacardinality]": 2,
            "cardinality": 1,
            "pointerdirection": 2,
            "list [_edgeql_rust]": 4,
            "optional [tuple [int,int,int]]": 1,
            "optional [compileroptions]": 2,
            "globalcompileroptions": 1,
            "optional [globalcompileroptions]": 1,
            "frozenset [s_types]": 1,
            "coptions.compileroptions": 1,
            "optional [qlcompiler]": 1,
            "dict [irast,qltypes]": 2,
            "qltypes.volatility": 28,
            "list [completionworkcallback]": 2,
            "basedelta_t": 1,
            "dict [str,irast]": 2,
            "union [sn,str]": 1,
            "set [links]": 2,
            "so.subclassableobject": 1,
            "so.qualifiedobject": 1,
            "pointers.pointer": 1,
            "tuple [s_schema,optional [s_types]]": 1,
            "qlast.createconcretepointer": 1,
            "attribute(\n    value=name(\n        value='referencing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='alterreferencedinheritingobject',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [property]": 1,
            "iterator [int]": 1,
            "list [tuple [bool,union [dbstate,tuple [str,str,dict [str,str]]]]]": 1,
            "list [dbstate]": 1,
            "dict [type [qlast],type [sd]]": 5,
            "qlast.shapeop": 6,
            "optional [context]": 1,
            "set [union [s_obj,s_pointers]]": 1,
            "deleteannotationvalue": 1,
            "edbcompiler.compiler": 5,
            "dict [type [s_obj],s_refl]": 1,
            "stdlibbits": 2,
            "tuple [stdlibbits,str]": 1,
            "optional [frozenset [irast]]": 4,
            "mapping [irast,tuple [pgast,pgast]]": 1,
            "tuple [pgast,pgast]": 2,
            "dmlparts": 6,
            "dbops.commandgroup": 1,
            "edbcompiler.backendinstanceparams": 1,
            "worker": 2,
            "windowedsum": 1,
            "qlast.baseobjectref": 3,
            "qlast.schema": 1,
            "edbcompiler.ioformat": 1,
            "irast.constexpr": 1,
            "attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommand',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [referencedinheritingobjectt]": 1,
            "s_types.tuple": 2,
            "irast.constraintref": 1,
            "list [union [qlast,qlast]]": 1,
            "union [qlast,qlast,qlast]": 1,
            "qlast.selectquery": 4,
            "qlast.updatequery": 1,
            "qlast.deletequery": 1,
            "qlast.forquery": 4,
            "qlast.groupquery": 1,
            "qlast.functioncall": 5,
            "tuple [mapping [optional [str],str],abstractset [str]]": 1,
            "optional [tuple [irast,pgast]]": 5,
            "qlast.sortorder": 1,
            "qlast.nonesorder": 1,
            "tuple [sd,sd [referencedt]]": 1,
            "optional [tuple [pgast,pgast]]": 3,
            "irast.onconflictclause": 3,
            "versionstage": 1,
            "version": 1,
            "verutils.version": 4,
            "pctx.parsercontext": 2,
            "optional [s_objects]": 1,
            "optional [dict [ptrrefcachekey,irast]]": 3,
            "optional [dict [typerefcachekey,irast]]": 3,
            "optional [startupscript]": 1,
            "operatorkind": 1,
            "volatility": 1,
            "linktargetdeleteaction": 1,
            "parameterkind": 1,
            "typemodifier": 1,
            "optional [union [irast,pgast]]": 1,
            "dict [s_pointers,list [s_pointers]]": 1,
            "dict [s_pointers,tuple [optional [qltypes],bool,optional [parsing]]]": 1,
            "dict [s_types,irast]": 1,
            "dict [uuid,pgast]": 1,
            "optional [dict [s_obj,set [qlast]]]": 1,
            "dict [so,list [str]]": 1,
            "outputformat": 1,
            "generator [none,none,none]": 1,
            "qltypes.configscope": 7,
            "dict [str,list [str]]": 1,
            "mapping [str,settingvalue]": 6,
            "optional [spec]": 1,
            "mapping_t": 1,
            "operation": 1,
            "createdatabase": 1,
            "reducible": 1,
            "tuple [str,optional [str],tuple [str,optional [union [tuple [type,...],type]],tuple [uuid,...],tuple [tuple [str,any],...]]]": 3,
            "frozenset [uuid]": 1,
            "tuple [int,int,int]": 4,
            "union [qltokenizer,str]": 3,
            "union [str,tokenizer]": 1,
            "list [token]": 4,
            "entry": 2,
            "normalizedsource": 1,
            "list [shapeptr]": 2,
            "optional [list [any]]": 1,
            "mutableset [k]": 4,
            "optional [mutableset [k]]": 5,
            "optional [t]": 3,
            "mapping [k,depgraphentry [k,v,t]]": 3,
            "dict [k,orderedset [k]]": 3,
            "iterator [tuple [k,depgraphentry [k,v,t]]]": 1,
            "orderedset [k]": 1,
            "mergefunction [v]": 1,
            "iterator [v]": 1,
            "iterable [v]": 1,
            "list [tuple [qlast,s_name]]": 1,
            "dict [optional [str],str]": 3,
            "dict [str,qltracer]": 2,
            "dict [str,set [s_name]]": 5,
            "dict [str,set [str]]": 4,
            "dict [str,topological [str,qltracer,bool]]": 1,
            "ddlgraph": 2,
            "mapping [str,s_name]": 2,
            "mapping [str,list [qlast]]": 1,
            "tuple [qlast,...]": 1,
            "qltracer.namedobject": 4,
            "qltracer.source_t": 2,
            "qltracer.sourcelike_t": 1,
            "optional [qltracer]": 3,
            "mapping [str,abstractset [s_name]]": 1,
            "set [s_name]": 2,
            "list [dependency]": 2,
            "optional [iterable [dependency]]": 1,
            "qltracer.typelike": 2,
            "type [s_obj]": 2,
            "s_obj.object_t": 1,
            "mapping [str,t]": 1,
            "dict [str,union [s_pointers,pointer]]": 1,
            "iterable [tuple [str,t]]": 1,
            "typelike": 1,
            "abstractset [s_name]": 2,
            "type [qualnamet]": 2,
            "type [unqualnamet]": 2,
            "qualnamet": 2,
            "unqualnamet": 2,
            "name": 4,
            "s_name.qualname": 5,
            "union [int,slice]": 3,
            "dict [int,rule]": 1,
            "dict [tuple [any,any],any]": 3,
            "optional [list [qlast]]": 1,
            "s_func.parameterlike": 1,
            "dict [int,type [edgedberror]]": 1,
            "dict [int,dict [str,str]]": 1,
            "settingsmap": 2,
            "dict [str,type]": 1,
            "union [pgcluster,pgcluster]": 1,
            "type [http]": 1,
            "optional [typing [str]]": 1,
            "optional [any]": 2,
            "dict [str,dict [str,any]]": 1,
            "list [union [schemaclasstransformer,structtransformer]]": 1,
            "backendcapabilities": 3,
            "backendinstanceparams": 2,
            "optional [backendinstanceparams]": 3,
            "backendruntimeparams": 2,
            "tuple [type [remotecluster],optional [str]]": 1,
            "tuple [type [remotecluster],backendinstanceparams]": 1,
            "capability": 1,
            "callable [...,error_t]": 1,
            "error_t": 1,
            "enum_t": 1,
            "optional [sequence [str]]": 1,
            "optional [pgcon]": 1,
            "mapping [str,roledescriptor]": 1,
            "s_types.typeexprshell": 1,
            "dict [tuple [irast,irast],qltypes]": 2,
            "infctx": 2,
            "mapping [str,config]": 1,
            "optional [mapping [tuple [irast,str],pgast]]": 2,
            "mapping [tuple [irast,tuple [str,...]],str]": 1,
            "mapping [tuple [irast,str],pgast]": 1,
            "optional [iterable [sn]]": 2,
            "tuple [s_expr,str,str,bool]": 1,
            "union [bool,base]": 1,
            "dict [tuple [type [so],str],frozenset [so]]": 1,
            "list [dbops]": 5,
            "mapping [s_types,s_casts]": 1,
            "list [tuple [s_pointers,list [s_pointers]]]": 1,
            "optional [set [s_obj]]": 1,
            "tuple [list [tuple [tuple [str,str],str]],list [s_pointers]]": 1,
            "dbops.sqlblock": 1,
            "classvar [dict [int,type]]": 1,
            "unqualname": 2,
            "type [s_pointers]": 2,
            "optional [type [s_pointers]]": 4,
            "sn.unqualname": 7,
            "s_pointers.pointer_t": 1,
            "markup.context": 1,
            "markup.markup": 1,
            "list [optional [bool]]": 2,
            "edbcompiler.compilecontext": 1,
            "qlast.base_t": 4,
            "type [qltracer]": 2,
            "qltracer.objectlike": 2,
            "tuple [optional [type [qltracer]],optional [type [s_obj]]]": 1,
            "s_schema.flatschema": 8,
            "optional [list [tuple [gql_lexer,int,int,int,int,str]]]": 1,
            "optional [mapping [str,object]]": 1,
            "list [optional [str]]": 1,
            "graphql.gqlcoreschema": 1,
            "state.databasesstate": 6,
            "pgcluster.backendruntimeparams": 5,
            "asyncio.queue": 1,
            "set [worker]": 1,
            "schema.flatschema": 1,
            "reflectioncache": 1,
            "compiler.compiler": 1,
            "optional [state]": 4,
            "state.databasestate": 1,
            "s_refl.schematypelayout": 1,
            "tuple [s_schema,s_ver]": 2,
            "s_name.unqualname": 3,
            "asyncio.future": 1,
            "asyncio.lock": 1,
            "attribute(\n    value=name(\n        value='immutables',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='map',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,settingvalue]": 1,
            "spec.setting": 1,
            "createextensionpackage": 1,
            "createextension": 1,
            "tuple [typevar,...]": 1,
            "nodes.var": 1,
            "nodes.jsondict": 1,
            "nodes.assignmentstmt": 4,
            "nodes.nameexpr": 4,
            "nodes.symboltablenode": 4,
            "list [field]": 6,
            "mypy_plugin.classdefcontext": 1,
            "optional [field]": 2,
            "scalartype": 1,
            "attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommand',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [scalartype]": 1,
            "optional [sd [objecttype]]": 1,
            "dict [int,set [irast]]": 1,
            "literal [false]": 2,
            "pointerstorageinfo": 1,
            "optional [pointerstorageinfo]": 3,
            "union [sslmode,str]": 1,
            "optional [sslmode]": 1,
            "sslmode": 1,
            "tuple [s_schema,s_pointers]": 2,
            "errorcode": 1,
            "frozenset": 1,
            "optional [callable [...,none]]": 1,
            "bootstrapcontext": 22,
            "mapping [str,uuid]": 2,
            "tuple [stdlibbits,edbcompiler]": 1,
            "list [tuple [qlast,sd]]": 2,
            "edbargs.serverconfig": 1,
            "irast.pointerref": 1,
            "union [pgast,pgast]": 1,
            "optional [taskgroup]": 1,
            "set [binary]": 1,
            "mutablemapping [int,irast]": 1,
            "dict [int,irast]": 2,
            "sn.qualname": 1,
            "tuple [union [irast,irast],context]": 1,
            "optional [list [str]]": 1,
            "qlast.shapeelement": 3,
            "dict [union [s_types,s_pointers],qlast]": 1,
            "dict [qlast,irast]": 1,
            "inferredvolatility": 2,
            "abstractset [irast]": 2,
            "optional [tempfile]": 1,
            "srvargs.serverconfig": 1,
            "tuple [pathlib,optional [pathlib]]": 1,
            "ssl.sslcontext": 1,
            "iterable [dict [str,data]]": 1,
            "list [ipath]": 12,
            "tuple [data,...]": 1,
            "db": 7,
            "data": 18,
            "iptr": 3,
            "evalcontext": 36,
            "ipath": 5,
            "prepcontext": 1,
            "list [tuple [data,...]]": 3,
            "set [ipath]": 2,
            "list [ipathelement]": 1,
            "list [data]": 73,
            "callable [...,union [data,list [data]]]": 1,
            "dict [str,liftedfunc]": 1,
            "liftedfunc": 1,
            "qlast.stringconstant": 2,
            "qlast.integerconstant": 1,
            "qlast.tuple": 2,
            "qlast.typecast": 2,
            "dict [ipath,bool]": 1,
            "list [tuple [qlast,bool]]": 3,
            "itypeintersection": 1,
            "list [tuple [qlast,bool,bool]]": 3,
            "list [row]": 7,
            "iterable [optional [qlast]]": 3,
            "dict [str,list [data]]": 1,
            "optional [dict [str,data]]": 3,
            "callable [...,union [data]]": 1,
            "qlast.booleanconstant": 1,
            "qlast.floatconstant": 1,
            "qlast.array": 1,
            "qlast.returningmixin": 1,
            "iterator [none]": 2,
            "sequence [t]": 1,
            "qlast.shape": 1,
            "qlast.ptr": 1,
            "list [tuple [qlast,optional [int],bool]]": 1,
            "result": 2,
            "asyncio.abstractserver": 2,
            "callable [...,t]": 1,
            "list [optional [int]]": 1,
            "dict [irast,optional [int]]": 2,
            "optional [tuple [str,int]]": 1,
            "optional [pgconnparams]": 1,
            "pgconnparams.connectionparameters": 3,
            "optional [subprocess [str]]": 1,
            "tuple [str,int]": 3,
            "asyncpg.serverversion": 1,
            "classvar [...]": 1,
            "types.moduletype": 2,
            "parsing.spec": 1,
            "qlparser.edgeqlparserbase": 1,
            "optional [list [qlparser]]": 1,
            "list [qlparser]": 2,
            "iterable [unittest]": 1,
            "testcasessetup": 1,
            "optional [testcasessetup]": 1,
            "dbops.view": 1,
            "sequence [tuple [str,str]]": 1,
            "optional [sequence [union [str,pathlib]]]": 1,
            "state": 1,
            "optional [asyncio]": 1,
            "base.clusterprotocol": 1,
            "optional [adaptive_ha]": 1,
            "consulagent": 4,
            "tuple [tuple [tuple [str,int],...],connectionparameters]": 1,
            "optional [tempcluster]": 1,
            "asyncio.abstracteventloop": 1,
            "asyncio.task": 1,
            "asyncio.streamwriter": 1,
            "qltypes.multiplicity": 1,
            "inf_ctx.infctx": 1,
            "tuple [optional [pgast],optional [pgast]]": 1,
            "irast.bindingkind": 1,
            "s_types.array": 1,
            "tuple [str,qlast]": 1,
            "set [tuple [type [so],sn]]": 1,
            "evaluationresult": 1,
            "edbconfig.spec": 2,
            "config.spec": 2,
            "optional [edgedb_args]": 8,
            "optional [pgparams]": 2,
            "pgparams.backendruntimeparams": 2,
            "rawtransaction": 1,
            "connection": 1,
            "versionmetadata": 1,
            "base.command": 3,
            "union [none,str,base]": 1,
            "params.backendruntimeparams": 1,
            "list [type]": 1,
            "optional [clustermode]": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 3231,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "bytes": 75,
            "float": 25,
            "str": 365,
            "int": 126,
            "dict": 7,
            "list": 4,
            "bool": 209,
            "io.fileio": 6,
            "set": 3,
            "base.pid": 17,
            "base.stderr": 9,
            "base.fn1": 4,
            "base.fn2": 4,
            "base.stdout": 5,
            "ast.ast": 4,
            "irast.path": 3,
            "base": 5,
            "point": 2,
            "tuple": 4,
            "types.functiontype": 1,
            "'debug sql parser'": 2,
            "s_funcs.function": 10,
            "pgast.restarget": 1,
            "pgast.rangevar": 2,
            "irast.binop": 6,
            "irast.set": 90,
            "pgast.query": 88,
            "context.compilercontext": 1,
            "pgast.base": 23,
            "'debug edgeql parser (rebuild grammar verbosly)'": 1,
            "'dump edgeql/ir/sql asts'": 1,
            "'dump sql ast/query before/after optimization'": 1,
            "'print expanded delta command tree prior to processing'": 1,
            "'print delta command tree annortated with db ops'": 1,
            "'print delta command tree produced from ddl'": 1,
            "'output sql commands as executed during migration'": 1,
            "'print server errors'": 1,
            "'dump local variables in tracebacks'": 1,
            "context.environment": 17,
            "irast.base": 41,
            "none": 239,
            "pgast.baserangevar": 28,
            "context.compilercontextlevel": 107,
            "context.contextlevel": 76,
            "irast.stmt": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast]": 4,
            "meta.relation": 6,
            "meta.queryinfo": 6,
            "pgast.rangesubselect": 1,
            "pgast.columnref": 4,
            "sn.name": 11,
            "stdbytes": 3,
            "stdint": 2,
            "stdfloat": 1,
            "stddecimal": 6,
            "s_int.stdfloat": 2,
            "stdsequence": 2,
            "stdstr": 3,
            "'basescopetreenode'": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='set',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pathid]": 1,
            "s_atoms.atom": 1,
            "s_types.type": 86,
            "typing.any": 4,
            "qlast.base": 21,
            "parsing.parsercontext": 8,
            "s_obj.object": 8,
            "qlast.typename": 13,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast,irast]": 2,
            "irast.typeref": 8,
            "irast.pathid": 22,
            "s_schema.schema": 126,
            "s_sources.source": 3,
            "s_pointers.pointercardinality": 1,
            "int64": 4,
            "int32": 4,
            "int16": 4,
            "stdint64": 4,
            "s_numeric.stdfloat64": 6,
            "stdint32": 4,
            "stdint16": 4,
            "stdfloat64": 4,
            "stdfloat32": 4,
            "s_types.viewtype": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_modules]": 2,
            "'type'": 2,
            "io": 3,
            "irast.mutatingstmt": 21,
            "pgast.dml": 4,
            "pgast.commontableexpr": 21,
            "pgast.insertstmt": 7,
            "pgast.outputvar": 8,
            "pg_types.pointerstorageinfo": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,pgast,pgast]": 2,
            "irast.emptyset": 1,
            "irast.pointer": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast]": 3,
            "optionalrel": 1,
            "setrvars": 13,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,optionalrel]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast]": 1,
            "irast.selectstmt": 2,
            "irast.groupstmt": 2,
            "irast.insertstmt": 4,
            "irast.updatestmt": 2,
            "irast.deletestmt": 3,
            "s_scalars.scalartype": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,...]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 7,
            "tokens.t_sconst": 2,
            "s_func.funcparameterlist": 2,
            "ft.operatorkind": 2,
            "os.pathlike": 11,
            "irast.unaryop": 1,
            "irast.baseconstant": 8,
            "irast.booleanconstant": 2,
            "type": 11,
            "manager": 3,
            "irast.cardinality": 1,
            "s_deltas.createdelta": 2,
            "s_name.name": 1,
            "uuid.uuid": 7,
            "object": 8,
            "s_casts.cast": 2,
            "irast.operatorcall": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_casts]": 1,
            "qlast.detachedexpr": 1,
            "qlast.baseconstant": 1,
            "qlast.ifelse": 1,
            "qlast.isop": 1,
            "qlast.binop": 1,
            "qlast.set": 2,
            "irast.typecheckop": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [qlast]": 3,
            "qlast.typeexpr": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast]": 1,
            "qlast.schemaitemclass": 2,
            "irast.integerconstant": 1,
            "irast.floatconstant": 1,
            "irast.stringconstant": 2,
            "irast.rawstringconstant": 2,
            "attribute": 2,
            "qlast.operatorcommand": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_types]": 4,
            "schemaname": 1,
            "dbops.plblock": 10,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,typing [str]]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "base.plblock": 111,
            "base.compositecommandgroup": 1,
            "interface": 2,
            "qlast.introspect": 1,
            "qlast.expr": 4,
            "configlevel": 1,
            "pathlib.path": 11,
            "pg_cluster.cluster": 2,
            "annotation": 3,
            "mapping [unittest,unittest]": 1,
            "so.objectref": 1,
            "type [parametrictype]": 2,
            "list [objectmeta]": 1,
            "optional [iterable [str]]": 1,
            "iterable [so]": 3,
            "optional [s_schema]": 2,
            "union [irast,irast]": 3,
            "optional [parsing]": 10,
            "optional [s_casts]": 1,
            "edgedb.link": 2,
            "edgedb.object": 4,
            "edgedb.namedtuple": 2,
            "context.replcontext": 51,
            "edgedb.duration": 1,
            "edgedb.enumvalue": 2,
            "optional [str]": 58,
            "optional [cprofile]": 1,
            "t": 4,
            "functionid": 5,
            "stat": 2,
            "rgb": 2,
            "stats": 2,
            "list [functionid]": 1,
            "dict [functionid,function]": 3,
            "dict [call,stat]": 2,
            "tuple [functionid,...]": 2,
            "counter [call]": 3,
            "set [call]": 1,
            "list [block]": 3,
            "abstractset [call]": 2,
            "optional [block]": 1,
            "sequence [functionid]": 1,
            "optional [functionid]": 1,
            "list [list [rgb]]": 1,
            "union [pathlib,str]": 4,
            "list [str]": 17,
            "cprofile.profile": 1,
            "tuple [int,int]": 5,
            "iterator [rgb]": 1,
            "tuple [dict [functionid,function],dict [call,stat]]": 1,
            "functionname": 1,
            "tuple [list [block],list [block],float]": 1,
            "tuple [list [str],int]": 1,
            "qlast.setfield": 1,
            "deptracecontext": 1,
            "optional [pgast]": 9,
            "pgast.baseexpr": 6,
            "union [none,s_types,irast]": 2,
            "optional [s_types]": 1,
            "pathid": 2,
            "s_pointers.pointerlike": 7,
            "s_pointers.pointerdirection": 5,
            "abstractset [str]": 18,
            "set [str]": 4,
            "optional [s_obj]": 5,
            "optional [mapping [optional [str],str]]": 6,
            "s_func.parameterlikelist": 1,
            "irast.statement": 3,
            "optional [irast]": 9,
            "qltypes.cardinality": 3,
            "irast.scopetreenode": 4,
            "pgast.pathrangevar": 2,
            "set [irast]": 1,
            "iterable [s_types]": 2,
            "set [s_types]": 1,
            "s_opers.operator": 1,
            "list [s_func]": 1,
            "iterable [objecttype]": 1,
            "dict [str,list [tuple [int,bytes]]]": 1,
            "dstructs.dumpdesc": 1,
            "list [bytes]": 2,
            "list [tuple [int,bytes]]": 2,
            "list [dumpblockinfo]": 2,
            "dumpinfo": 2,
            "deque [dumpblockinfo]": 2,
            "edgedb.blockingioconnection": 11,
            "type [namet]": 1,
            "tuple [s_obj,...]": 3,
            "tuple [so,...]": 2,
            "so.inheritingobjectbase": 2,
            "sd.objectcommandmeta": 1,
            "qlast": 10,
            "any": 25,
            "so.object": 12,
            "optional [so]": 9,
            "optional [derivableobjectbase]": 1,
            "sn.schemaname": 6,
            "sd.command": 9,
            "attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommand',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [inheritingobject]": 1,
            "iterable [str]": 3,
            "collection [str]": 1,
            "inheritingobject": 1,
            "tuple [sn,...]": 1,
            "optional [tuple [type,...]]": 1,
            "union [type,tuple [type,...]]": 1,
            "tuple [any,...]": 3,
            "irast.tuple": 1,
            "sd.commandcontext": 27,
            "so.refdict": 6,
            "so.inheritingobject": 5,
            "list [so]": 3,
            "tuple [s_schema,sd]": 1,
            "referencedinheritingobject": 1,
            "callable [...,none]": 1,
            "list [sn]": 1,
            "optional [qlast]": 3,
            "iterable [scalartype]": 1,
            "qlast.objectddl": 2,
            "attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [scalartype]": 2,
            "objectcontainer_t": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [objectcontainer_t,typing]": 1,
            "expressionshell": 1,
            "tuple [anytupleref,sn]": 1,
            "anytuple": 2,
            "mapping [optional [str],str]": 7,
            "qlast.objectref": 3,
            "optional [type [so]]": 3,
            "dict [str,so]": 1,
            "optional [createobjecttype]": 1,
            "s_objtypes.objecttype": 1,
            "list [qlast]": 4,
            "tuple [dict [str,irast],list [qlast]]": 1,
            "s_func.function": 1,
            "optional [mapping [str,any]]": 4,
            "sequence [s_types]": 2,
            "optional [s_func]": 5,
            "optional [s_name]": 2,
            "optional [iterable [s_types]]": 1,
            "pseudotype_t": 1,
            "tuple [s_schema,s_types]": 2,
            "tuple [s_schema,optional [s_types]]": 1,
            "tuple [tuple [so,...],tuple [tuple [list [so],union [str,so,tuple [str,so]]],...]]": 1,
            "referencedinheritingobjectt": 1,
            "referencing.referencedt": 1,
            "optional [mapping [int,int]]": 3,
            "set [uuid]": 1,
            "path": 5,
            "list [ast]": 1,
            "ast.classdef": 1,
            "union [ast,ast]": 1,
            "ast.asyncfunctiondef": 1,
            "typecoverage": 4,
            "tuple [str,str]": 3,
            "list [typedescnode]": 1,
            "s_abc.type": 1,
            "typedesc": 1,
            "pgast.dmlquery": 2,
            "base.sqlblock": 1,
            "list [tuple [str,str]]": 5,
            "dict [type [qlast],type [sd]]": 5,
            "qlast.ddloperation": 6,
            "list [scalartype]": 1,
            "union [qlast,qlast]": 1,
            "type [s_types]": 1,
            "optional [type [s_types]]": 1,
            "s_types.typet": 2,
            "optional [iterable [any]]": 2,
            "sequence [str]": 2,
            "migrations.createmigration": 1,
            "iterable [tuple [str,sequence [qlast]]]": 1,
            "migrations.migration": 1,
            "optional [qlast_]": 2,
            "optional [irast_]": 1,
            "binwrapper.binwrapper": 3,
            "tuple [bytes,iterator [bytes]]": 1,
            "iterable [bytes]": 1,
            "optional [abstractset [str]]": 1,
            "sd.alterobjectproperty": 2,
            "so.inheritingobjectt": 2,
            "list [pgast]": 3,
            "tuple [type [so],...]": 1,
            "qlast.insertquery": 1,
            "optional [tuple [irast,pgast]]": 3,
            "tuple [sd,sd]": 1,
            "irast.constraintref": 1,
            "versionstage": 1,
            "tuple [str,...]": 2,
            "version": 1,
            "optional [contextlevel]": 1,
            "attribute(\n    value=name(\n        value='compiler',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='compilercontextmanager',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [contextlevel]": 1,
            "pgast.baserelation": 1,
            "dict [irast,irast]": 3,
            "parameterkind": 1,
            "typemodifier": 1,
            "operatorkind": 1,
            "schemacardinality": 1,
            "volatility": 1,
            "linktargetdeleteaction": 1,
            "list [completionworkcallback]": 3,
            "contextlevel": 3,
            "optional [qltypes]": 4,
            "list [pointercardinalitycallback]": 1,
            "qlast.shapeop": 5,
            "dict [s_pointers,pendingcardinality]": 1,
            "dict [s_pointers,list [s_pointers]]": 1,
            "s_pointers.pointer": 6,
            "context.pointercardinalitycallback": 1,
            "irast.basepointerref": 2,
            "collection [irast]": 2,
            "context.completionworkcallback": 1,
            "dict [tuple [irast,irast],qltypes]": 1,
            "oplevel": 1,
            "mapping [str,str]": 1,
            "mapping": 1,
            "tuple [type,...]": 1,
            "dict [str,any]": 2,
            "optional [field [any]]": 1,
            "s_obj.inheritingobject": 1,
            "s_constr.constraint": 1,
            "list [_edgeql_rust]": 1,
            "union [str,list [token]]": 1,
            "dict [str,union [s_pointers,pointer]]": 1,
            "union [str,qlast]": 1,
            "annotationvalue": 2,
            "annotationsubject": 2,
            "sn.qualifiedname": 1,
            "qualifiedname": 1,
            "field [t]": 1,
            "mapping [str,config]": 1,
            "cluster": 1,
            "classvar [dict [any,dict [type,adapter]]]": 2,
            "classvar [bool]": 1,
            "optional [type]": 2,
            "optional [dict [str,any]]": 4,
            "dict [any,adapter]": 1,
            "dict [type,adapter]": 1,
            "adapter": 1,
            "dict [any,dict [type,adapter]]": 1,
            "qlast.createconcretepointer": 2,
            "union [so,so,pointers]": 2,
            "pointers.pointer": 1,
            "union [bool,base]": 1,
            "list [irast]": 1,
            "optional [s_objects]": 1,
            "pgast.selectstmt": 1,
            "mapping [str,pgast]": 1,
            "iterable [pgast]": 1,
            "tuple [pgast,list [str]]": 1,
            "optional [tuple [pgast,pgast]]": 1,
            "qltracer.typelike": 1,
            "worker": 1,
            "asyncio.streamreader": 1,
            "asyncio.process": 2,
            "state.databasesstate": 2,
            "pgcluster.backendruntimeparams": 1,
            "asyncpg.connection": 1,
            "pgcluster.basecluster": 4,
            "list [asyncio]": 1,
            "list [baseport]": 1,
            "dict [config,baseport]": 1,
            "type [http]": 1,
            "mapping [str,any]": 1,
            "settingsmap": 1,
            "types.type": 1,
            "optional [types]": 1,
            "optional [nodes]": 1,
            "optional [bool]": 1,
            "sequence [irast]": 1,
            "iterable [irast]": 1,
            "asyncpg_con.connection": 2,
            "optional [int]": 3,
            "click.context": 2,
            "optional [edgedb]": 1,
            "cli_utils.connectionargs": 4,
            "optional [pt_shortcuts]": 1,
            "edgedb.edgedbmessage": 1,
            "pt_shortcuts.promptsession": 2,
            "optional [mapping [str,str]]": 2,
            "tuple [any,optional [str]]": 1,
            "commandcallback": 1,
            "optional [dict [str,str]]": 1,
            "tuple [command,...]": 2,
            "sequence [command]": 1,
            "dict [str,list [command]]": 1,
            "list [tuple [str,str,str]]": 1,
            "tuple [command,abstractset [str],optional [str]]": 1,
            "querymode": 2,
            "optional [dict [uuid,str]]": 1,
            "optional [exception]": 1,
            "baseexception": 1,
            "sequence [table]": 1,
            "iterable [edgedb]": 2,
            "terminal.buffer": 19,
            "union [edgedb,edgedb,edgedb,edgedb]": 1,
            "union [int,float]": 1,
            "utils.bigint": 1,
            "decimal.decimal": 1,
            "datetime.datetime": 1,
            "datetime.date": 1,
            "datetime.time": 1,
            "datetime.timedelta": 1,
            "union [literal ['left'],literal ['center'],literal ['right']]": 1,
            "sequence [columnspec]": 2,
            "typing.textio": 1,
            "list [int]": 2,
            "list [list [str]]": 1,
            "dict [str,str]": 1,
            "tuple [list [str],optional [str]]": 1,
            "tuple [str,dict [str,str]]": 1,
            "edbargs.serverconfig": 1,
            "frozenset [irast]": 1,
            "click.param": 1,
            "pgast.tuplevar": 1,
            "irast.sliceindirection": 1,
            "qltypes.volatility": 2,
            "srvargs.serverconfig": 1,
            "optional [pathlib]": 3,
            "db": 1,
            "list [tuple [qlast,bool]]": 2,
            "set [ipath]": 1,
            "list [ipath]": 2,
            "data": 1,
            "list [data]": 4,
            "list [tuple [qlast,bool,bool]]": 3,
            "optional [dict [str,data]]": 1,
            "type [qlast]": 1,
            "tuple [type [remotecluster],backendinstanceparams]": 1,
            "type [s_obj]": 1,
            "optional [type [s_obj]]": 1,
            "dict [qlast,statementmetadata]": 1,
            "sequence [tuple [str,str]]": 1,
            "optional [sequence [union [str,pathlib]]]": 1,
            "list [any]": 1,
            "optional [immu [str,any]]": 1,
            "verutils.version": 1,
            "attribute(\n    value=name(\n        value='immu',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='map',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,any]": 1,
            "consulagent": 2,
            "dict [irast,qltypes]": 1,
            "bootstrapcontext": 1,
            "optional [sn]": 1,
            "dict [tuple [irast,irast],union [pgast,pgast]]": 1,
            "inf_ctx.infctx": 1,
            "inf_ctx.multiplicityinfo": 1,
            "irast.constexpr": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 1238,
        "typeChanged_dict_var": {
            "literalnode -> literal": 1,
            "gqlast.variabledefinition -> gql_ast.variabledefinition": 1,
            "object -> typing.any": 10,
            "typing.any -> any": 10,
            "set [t] -> abstractset [t]": 1,
            "compiler.counter -> compiler.simplecounter": 1,
            "viewrptr -> optional [viewrptr]": 1,
            "optional [list [config]] -> list [config]": 1,
            "expr.expression -> optional [expr]": 1,
            "list [callable] -> list [pointercardinalitycallback]": 1,
            "chainmap [str,s_types] -> chainmap [str,optional [s_types]]": 1,
            "dict [tuple [s_types,tuple [qlast,...]],s_types] -> dict [tuple [s_objtypes,tuple [qlast,...]],s_objtypes]": 1,
            "str -> optional [str]": 11,
            "irast.stmt -> optional [irast]": 3,
            "dict [irast,irast] -> chainmap [irast,irast]": 1,
            "list [callable] -> list [completionworkcallback]": 1,
            "s_types.type -> optional [s_types]": 2,
            "s_name.schemaname -> optional [s_name]": 1,
            "irast.set -> optional [irast]": 1,
            "union [s_types,s_pointers] -> s_obj.object": 1,
            "qlast.base -> qlast.expr": 2,
            "bool -> optional [bool]": 1,
            "dict [uuid,so] -> dict [str,str]": 1,
            "set [str] -> set [pathid]": 2,
            "union [str,int,bool] -> union [str,int,bool,none]": 1,
            "dict [irast,irast] -> dict [irast,tuple [irast,optional [frozenset [str]]]]": 1,
            "bool -> optional [s_types]": 1,
            "tuple [s_func] -> tuple [s_func,...]": 1,
            "list [schemafield] -> list [field]": 1,
            "dict [str,str] -> dict [optional [str],str]": 1,
            "dict [s_schema,tuple [s_referencing,qlast,list [inheritingobject]]] -> dict [sn,tuple [type [s_referencing],qlast,list [inheritingobject]]]": 1,
            "dict [tuple [str,sn],dict [str,any]] -> dict [tuple [str,str],dict [str,any]]": 1,
            "s_inh.inheritingobject -> s_obj.inheritingobject": 1,
            "type [parametrictype] -> type [parametriccontainer]": 1,
            "int -> bytes": 2,
            "list [union [str,tuple [str,int]]] -> list [tuple [str,int]]": 1,
            "dict [s_name,s_types] -> dict [str,s_types]": 1,
            "dict [sn,sn] -> dict [str,str]": 2,
            "dict [tuple [type [sd],sn],sd] -> dict [tuple [type [sd],str],sd]": 1,
            "tuple [type [sd],sn] -> tuple [type [sd],str]": 1,
            "set [tuple [str,sn]] -> set [tuple [str,str]]": 1,
            "dict [sn,tuple [type [s_referencing],qlast,list [so]]] -> dict [sn,tuple [type [s_referencing [s_referencing]],qlast,list [so]]]": 1,
            "optional [type [sd [sd]]] -> optional [type [sd [so]]]": 1,
            "union [list [str],set [str]] -> union [list [str]]": 1,
            "gql_ast.variabledefinition -> gql_ast.variabledefinitionnode": 1,
            "any -> dict [str,any]": 2,
            "classvar [type] -> classvar [type [t]]": 2,
            "classvar [type] -> classvar [type [v]]": 1,
            "s_types.type -> s_types.typeshell": 1,
            "qltypes.cardinality -> qltypes.schemacardinality": 1,
            "dict [irast,tuple [irast,optional [frozenset [str]]]] -> dict [irast,scopeinfo]": 1,
            "dict [str,s_types] -> dict [str,irast]": 1,
            "dict [str,int] -> dict [str,pgast]": 1,
            "dict [str,irast] -> list [irast]": 1,
            "optional [tuple [str,...]] -> optional [list [param]]": 2,
            "dict -> optional [frozenset [str]]": 2,
            "dict [union [s_types,s_pointers],list [s_pointers]] -> dict [union [s_types,s_pointers],list [tuple [s_pointers,qlast]]]": 1,
            "dict [s_pointers,tuple [qlast,contextlevel,irast,optional [irast]]] -> dict [s_pointers,computableinfo]": 1,
            "list [tuple [list [so],union [str,so,tuple [str,so]]]] -> list [tuple [list [so],union [str,tuple [str,so]]]]": 1,
            "dict [uuid,irast] -> dict [irtyputils,irast]": 1,
            "list [str] -> defaultdict [str,list [str]]": 1,
            "type [sd] -> type [sd [so]]": 1,
            "dict [tuple [s_objtypes,tuple [qlast,...]],s_objtypes] -> dict [tuple [s_objtypes,bool,bool,bool,tuple [qlast,...]],s_objtypes]": 1,
            "optional [union [pgast,novolatilitysentinel]] -> tuple [callable [...,pgast],...]": 1,
            "pgast.query -> pgast.baseexpr": 1,
            "mapping [str,str] -> mapping [str,config]": 1,
            "optional [union [type,uniontype,so]] -> optional [objectlike]": 1,
            "dict [str,s_types] -> dict [s_name,s_types]": 1,
            "chainmap [str,optional [s_types]] -> chainmap [s_name,optional [s_types]]": 1,
            "dict [s_types,tuple [str,parsing]] -> dict [s_types,tuple [s_name,parsing]]": 1,
            "dict [tuple [qlast,str],irast] -> dict [tuple [qlast,s_name],irast]": 1,
            "dict [str,qltracer] -> dict [s_name,qltracer]": 1,
            "dict [str,set [s_name]] -> dict [s_name,set [s_name]]": 2,
            "dict [str,set [str]] -> dict [s_name,set [s_name]]": 2,
            "dict [str,topological [str,qltracer,bool]] -> dict [s_name,topological [s_name,qltracer,bool]]": 1,
            "tuple [union [uuid,str,tuple [str,s_pointers,bool]],...] -> tuple [union [uuid,s_name,tuple [str,s_pointers,bool]],...]": 1,
            "optional [str] -> str": 2,
            "mapping [str,str] -> dict [int,str]": 1,
            "dict -> optional [dict [str,any]]": 1,
            "pgerrorcode -> optional [pgerrorcode]": 1,
            "errors.edgedberror -> optional [errors]": 1,
            "union [str,int,bool,none] -> union [str,int,bool,collection [union [str,int,bool,none]],none]": 1,
            "mapping [config,baseport] -> dict [config,baseport]": 1,
            "frozenset [s_types] -> frozenset [union [s_types,s_pointers]]": 1,
            "defaultdict [tuple [str,optional [irast]],list [tuple [str,union [pgast,pgast],irast]]] -> defaultdict [optional [irast],defaultdict [uuid,list [tuple [str,union [pgast,pgast],irast]]]]": 1,
            "defaultdict [tuple [str,optional [irast]],list [tuple [str,union [pgast,pgast]]]] -> defaultdict [optional [irast],defaultdict [str,list [tuple [str,union [pgast,pgast]]]]]": 1,
            "dict [irast,pgast] -> dict [union [irast,irast],pgast]": 1,
            "dict [s_pointers,computableinfo] -> dict [s_pointers,irast]": 1,
            "list [union [schemaclasstransformer,structtransformer]] -> list [basetransformer]": 1,
            "dict [s_name,qltracer] -> dict [s_name,optional [qltracer]]": 1,
            "tuple [str,str] -> optional [tuple [str,str]]": 1,
            "int -> optional [int]": 1,
            "tuple [callable [...,pgast],...] -> tuple [callable [...,optional [pgast]],...]": 1,
            "sequence [s_types] -> list [s_types]": 1,
            "dict [irast,qltypes] -> dict [irast,inferredvolatility]": 1,
            "chainmap [irast,pgast] -> chainmap [irast,optional [pgast]]": 1,
            "dict [str,liftedfunc] -> dict [tuple [str,str],liftedfunc]": 1,
            "qlast.path -> optional [qlast]": 1,
            "dict [str,list [data]] -> dict [str,result]": 1,
            "optional [pgerrorcode] -> optional [str]": 1,
            "chainmap [irast,irast] -> chainmap [irast,tuple [irast,irast]]": 1,
            "list [asyncio] -> mapping [str,asyncio]": 1,
            "dict [s_types,parsing] -> dict [s_types,optional [parsing]]": 1,
            "dict [s_types,tuple [s_name,parsing]] -> dict [s_types,tuple [s_name,optional [parsing]]]": 1,
            "optional [s_types] -> s_types.type": 1,
            "set [irast] -> optional [set [irast]]": 2,
            "dict [union [s_types,s_pointers],qlast] -> dict [union [s_types,s_pointers],tuple [qlast,sequence [irast]]]": 1,
            "chainmap [irast,tuple [irast,irast]] -> chainmap [irast,tuple [tuple [irast,irast],...]]": 1,
            "dict [s_pointers,tuple [optional [qltypes],bool,optional [parsing]]] -> dict [s_pointers,tuple [optional [qltypes],optional [bool],optional [parsing]]]": 1,
            "defaultdict [optional [irast],defaultdict [str,list [tuple [str,union [pgast,pgast],irast]]]] -> defaultdict [optional [irast],defaultdict [tuple [uuid,str],list [tuple [str,union [pgast,pgast],irast]]]]": 1,
            "dict [tuple [irast,irast],qltypes] -> dict [tuple [irast,irast],multiplicityinfo]": 1,
            "dict [tuple [irast,irast],qltypes] -> dict [tuple [irast,irast,frozenset [irast]],qltypes]": 1,
            "collection [irast] -> frozenset [irast]": 1,
            "union [irast,irast] -> evaluationresult": 1
        },
        "typeChanged_dict_arg": {
            "caos_ast.path -> irast.path": 1,
            "ql_ast.typenamenode -> ql_ast.typename": 1,
            "pgast.selectstmt -> pgast.rangevar": 1,
            "pgast.columnref -> pgast.rangesubselect": 1,
            "pgast.query -> pgast.columnref": 1,
            "context.compilercontext -> context.compilercontextlevel": 62,
            "pgast.query -> irast.stmt": 1,
            "context.compilercontext -> context.contextlevel": 1,
            "context.contextlevel -> context.compilercontext": 2,
            "s_obj.class -> s_obj.object": 4,
            "so.class -> so.object": 2,
            "s_links.linkmapping -> s_pointers.pointercardinality": 1,
            "int -> int64": 2,
            "qlast.typename -> qlast.typeexpr": 2,
            "'type' -> s_types.type": 4,
            "s_pointers.pointercardinality -> irast.cardinality": 1,
            "qlast.base -> qlast.introspect": 2,
            "qlast.binop -> qlast.set": 1,
            "config.port -> config.configtype": 1,
            "qlast.configop -> irast.set": 1,
            "datetime.timedelta -> edgedb.duration": 1,
            "s_obj.object -> s_types.type": 4,
            "qlast.operatorcommand -> qlast.castcommand": 1,
            "pgast.query -> pgast.selectstmt": 4,
            "qlast.createobject -> qlast.createproperty": 1,
            "qlast.createobject -> qlast.createfunction": 1,
            "object -> typing.any": 1,
            "typing.any -> any": 1,
            "list [str] -> optional [list [str]]": 1,
            "sd.command -> commandt": 1,
            "s_abc.schema -> optional [s_schema]": 1,
            "s_abc.schema -> s_schema.schema": 2,
            "optional [irast] -> irast.set": 1,
            "pgast.base -> pgast.baseexpr": 1,
            "s_schema.schema -> optional [s_schema]": 2,
            "dict [str,qlast] -> mapping [str,qlast]": 2,
            "dict [object,qlast] -> mapping [any,qlast]": 1,
            "optional [contextlevel] -> optional [contextlevel_t]": 1,
            "bool -> optional [contextlevel_t]": 1,
            "optional [sequence [s_obj]] -> tuple [s_obj,...]": 1,
            "optional [sequence [type [s_types]]] -> tuple [s_obj,...]": 1,
            "optional [dict] -> optional [dict [str,any]]": 2,
            "s_obj.object -> optional [s_der]": 1,
            "union [s_types,s_pointers] -> s_obj.object": 2,
            "qlast.base -> qlast.expr": 2,
            "optional [dict [str,str]] -> optional [mapping [optional [str],str]]": 1,
            "optional [dict [str,s_obj]] -> optional [mapping [union [str,qlast],union [s_obj,irast]]]": 1,
            "optional [str] -> optional [s_name]": 4,
            "str -> union [str,qlast]": 1,
            "union [qlast,s_obj] -> union [qlast,irast,s_obj]": 1,
            "dict [str,s_obj] -> mapping [union [str,qlast],union [s_obj,irast]]": 1,
            "callable -> context.pointercardinalitycallback": 1,
            "irast.base -> irast.set": 2,
            "callable -> context.completionworkcallback": 1,
            "s_types.type -> s_objtypes.objecttype": 4,
            "compilercontextlevel -> optional [compilercontextlevel]": 1,
            "pgast.baseexpr -> optional [pgast]": 2,
            "dict [uuid,so] -> dict [str,str]": 2,
            "str -> any": 1,
            "list [columnspec] -> sequence [columnspec]": 2,
            "qlast.schema -> qlast.setfield": 1,
            "sequence [tuple [str,qlast]] -> iterable [tuple [str,sequence [qlast]]]": 1,
            "abstractset [str] -> abstractset [anynamespace]": 4,
            "optional [str] -> optional [union [str,uuid]]": 1,
            "scopetreenode -> optional [scopetreenode]": 1,
            "set [str] -> abstractset [str]": 1,
            "irast.baseconstant -> irast.constexpr": 1,
            "optional [mapping [s_types,type]] -> optional [dict [s_types,type]]": 1,
            "irast.typeref -> optional [irast]": 1,
            "edgedb.duration -> datetime.timedelta": 1,
            "qlast.createview -> qlast.createalias": 1,
            "irast.basepointerref -> irast.pointerref": 2,
            "iterable [objecttype] -> iterable [s_types]": 1,
            "optional [dict [tuple [s_pointers,s_pointers],irast]] -> optional [dict [ptrrefcachekey,irast]]": 1,
            "float -> int": 1,
            "str -> utils.bigint": 1,
            "iterable [s_types] -> iterable [objecttype]": 1,
            "os.pathlike -> pathlib.path": 2,
            "str -> os": 1,
            "dstructs.dumpdatablock -> bytes": 1,
            "mapping -> mapping_t": 1,
            "dict [optional [str],str] -> mapping [optional [str],str]": 2,
            "union [str,qlast] -> union [str,sn]": 1,
            "tuple [s_obj,...] -> optional [type [s_obj]]": 1,
            "union [s_obj,s_obj,none] -> union [s_obj,s_obj]": 1,
            "qlast.createannotation -> qlast.ddloperation": 2,
            "qlast.createannotationvalue -> qlast.ddloperation": 2,
            "qlast.alterannotationvalue -> qlast.ddloperation": 2,
            "qlast.ddl -> qlast.ddlcommand": 4,
            "optional [mapping [tuple [str,str],uuid]] -> optional [mapping [tuple [str,optional [str]],uuid]]": 2,
            "dict [s_schema,tuple [s_referencing,qlast,list [inheritingobject]]] -> dict [sn,tuple [type [s_referencing],qlast,list [inheritingobject]]]": 1,
            "qlast.base -> qlast.objectddl": 2,
            "qlast.objectddl_t -> qlast.ddloperation": 4,
            "sd.objectcommand -> sd.command": 2,
            "commandt -> sd.deltaroot": 1,
            "dict [tuple [str,sn],dict [str,any]] -> dict [tuple [str,str],dict [str,any]]": 1,
            "irast.rawstringconstant -> irast.stringconstant": 1,
            "str -> sn.schemaname": 1,
            "dict [str,iterable [str]] -> tuple [str,...]": 1,
            "optional [s_der] -> optional [s_obj]": 1,
            "so.inheritingobjectbase -> so.inheritingobject": 7,
            "list [inheritingobject] -> list [so]": 2,
            "list [s_inheriting] -> list [so]": 1,
            "so.inheritingobjectbaset -> so.inheritingobjectt": 3,
            "int -> bytes": 6,
            "irast.tupleindirection -> irast.base": 2,
            "parsing.parsercontext -> optional [parsing]": 2,
            "irast.tupleindirection -> irast.tuple": 1,
            "sequence [s_func] -> union [sequence [s_func],s_func]": 1,
            "optional [mapping [union [str,qlast],union [irast,s_obj]]] -> optional [mapping [irast,irast]]": 1,
            "optional [qlast] -> optional [irast]": 2,
            "optional [mapping [union [str,qlast],s_obj]] -> optional [mapping [irast,irast]]": 1,
            "optional [mapping [union [str,qlast],union [s_obj,irast]]] -> optional [mapping [irast,irast]]": 1,
            "mapping [union [str,qlast],union [s_obj,irast]] -> mapping [irast,irast]": 1,
            "optional [mapping [union [str,qlast_],so]] -> optional [mapping [irast_,irast_]]": 1,
            "optional [qlast_] -> optional [irast_]": 1,
            "dict [sn,sn] -> dict [str,str]": 2,
            "so.object -> so.qualifiedobject": 1,
            "sn.schemaname -> str": 1,
            "so.object -> referencedobject": 2,
            "optional [mapping [irast,irast]] -> optional [mapping [str,any]]": 3,
            "optional [irast] -> optional [str]": 2,
            "union [str,qlast] -> str": 1,
            "mapping [irast,irast] -> mapping [str,any]": 1,
            "mapping [any,qlast] -> mapping [str,qlast]": 1,
            "optional [mapping [irast_,irast_]] -> optional [mapping [str,any]]": 1,
            "optional [irast_] -> optional [str]": 1,
            "dict [sn,tuple [type [s_referencing],qlast,list [so]]] -> dict [sn,tuple [type [s_referencing [s_referencing]],qlast,list [so]]]": 1,
            "optional [type [sd [sd]]] -> optional [type [sd [so]]]": 1,
            "qlast.castcommand -> qlast.namedddl": 1,
            "qlast.operatorcommand -> qlast.namedddl": 1,
            "so.inheritingobject -> so.inheritingobjectt": 2,
            "list [so] -> iterable [so]": 1,
            "list [so] -> iterable [scalartype]": 1,
            "s_types.type -> scalartype": 1,
            "optional [so] -> optional [type [so]]": 3,
            "optional [type [s_types]] -> type [s_types]": 1,
            "so.object -> so.inheritingobject": 1,
            "list [str] -> iterable [str]": 1,
            "qlast.typename -> union [qlast,qlast]": 1,
            "any -> so.comparisoncontext": 1,
            "optional [so] -> so.comparisoncontext": 2,
            "qlast.typename -> qlast.objectref": 1,
            "union [qlast,qlast] -> qlast.typename": 1,
            "optional [type [so]] -> optional [type [s_types]]": 1,
            "type [s_types] -> optional [type [s_types]]": 1,
            "so.objectref -> union [so,so]": 1,
            "s_types.type -> s_types.typeshell": 3,
            "qltypes.cardinality -> qltypes.schemacardinality": 1,
            "s_func.parameterlikelist -> s_func.funcparameterlist": 1,
            "str -> union [str,list [token]]": 1,
            "optional [ql_compiler_ctx] -> optional [qlcompiler_ctx]": 1,
            "s_objtypes.objecttype -> s_types.type": 1,
            "qlast.createconcretelink -> qlast.createconcretepointer": 1,
            "str -> optional [str]": 3,
            "scalartype -> s_types.type": 1,
            "qltypes.schemacardinality -> qltypes.cardinality": 1,
            "optional [mapping [str,any]] -> optional [dict [str,any]]": 1,
            "iterable [s_types] -> iterable [so]": 1,
            "iterable [source] -> list [source]": 1,
            "dict [str,irast] -> list [irast]": 1,
            "bytes -> int": 1,
            "base.plblock -> base.sqlblock": 1,
            "dbops.plblock -> dbops.sqlblock": 1,
            "optional [iterable [str]] -> iterable [str]": 1,
            "tuple [s_pointers,s_pointers] -> irtyputils.ptrrefcachekey": 1,
            "optional [dict [uuid,irast]] -> optional [dict [typerefcachekey,irast]]": 2,
            "bool -> union [bool,base]": 4,
            "optional [str] -> union [none,str,base]": 1,
            "tuple -> dict": 1,
            "qlast.ddloperation -> qlast.namedddl": 1,
            "irast.set -> irast.emptyset": 1,
            "irast.constantset -> irast.emptyset": 1,
            "callable [...,so] -> callable [...,t]": 1,
            "irast.groupstmt -> irast.insertstmt": 1,
            "dict [str,so] -> dict [str,optional [so]]": 2,
            "schemaname -> str": 1,
            "optional [tuple [irast,pgast]] -> optional [pgast]": 2,
            "qlast.base -> optional [qlast]": 2,
            "iterable [qlast] -> optional [iterable [qlast]]": 1,
            "s_pointers.pointerlike -> s_pointers.pointer": 1,
            "mapping -> mapping [str,settingvalue]": 1,
            "irast.scopetreenode -> optional [irast]": 2,
            "bool -> optional [bool]": 1,
            "verutils.version -> optional [verutils]": 2,
            "union [so,so] -> union [so,so,pointers]": 2,
            "sn.name -> sn.qualifiedname": 1,
            "union [schemaname,str] -> union [qualifiedname,str]": 7,
            "schemaname -> qualifiedname": 2,
            "qlast.objectref -> qlast.baseobjectref": 1,
            "qlast.createobject -> qlast.ddloperation": 1,
            "qlast.basesmixin -> qlast.ddloperation": 1,
            "optional [so] -> optional [sourcelike]": 1,
            "optional [s_types] -> optional [typelike]": 1,
            "dict [str,optional [so]] -> dict [str,objectlike]": 2,
            "dict [str,sn] -> mapping [str,sn]": 2,
            "str -> s_name.name": 7,
            "union [str,sn] -> sn.name": 1,
            "union [str,qlast] -> qlast.baseobjectref": 1,
            "optional [str] -> optional [sn]": 3,
            "dict [str,qltracer] -> dict [s_name,qltracer]": 1,
            "dict [str,set [s_name]] -> dict [s_name,set [s_name]]": 3,
            "dict [str,set [str]] -> dict [s_name,set [s_name]]": 2,
            "str -> s_name.qualname": 1,
            "mapping [str,abstractset [s_name]] -> mapping [s_name,abstractset [s_name]]": 1,
            "optional [abstractset [str]] -> optional [abstractset [s_name]]": 1,
            "optional [union [str,uuid]] -> optional [union [s_name,uuid]]": 1,
            "sn.qualifiedname -> sn.qualname": 1,
            "str -> sn.name": 4,
            "optional [iterable [str]] -> optional [iterable [sn]]": 18,
            "optional [mapping [tuple [str,optional [str]],uuid]] -> optional [mapping [tuple [sn,optional [str]],uuid]]": 2,
            "union [qualifiedname,str] -> str": 6,
            "optional [str] -> str": 1,
            "str -> name": 1,
            "qualifiedname -> qualname": 1,
            "union [qualifiedname,str] -> name": 1,
            "union [sn,str] -> str": 1,
            "str -> union [str,sn]": 1,
            "optional [type [s_types]] -> optional [type [so]]": 1,
            "optional [str] -> sn.name": 2,
            "int -> union [int,slice]": 1,
            "union [sequence [s_func],s_func] -> s_func.parameterlikelist": 1,
            "dict [str,any] -> optional [mapping [str,any]]": 1,
            "tuple [str,str] -> sequence [tuple [str,str]]": 1,
            "mapping_t -> settingsmap": 2,
            "mapping [str,settingvalue] -> settingsmap": 1,
            "str -> object": 1,
            "config.configtype -> any": 1,
            "frozenset [str] -> abstractset [str]": 1,
            "tuple [str,optional [str],tuple [str,optional [union [tuple [type,...],type]],tuple [uuid,...],tuple [tuple [str,any],...]]] -> tuple [str,tuple [str,optional [union [tuple [type,...],type]],tuple [uuid,...],tuple [tuple [str,any],...]]]": 2,
            "qlast -> union": 3,
            "union [qlast,qlast] -> qlast.typeop": 1,
            "mapping [optional [str],str] -> optional [mapping [optional [str],str]]": 1,
            "irast.stmt -> irast.base": 1,
            "str -> sn.unqualname": 3,
            "irast.base -> irast.mutatingstmt": 1,
            "irast.mutatingstmt -> irast.insertstmt": 1,
            "qlast.ddloperation -> qlast.createobject": 1,
            "irast.configinsert -> irast.insertstmt": 1,
            "optional [s_schema] -> optional [bytes]": 8,
            "optional [state] -> optional [bytes]": 4,
            "s_schema.schema -> s_schema.schema_t": 1,
            "optional [sequence [str]] -> optional [sequence [union [str,pathlib]]]": 1,
            "so.object -> annotation": 1,
            "dict [s_name,qltracer] -> dict [s_name,optional [qltracer]]": 1,
            "irast.pointerref -> irast.basepointerref": 1,
            "list [irast] -> list [tuple [irast,qlast]]": 2,
            "os.pathlike -> str": 2,
            "pgcluster.remotecluster -> pgcluster.basecluster": 1,
            "dict [str,any] -> edbargs.serverconfig": 2,
            "optional [startupscript] -> optional [srvargs]": 1,
            "irast.mutatingstmt -> irast.updatestmt": 2,
            "irast.functioncall -> irast.call": 1,
            "irast.sliceindirection -> irast.configset": 1,
            "irast.configinsert -> irast.configcommand": 1,
            "iterable [qltypes] -> iterable [inferredvolatility]": 1,
            "irast.insertstmt -> irast.mutatingstmt": 3,
            "irast.updatestmt -> irast.sliceindirection": 1,
            "abstractset [anynamespace] -> abstractset [namespace]": 7,
            "optional [iterable [so]] -> optional [iterable [so [so]]]": 1,
            "optional [tempfile] -> pathlib.path": 1,
            "qlast.statement -> qlast.expr": 1,
            "prepcontext -> evalcontext": 1,
            "qlast.tuple -> qlast.set": 1,
            "qlast.typecast -> qlast.namedtuple": 1,
            "qlast.functioncall -> qlast.unaryop": 2,
            "data -> list [data]": 1,
            "qlast.stringconstant -> qlast.indirection": 1,
            "qlast.path -> optional [qlast]": 5,
            "qlast.returningmixin -> optional [qlast]": 1,
            "iterable [optional [qlast]] -> iterable [tuple [optional [qlast],optional [qlast]]]": 3,
            "qlast.forquery -> qlast.shape": 1,
            "list [data] -> result": 22,
            "callable [...,union [data,list [data]]] -> callable [...,data]": 1,
            "list [ipath] -> list [tuple [ipath,optional [int]]]": 4,
            "qlast.selectquery -> qlast.statement": 1,
            "pctx.parsercontext -> optional [pctx]": 2,
            "list [qlast] -> optional [sequence [qlast]]": 1,
            "qlast_.base -> qlast_.expr": 1,
            "list [tuple [irast,qlast]] -> sequence [tuple [irast,qlast]]": 2,
            "optional [iterable [qlast]] -> optional [sequence [qlast]]": 1,
            "list [optional [bool]] -> any": 1,
            "pathlib.path -> optional [pathlib]": 1,
            "type [s_obj] -> type [qltracer]": 1,
            "irast.operatorcall -> irast.call": 1,
            "irast.expr -> irast.base": 1,
            "none -> irast.statement": 1
        },
        "typeChanged_dict_ret": {
            "'metamagic.caos.builtins.bytes' -> 'std.bytes'": 1,
            "'metamagic.caos.builtins.int' -> 'std.int'": 1,
            "'metamagic.caos.builtins.float' -> 'std.float'": 2,
            "'metamagic.caos.builtins.decimal' -> 'std.decimal'": 1,
            "'metamagic.caos.builtins.str' -> 'std.str'": 1,
            "'std.bytes' -> 'std::bytes'": 1,
            "'std.int' -> 'std::int'": 1,
            "'std.float' -> 'std::float'": 2,
            "'std.decimal' -> 'std::decimal'": 1,
            "'std.str' -> 'std::str'": 1,
            "'std::float' -> 'std::int'": 1,
            "'std::bytes' -> stdbytes": 1,
            "'std::int' -> stdint": 2,
            "'std::float' -> stdfloat": 1,
            "'std::decimal' -> stddecimal": 2,
            "'std::float' -> s_int.stdfloat": 2,
            "'std::sequence' -> stdsequence": 1,
            "'std::str' -> stdstr": 1,
            "pgast.query -> pgast.base": 3,
            "str -> pgast.base": 1,
            "pgast.base -> str": 1,
            "none -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='frozenset',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast] -> none": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,astutils] -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,pgast]": 1,
            "str -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,optionalrel]": 1,
            "none -> irast.cardinality": 1,
            "none -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast]": 1,
            "s_obj.class -> s_obj.object": 1,
            "so.class -> so.object": 1,
            "stdint -> stdint64": 2,
            "stdfloat -> s_numeric.stdfloat64": 1,
            "stddecimal -> stdnumeric": 2,
            "s_int.stdfloat -> stdfloat64": 2,
            "stdnumeric -> stddecimal": 2,
            "pgast.commontableexpr -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pgast,typing [str]]": 1,
            "pgast.base -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "irast.typeref -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast,irast]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [type] -> bool": 2,
            "'type' -> bool": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast,irast] -> qlast.typename": 1,
            "s_types.type -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_schema,s_types]": 1,
            "bool -> os.pathlike": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_types] -> bool": 1,
            "pool -> manager": 1,
            "irast.base -> irast.set": 3,
            "bool -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str]": 1,
            "irast.set -> attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [qlast]": 1,
            "os.pathlike -> str": 1,
            "pgast.base -> pgast.query": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,s_types] -> none": 1,
            "str -> pg_cluster.cluster": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='union',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast,irast] -> irast.typeref": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast] -> s_types.type": 1,
            "irast.typeref -> s_types.type": 1,
            "pgast.base -> pgast.baseexpr": 2,
            "pgast.query -> pgast.baseexpr": 3,
            "irast.base -> union [irast,irast]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_types] -> list [s_types]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str] -> optional [str]": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [irast] -> optional [irast]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [s_types] -> optional [s_types]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='mapping',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [typing [str],str] -> mapping [optional [str],str]": 1,
            "typecoverage -> none": 2,
            "str -> list [str]": 2,
            "type -> any": 1,
            "object -> object_t": 1,
            "sd.command -> commandt": 1,
            "s_abc.object -> so.object": 1,
            "optional [pgast] -> pgast.baseexpr": 1,
            "sequence [pgast] -> list [pgast]": 1,
            "none -> tuple [int,int]": 1,
            "mapping [str,parameter] -> str": 1,
            "str -> bool": 7,
            "counter [call] -> str": 1,
            "object -> irast.statement": 1,
            "object -> any": 6,
            "bool -> qltypes.cardinality": 1,
            "callable [...,contextmanager] -> callable [...,contextmanager [context]]": 1,
            "s_types.type -> s_objtypes.objecttype": 2,
            "parameter -> parameterlike": 1,
            "funcparameterlist -> parameterlikelist": 1,
            "str -> cprofile.profile": 1,
            "none -> str": 2,
            "os.pathlike -> pathlib.path": 3,
            "bool -> dict [str,any]": 1,
            "tuple [list [str],int] -> str": 1,
            "pathid -> str": 1,
            "str -> pathid": 1,
            "pathid -> irast.typeref": 1,
            "scopetreenode -> str": 1,
            "iterator [tuple [scopetreenode,frozenset [str]]] -> iterator [tuple [scopetreenode,frozenset [pathid]]]": 1,
            "iterator [scopetreenode] -> iterator [scopetreenodewithpathid]": 1,
            "iterator [tuple [scopetreenode,frozenset [str]]] -> iterator [tuple [scopetreenode,abstractset [pathid]]]": 1,
            "iterator [scopetreenode] -> set [pathid]": 1,
            "tuple [optional [scopetreenode],frozenset [str]] -> tuple [optional [scopetreenode],abstractset [str]]": 1,
            "irast.baseconstant -> irast.constexpr": 4,
            "tuple -> tuple [any,...]": 1,
            "str -> any": 2,
            "bool -> any": 1,
            "irast.baseconstant -> any": 1,
            "s_types.type -> so.object": 1,
            "tuple [dict [str,irast],list [qlast]] -> irast.statement": 1,
            "qltypes.cardinality -> bool": 1,
            "optional [irast] -> tuple [irast,list [irast]]": 1,
            "iterator [scopetreenode] -> fenceinfo": 1,
            "iterator [tuple [scopetreenode,abstractset [pathid]]] -> iterator [tuple [scopetreenode,abstractset [pathid],fenceinfo]]": 1,
            "optional [scopetreenode] -> tuple [optional [scopetreenode],optional [fenceinfo]]": 1,
            "bool -> optional [scopetreenode]": 1,
            "tuple [optional [scopetreenode],abstractset [str]] -> tuple [optional [scopetreenode],abstractset [pathid],optional [fenceinfo]]": 1,
            "compilerdatabasestate -> s_schema.schema": 1,
            "list [dumpblockdescriptor] -> s_schema.schema": 1,
            "s_pointers.pointerlike -> s_pointers.pointer": 1,
            "tuple [s_schema,s_types,bool] -> tuple [s_schema,s_types]": 1,
            "tuple [frozenset [s_types],bool] -> tuple [frozenset [so],bool]": 1,
            "counter [call] -> none": 1,
            "optional [str] -> optional [mapping [str,str]]": 1,
            "bool -> qlast.typename": 1,
            "qlast.typename -> qlast.typeexpr": 3,
            "so.objectref -> so.object": 1,
            "str -> optional [so]": 1,
            "bytes -> none": 1,
            "dumpinfo -> tuple [bytes,iterator [bytes]]": 1,
            "iterable [tuple [bytes,bytes]] -> iterable [bytes]": 1,
            "iterable [tuple [bytes,bytes]] -> none": 1,
            "bool -> qlast_.base": 1,
            "namet -> unqualifiedname": 1,
            "optional [str] -> s_schema.schema": 1,
            "mapping -> mapping_t": 1,
            "none -> list [str]": 1,
            "cluster -> bool": 2,
            "none -> list [irast]": 1,
            "optional [scopetreenode] -> optional [scopetreenodewithpathid]": 1,
            "none -> list [scopetreenode]": 1,
            "tuple [so,...] -> tuple [type [so],...]": 1,
            "tuple [s_schema,so] -> s_schema.schema": 1,
            "schemafield -> field": 2,
            "list [schemafield] -> list [field]": 1,
            "bool -> none": 5,
            "t -> none": 1,
            "dict [str,optional [str]] -> dict [str,any]": 1,
            "dict [s_schema,tuple [s_referencing,qlast,list [inheritingobject]]] -> dict [sn,tuple [type [s_referencing],qlast,list [inheritingobject]]]": 1,
            "dict [str,type [sd]] -> dict [str,type [sd [so]]]": 1,
            "tuple [s_schema,s_referencing] -> tuple [s_schema,alterinheritingobject]": 1,
            "any -> sd.command": 1,
            "any -> alterinheritingobject": 1,
            "sd.objectcommand -> attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommand',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [inheritingobject]": 1,
            "commandt -> sd.deltaroot": 1,
            "bool -> optional [collections]": 1,
            "pgast.relrangevar -> pgast.pathrangevar": 1,
            "pgast.baseexpr -> pgast.pathrangevar": 1,
            "type [sd] -> type [sd [sd]]": 1,
            "optional [sd] -> optional [sd [sd]]": 1,
            "tuple [str] -> tuple [str,...]": 1,
            "list [s_inheriting] -> list [so]": 1,
            "none -> tuple [any,...]": 1,
            "parametrictype -> parametriccontainer": 1,
            "so.objectlist -> attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [so]": 3,
            "tuple [tuple [union [str,tuple [str,int]],...],connectionparameters] -> tuple [tuple [tuple [str,int],...],connectionparameters]": 1,
            "alterinheritingobject -> sd.command": 1,
            "bool -> str": 5,
            "int -> bool": 1,
            "dict [sn,tuple [type [s_referencing],qlast,list [so]]] -> dict [sn,tuple [type [s_referencing [s_referencing]],qlast,list [so]]]": 1,
            "type [sd [sd]] -> type [sd [so]]": 1,
            "optional [sd [sd]] -> optional [sd [so]]": 1,
            "alterreferencedinheritingobject -> s_schema.schema": 1,
            "list [parameterdesc] -> tuple [s_schema,list [parameterdesc]]": 1,
            "tuple [s_schema,alterinheritingobject] -> tuple [s_schema,alterinheritingobject [so]]": 1,
            "attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [so] -> attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [role]": 1,
            "attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [so] -> attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [scalartype]": 1,
            "optional [collections] -> s_types.typet": 1,
            "s_types.type -> scalartype": 1,
            "optional [s_types] -> optional [scalartype]": 1,
            "objecttype -> tuple [s_schema,objecttype,bool]": 2,
            "optional [collections] -> optional [iterable [any]]": 1,
            "s_schema.schema -> anytuple": 1,
            "so.object -> s_types.typeshell": 1,
            "so.object -> qlast.objectref": 1,
            "tuple [expression,expression] -> expressionshell": 1,
            "so.objectref -> tuple [s_types,optional [pointer]]": 1,
            "s_types.type -> tuple [s_schema,s_types]": 4,
            "s_pointers.pointerlike -> tuple [s_schema,s_pointers]": 1,
            "ft.typemodifier -> s_types.typeshell": 1,
            "optional [s_types] -> tuple [s_schema,optional [s_types]]": 2,
            "tuple [s_types,optional [pointer]] -> tuple [s_schema,s_types,optional [pointer]]": 1,
            "scalartype -> tuple [s_schema,scalartype]": 1,
            "optional [scalartype] -> tuple [s_schema,optional [scalartype]]": 1,
            "bool -> tuple [optional [qltypes],optional [qltypes]]": 1,
            "irast.command -> callable [...,any]": 1,
            "pseudotype_t -> pseudotype": 1,
            "str -> pseudotypeshell": 1,
            "so.objectlist -> str": 1,
            "so.objectlist -> attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pseudotype]": 1,
            "bool -> attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [pseudotype]": 1,
            "tuple [s_schema,s_types] -> tuple [s_schema,pseudotype]": 1,
            "any -> bool": 3,
            "s_types.type -> tuple [s_schema,optional [pseudotype]]": 1,
            "any -> tuple [s_schema,s_types]": 1,
            "bool -> optional [s_types]": 1,
            "bool -> pseudotype": 1,
            "optional [s_types] -> sd.command": 1,
            "tuple [s_schema,scalartype] -> tuple [s_schema,s_types]": 1,
            "sd.command -> inheriting.basedelta_t": 1,
            "tuple [s_schema,optional [s_types]] -> tuple [s_schema,optional [objecttype]]": 1,
            "tuple [s_schema,referencing] -> tuple [s_schema,property]": 1,
            "optional [pointers] -> optional [s_pointers]": 1,
            "tuple [str,dict [str,int]] -> tuple [str,dict [str,pgast]]": 1,
            "list [tuple [irast,s_pointers]] -> list [tuple [irast,s_pointers,qlast]]": 1,
            "bytes -> int": 1,
            "tuple [s_schema,str,set [uuid]] -> tuple [s_schema,str]": 1,
            "s_schema.schema -> tuple [s_schema,dbops]": 1,
            "tuple [pgast,pgast,pgast,optional [pgast]] -> dmlparts": 1,
            "type [sd] -> sn.name": 1,
            "attribute(\n    value=name(\n        value='so',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectlist',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [role] -> list [so]": 1,
            "so.object -> optional [iterable [any]]": 1,
            "optional [irast_] -> qlast_.base": 1,
            "str -> qlast_.base": 1,
            "qlast.objectref -> qlast.typeexpr": 1,
            "sd.command -> attribute(\n    value=name(\n        value='sd',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='objectcommand',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [referencedt]": 1,
            "migrations.createmigration -> s_schema.schema": 1,
            "str -> tuple [qlast,...]": 1,
            "qlast_.base -> optional [irast_]": 1,
            "qlast_.base -> str": 1,
            "sd.command -> createmigration": 1,
            "s_schema.schema -> createmigration": 1,
            "optional [so] -> optional [t]": 1,
            "optional [so] -> str": 1,
            "irast.set -> bool": 1,
            "noreturn -> irast.set": 1,
            "bool -> irast.onconflictclause": 1,
            "version -> verutils.version": 1,
            "schemaname -> str": 1,
            "list [str] -> schemaname": 1,
            "none -> attribute(\n    value=name(\n        value='compiler',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='compilercontextmanager',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [contextlevel]": 1,
            "pgast.outputvar -> optional [pgast]": 1,
            "irast.basepointerref -> irast.pointerref": 1,
            "t -> str": 1,
            "bool -> optional [s_expr]": 1,
            "dict [so,str] -> dict [so,list [str]]": 1,
            "operation -> mapping_t": 1,
            "none -> optional [field [any]]": 1,
            "tuple [any,...] -> bool": 1,
            "list [tuple [irast,s_pointers,qlast]] -> bool": 1,
            "sn.name -> sn.qualifiedname": 9,
            "s_name.name -> s_name.qualifiedname": 3,
            "tuple [union [schemaname,str],optional [str],str] -> tuple [union [qualifiedname,str],optional [str],str]": 1,
            "schemaname -> qualifiedname": 1,
            "none -> v": 1,
            "none -> objectindex [union [s_pointers,pointer]]": 1,
            "optional [s_types] -> optional [typelike]": 1,
            "optional [so] -> optional [sourcelike]": 1,
            "optional [so] -> optional [objectlike]": 8,
            "optional [union [type,uniontype,so]] -> optional [objectlike]": 1,
            "so.object -> objectlike": 1,
            "union [type,uniontype,so] -> typelike": 1,
            "sn.qualifiedname -> sn.qualname": 7,
            "s_name.qualifiedname -> s_name.qualname": 3,
            "tuple [str,str] -> tuple [str,s_name]": 1,
            "s_schema.schema -> optional [str]": 1,
            "s_schema.schema -> sn.qualname": 1,
            "tuple [str,str] -> bool": 1,
            "unqualifiedname -> bool": 1,
            "tuple [union [qualifiedname,str],optional [str],str] -> bool": 1,
            "str -> name": 2,
            "qualifiedname -> list [str]": 1,
            "list [str] -> str": 1,
            "so.objectshell -> qlast.objectref": 1,
            "qlast.objectref -> optional [iterable [any]]": 1,
            "dict [str,any] -> bytes": 2,
            "setrvars -> tuple [str,...]": 1,
            "edgedb.blockingioconnection -> none": 1,
            "mapping_t -> settingsmap": 2,
            "mapping -> settingsmap": 1,
            "mapping [str,settingvalue] -> settingsmap": 1,
            "pathlib.path -> iterator [pathlib]": 1,
            "str -> tuple [int,int]": 1,
            "sd.command -> sequence [sd]": 1,
            "optional [str] -> backendruntimeparams": 1,
            "optional [str] -> cluster": 1,
            "edbcompiler.backendinstanceparams -> any": 1,
            "bool -> qlast.selectquery": 1,
            "none -> optional [str]": 1,
            "tuple [type [adapter],optional [frozenset [tuple [str,any]]]] -> type": 1,
            "tuple [str,optional [str],tuple [str,optional [union [tuple [type,...],type]],tuple [uuid,...],tuple [tuple [str,any],...]]] -> tuple [str,tuple [str,optional [union [tuple [type,...],type]],tuple [uuid,...],tuple [tuple [str,any],...]]]": 1,
            "tuple [bool,schemacardinality] -> bool": 1,
            "tuple [s_schema,optional [s_types]] -> bool": 1,
            "tuple [qlast,...] -> dict [qlast,sd]": 1,
            "tuple [str,...] -> tuple [tuple [str,sd],...]": 1,
            "iterator [v] -> tuple [v,...]": 1,
            "dict [str,list [str]] -> dict [s_name,list [str]]": 1,
            "bool -> s_objtypes.objecttype": 1,
            "s_name.qualname -> s_name.name": 1,
            "bool -> unqualname": 1,
            "str -> unqualname": 2,
            "s_pointers.pointer -> optional [s_pointers]": 1,
            "none -> optional [pgast]": 2,
            "pgast.commontableexpr -> optional [pgast]": 1,
            "none -> tuple [pgast,list [str]]": 1,
            "bool -> list [qlast]": 1,
            "none -> list [dbops]": 1,
            "s_schema.schema -> s_schema.schema_t": 1,
            "mapping [str,settingvalue] -> str": 1,
            "nodes.jsondict -> nodes.argument": 1,
            "bool -> optional [nodes]": 2,
            "types.type -> list [field]": 1,
            "list [field] -> optional [field]": 1,
            "field -> none": 1,
            "str -> list [field]": 1,
            "s_schema.schema -> tuple [s_schema,dict [sn,type [sd [so]]]]": 1,
            "irast.constantset -> irast.constexpr": 1,
            "optional [irast] -> optional [list [irast]]": 1,
            "optional [list [irast]] -> optional [irast]": 1,
            "s_schema.schema -> none": 1,
            "none -> uuid.uuid": 2,
            "none -> asyncpg_con.connection": 1,
            "tuple [list [str],list [str]] -> none": 1,
            "pgast.baseexpr -> optional [pgast]": 2,
            "tuple [tuple [str,sd],...] -> tuple [tuple [str,qlast,sd],...]": 1,
            "qltypes.volatility -> tuple [qltypes,qltypes]": 1,
            "qltypes.volatility -> inferredvolatility": 24,
            "iterator [pathid] -> str": 1,
            "list [so] -> list [so [role]]": 1,
            "list [qlast] -> none": 1,
            "none -> list [data]": 2,
            "data -> bool": 2,
            "list [tuple [qlast,bool]] -> list [tuple [qlast,bool,bool]]": 1,
            "list [data] -> tuple [list [ipath],list [ipath],dict [ipath,bool]]": 1,
            "list [data] -> list [row]": 1,
            "list [data] -> tuple [list [ipath],list [row]]": 1,
            "db -> none": 1,
            "data -> db": 1,
            "none -> data": 1,
            "list [data] -> liftedfunc": 1,
            "qlast.statement -> qlast.expr": 1,
            "qlast.path -> optional [qlast]": 1,
            "none -> iterator [none]": 1,
            "list [data] -> int": 1,
            "list [data] -> result": 45,
            "list [tuple [qlast,bool,bool]] -> list [tuple [qlast,optional [int],bool]]": 1,
            "tuple [list [ipath],list [ipath],dict [ipath,bool]] -> tuple [list [tuple [ipath,optional [int]]],list [tuple [ipath,optional [int]]],dict [ipath,bool]]": 1,
            "none -> any": 1,
            "result -> evalcontext": 1,
            "qlast.base -> qlast.expr": 2,
            "qlast_.base -> qlast_.expr": 2,
            "union [irast,irast] -> irast.set": 1,
            "tuple [union [irast,irast],context] -> tuple [irast,context]": 1,
            "list [irast] -> optional [list [irast]]": 1,
            "optional [str] -> str": 1,
            "bool -> set [irast]": 3,
            "none -> optional [tuple [str,int]]": 1,
            "bool -> optional [tuple [str,int]]": 1,
            "bool -> asyncpg.serverversion": 1,
            "tuple [optional [type [qltracer]],optional [type [s_obj]]] -> optional [type [qltracer]]": 1,
            "s_obj.object_t -> s_obj.subclassableobject": 1,
            "list [str] -> int": 1,
            "tuple [tuple [tuple [str,int],...],connectionparameters] -> ssl_module.tlsversion": 1,
            "infctx -> bool": 1,
            "bool -> typeguard [pgast]": 1,
            "irast.constexpr -> evaluationresult": 5,
            "tuple [stdlibbits,edbcompiler] -> tuple [stdlibbits,config,edbcompiler]": 1,
            "edgedb.asyncioconnection -> edgedb.blockingioconnection": 1,
            "tuple [pathlib,optional [pathlib]] -> none": 1,
            "mapping [str,any] -> tuple [str,...]": 1,
            "asyncpg_con.connection -> optional [str]": 1,
            "bool -> clustermode": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 5852,
        "functionReturnsType_added": 3032,
        "variableType_added": 1296,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 2064,
        "functionReturnsType_removed": 856,
        "variableType_removed": 311,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 547,
        "functionReturnsType_changed": 534,
        "variableType_changed": 157,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            0.06720430107526883,
            0.5042016806722689,
            0.30700258272014036,
            0.02696386841632213,
            0.030376670716889428,
            0.032829940906106365,
            0.9345794392523363,
            2.7906976744186047,
            0.021925016443762334,
            0.021925016443762334,
            15.789473684210526,
            3.3333333333333335,
            0.04440497335701599,
            10.416666666666668,
            99.40119760479041,
            94.44444444444444,
            13.513513513513514,
            40.0,
            0.490414623272403,
            0.009710623422023694,
            0.11235955056179776,
            0.11235955056179776,
            6.504065040650407,
            40.0,
            14.285714285714285,
            1.662049861495845,
            0.847457627118644,
            4.615384615384616,
            2.3255813953488373,
            1.8018018018018018,
            5.670103092783505,
            0.1183431952662722,
            1.9607843137254901,
            5.263157894736842,
            0.7692307692307693,
            1.8072289156626504,
            0.17953321364452424,
            0.8968609865470852,
            0.5509641873278237,
            2.160559203558568,
            0.23715415019762848,
            0.13544018058690743,
            1.0638297872340425,
            0.625,
            2.5,
            1.25,
            1.0752688172043012,
            0.5154639175257731,
            100.0,
            1.1389521640091116,
            3.68763557483731,
            7.217694994179278,
            12.5,
            2.1052631578947367,
            0.8946322067594433,
            0.9478672985781991,
            0.16189962223421478,
            0.4032258064516129,
            1.0351966873706004,
            0.13531799729364005,
            0.5649717514124294,
            0.5235602094240838,
            0.4273504273504274,
            4.197530864197531,
            1.6129032258064515,
            3.7037037037037033,
            3.225806451612903,
            1.8867924528301887,
            0.33670033670033667,
            0.05667327854916407,
            0.2743484224965706,
            2.295918367346939,
            0.8490566037735849,
            0.38818201423334053,
            0.027272727272727275,
            0.4140786749482402,
            0.11049723756906078,
            0.03797228023542813,
            0.055586436909394105,
            0.23219814241486067,
            0.5820721769499418,
            0.046468401486988845,
            0.045351473922902494,
            0.04621072088724584,
            0.13714285714285715,
            0.20833333333333334,
            0.20876826722338201,
            0.13003901170351106,
            0.03354579000335458,
            1.5384615384615385,
            1.238390092879257,
            0.6416131989000917,
            0.625,
            5.0,
            10.526315789473683,
            3.1746031746031744,
            0.3730576036189525,
            0.3730521244877877,
            0.8849557522123894,
            2.5974025974025974,
            1.0135135135135136,
            1.2903225806451613,
            0.6060606060606061,
            1.4388489208633095,
            2.2222222222222223,
            0.41841004184100417,
            0.6779661016949152,
            0.23952095808383234,
            5.263157894736842,
            5.201992252351965,
            0.3731343283582089,
            1.0752688172043012,
            0.7037747920665387,
            0.27472527472527475,
            5.128205128205128,
            5.405405405405405,
            1.36327185244587,
            0.7352941176470588,
            1.680672268907563,
            1.1299435028248588,
            2.898550724637681,
            3.32541567695962,
            1.5384615384615385,
            1.7094017094017095,
            0.14084507042253522,
            1.0526315789473684,
            2.3323615160349855,
            1.2241054613935969,
            0.7575757575757576,
            3.7037037037037033,
            0.047036688617121354,
            1.393188854489164,
            0.14084507042253522,
            0.43668122270742354,
            0.5454545454545455,
            0.09910802775024777,
            0.9259259259259258,
            11.11111111111111,
            1.639344262295082,
            1.0101010101010102,
            0.3134796238244514,
            0.1949317738791423,
            4.49438202247191,
            0.2302820955670697,
            0.03502626970227671,
            0.07993605115907274,
            5.555555555555555,
            0.5780346820809248,
            0.20366598778004072,
            0.1773049645390071,
            0.5454545454545455,
            2.229157378510923,
            0.49566294919454773,
            0.028269883151149644,
            0.13812154696132595,
            0.09319664492078285,
            0.3021148036253776,
            0.6693440428380187,
            0.08936550491510277,
            0.24170511975390024,
            0.8281573498964804,
            0.2061855670103093,
            0.22371364653243847,
            0.16538037486218302,
            1.0075566750629723,
            0.13293452974410103,
            0.04690431519699812,
            0.16583747927031509,
            1.3409961685823755,
            0.628930817610063,
            1.8518518518518516,
            0.5263157894736842,
            0.05273566249176005,
            0.05273566249176005,
            0.5151575193184069,
            0.5151575193184069,
            0.9342156481121059,
            0.9342156481121059,
            0.27318850006504486,
            0.27318850006504486,
            0.7114433859881828,
            0.7114433859881828,
            0.3585943103036099,
            0.35850860420650094,
            0.5291005291005291,
            0.4329004329004329,
            0.3472222222222222,
            0.3464203233256351,
            8.333333333333332,
            1.023890784982935,
            1.4598540145985401,
            0.5,
            0.78125,
            4.761904761904762,
            0.018422991893883568,
            1.968503937007874,
            0.4444444444444444,
            0.9523809523809524,
            14.285714285714285,
            20.454545454545457,
            0.21231422505307856,
            0.11507479861910241,
            2.898550724637681,
            0.9900990099009901,
            1.1299435028248588,
            5.263157894736842,
            1.8115942028985508,
            3.8834951456310676,
            0.8818342151675485,
            0.9302325581395349,
            0.08116883116883117,
            0.09225092250922509,
            1.1363636363636365,
            3.015075376884422,
            0.035323207347227124,
            0.4975124378109453,
            3.508771929824561,
            3.4482758620689653,
            0.76103500761035,
            2.147239263803681,
            2.5906735751295336,
            0.9803921568627451,
            0.09895111814763506,
            0.11168192986374804,
            0.3125,
            0.7361963190184049,
            0.3125,
            0.17482517482517482,
            1.3550135501355014,
            1.1904761904761905,
            3.2520325203252036,
            7.6923076923076925,
            3.7735849056603774,
            1.8518518518518516,
            1.7391304347826086,
            0.8547008547008548,
            1.2875536480686696,
            0.22002200220022,
            1.06951871657754,
            0.1358695652173913,
            0.425531914893617,
            0.5181347150259068,
            0.13568521031207598,
            1.1477761836441895,
            10.0,
            6.666666666666667,
            0.24509803921568626,
            1.4598540145985401,
            3.827751196172249,
            0.5376344086021506,
            12.5,
            1.0,
            0.19685039370078738,
            0.3451251078515962,
            0.35056967572305,
            5.294117647058823,
            0.46728971962616817,
            0.6311992786293958,
            0.30303030303030304,
            0.11371389583807141,
            0.02377555872563005,
            1.282051282051282,
            0.01684636118598383,
            0.40595399188092013,
            0.45454545454545453,
            1.0126582278481013,
            0.9950248756218906,
            0.4149377593360996,
            0.186219739292365,
            0.31645569620253167,
            2.0618556701030926,
            1.3793103448275863,
            0.3968253968253968,
            0.4885993485342019,
            0.18083182640144665,
            0.04972650422675286,
            8.333333333333332,
            8.333333333333332,
            4.0,
            21.132075471698116,
            29.72972972972973,
            0.6622516556291391,
            6.493506493506493,
            1.2672811059907834,
            1.1597938144329898,
            7.142857142857142,
            3.571428571428571,
            0.7407407407407408,
            7.8125,
            4.137931034482759,
            2.631578947368421,
            0.6094464195022855,
            10.0,
            9.090909090909092,
            1.293103448275862,
            0.27932960893854747,
            4.10958904109589,
            5.88235294117647,
            17.24137931034483,
            3.225806451612903,
            3.7037037037037033,
            6.769230769230769,
            1.9607843137254901,
            0.08857395925597875,
            2.7777777777777777,
            1.25,
            3.4013605442176873,
            8.0,
            5.714285714285714,
            0.9308510638297872,
            30.06872852233677,
            1.1363636363636365,
            100.0,
            1.1976047904191618,
            0.6042296072507553,
            6.896551724137931,
            3.571428571428571,
            8.411214953271028,
            1.9230769230769231,
            15.789473684210526,
            1.0526315789473684,
            3.0303030303030303,
            31.428571428571427,
            3.7735849056603774,
            4.545454545454546,
            1.0638297872340425,
            6.0606060606060606,
            2.7586206896551726,
            1.2269938650306749,
            2.380952380952381,
            0.546448087431694,
            1.992966002344666,
            7.8125,
            5.555555555555555,
            1.4925373134328357,
            1.6528925619834711,
            2.7439024390243905,
            0.7246376811594203,
            12.5,
            1.6574585635359116,
            49.411764705882355,
            41.714285714285715,
            1.9920318725099602,
            12.408759124087592,
            11.39240506329114,
            0.398406374501992,
            16.173120728929387,
            0.5747126436781609,
            0.2695417789757413,
            11.428571428571429,
            7.6923076923076925,
            5.263157894736842,
            3.9603960396039604,
            2.7777777777777777,
            5.0,
            27.170035671819264,
            3.783231083844581,
            2.0257826887661143,
            5.745062836624776,
            14.285714285714285,
            6.951871657754011,
            3.8461538461538463,
            3.225806451612903,
            6.896551724137931,
            2.3255813953488373,
            8.0,
            0.8771929824561403,
            9.30232558139535,
            2.857142857142857,
            2.5,
            9.53125,
            4.857621440536013,
            0.21265284423179162,
            3.389830508474576,
            1.6129032258064515,
            6.25,
            1.6722408026755853,
            12.631578947368421,
            3.75,
            6.993006993006993,
            9.907120743034056,
            0.7502679528403001,
            0.4830917874396135,
            0.8130081300813009,
            0.3236245954692557,
            0.11614401858304298,
            0.09528346831824679,
            13.157894736842104,
            9.859154929577464,
            5.405405405405405,
            10.256410256410255,
            13.636363636363635,
            7.894736842105263,
            8.653846153846153,
            3.3333333333333335,
            5.555555555555555,
            1.4925373134328357,
            2.272727272727273,
            8.823529411764707,
            13.422818791946309,
            2.619047619047619,
            2.666666666666667,
            9.523809523809524,
            37.5,
            1.4814814814814816,
            10.9375,
            0.2127659574468085,
            0.3597122302158274,
            0.38910505836575876,
            7.142857142857142,
            2.7027027027027026,
            3.571428571428571,
            1.0416666666666665,
            1.7857142857142856,
            16.049382716049383,
            5.555555555555555,
            4.081632653061225,
            4.545454545454546,
            3.6016949152542375,
            4.320987654320987,
            0.3144654088050315,
            4.137931034482759,
            0.5076142131979695,
            2.572347266881029,
            7.5,
            1.680672268907563,
            2.512562814070352,
            0.14018691588785046,
            0.14091122592766556,
            0.023419203747072598,
            1.5151515151515151,
            7.253886010362693,
            4.781491002570694,
            0.30959752321981426,
            0.0881057268722467,
            0.5736137667304015,
            6.075334143377885,
            0.6993006993006993,
            0.3593890386343217,
            2.941176470588235,
            1.694915254237288,
            3.9473684210526314,
            4.455445544554455,
            2.3622047244094486,
            0.30303030303030304,
            4.958677685950414,
            0.5649717514124294,
            0.18726591760299627,
            3.1914893617021276,
            12.5,
            3.1620553359683794,
            0.5681818181818182,
            12.903225806451612,
            14.285714285714285,
            1.0256410256410255,
            0.7575757575757576,
            26.400000000000002,
            7.4074074074074066,
            0.4032258064516129,
            4.761904761904762,
            23.333333333333332,
            3.125,
            0.47732696897374705,
            4.0,
            2.0,
            3.1982942430703627,
            20.0,
            1.6597510373443984,
            1.6666666666666667,
            0.2074688796680498,
            38.372093023255815,
            1.9920318725099602,
            10.309278350515463,
            0.4149377593360996,
            6.077348066298343,
            12.121212121212121,
            2.4774774774774775,
            6.607929515418502,
            0.5537098560354374,
            6.944444444444445,
            44.96124031007752,
            2.0408163265306123,
            1.1111111111111112,
            46.31578947368421,
            0.8771929824561403,
            14.285714285714285,
            16.666666666666664,
            13.580246913580247,
            36.53846153846153,
            25.423728813559322,
            1.3513513513513513,
            4.464285714285714,
            8.37696335078534,
            0.43859649122807015,
            6.666666666666667,
            3.7037037037037033,
            1.9801980198019802,
            42.96028880866426,
            0.3003003003003003,
            4.0650406504065035,
            1.530612244897959,
            1.36986301369863,
            2.631578947368421,
            6.25,
            5.0,
            5.617977528089887,
            2.4390243902439024,
            0.6116207951070336,
            3.7735849056603774,
            0.19607843137254902,
            1.3157894736842104,
            1.7857142857142856,
            16.347731000546748,
            0.1358695652173913,
            1.4219830899308223,
            3.1390134529147984,
            1.5957446808510638,
            0.16666666666666669,
            3.041825095057034,
            0.6756756756756757,
            2.8846153846153846,
            1.8518518518518516,
            2.857142857142857,
            0.6309148264984227,
            51.953125,
            0.6134969325153374,
            0.20242914979757085,
            1.2658227848101267,
            0.8264462809917356,
            2.272727272727273,
            13.157894736842104,
            1.556420233463035,
            12.573099415204677,
            2.6016260162601625,
            4.761904761904762,
            6.666666666666667,
            1.4814814814814816,
            5.376344086021505,
            0.29239766081871343,
            2.3923444976076556,
            7.865168539325842,
            2.631578947368421,
            5.263157894736842,
            7.2727272727272725,
            0.2631578947368421,
            22.22222222222222,
            35.65217391304348,
            2.0689655172413794,
            3.9711191335740073,
            1.5706806282722512,
            2.7027027027027026,
            11.69811320754717,
            3.9215686274509802,
            1.9933554817275747,
            2.60989010989011,
            27.981651376146786,
            1.1235955056179776,
            6.042884990253411,
            5.323193916349809,
            0.38419319429198684,
            21.951219512195124,
            1.9230769230769231,
            0.7407407407407408,
            0.6818181818181818,
            2.4691358024691357,
            5.970149253731343,
            0.7712082262210797,
            42.22222222222222,
            1.1560693641618496,
            8.571428571428571,
            3.8461538461538463,
            2.0408163265306123,
            0.78125,
            5.3125,
            3.5143769968051117,
            0.546875,
            10.714285714285714,
            3.376205787781351,
            0.45941807044410415,
            3.508771929824561,
            0.9375,
            2.083333333333333,
            1.3192612137203166,
            1.556420233463035,
            0.9708737864077669,
            0.8034279592929834,
            5.499541704857928,
            0.29069767441860467,
            7.6923076923076925,
            7.5,
            3.3707865168539324,
            0.5847953216374269,
            5.633802816901409,
            4.0,
            0.6349206349206349,
            6.9306930693069315,
            10.714285714285714,
            0.7692307692307693,
            6.683804627249357,
            15.633423180592992,
            0.26246719160104987,
            0.9523809523809524,
            0.8620689655172413,
            0.6912442396313364,
            1.8518518518518516,
            6.161137440758294,
            3.2193158953722336,
            16.06425702811245,
            4.838709677419355,
            3.2467532467532463,
            0.9523809523809524,
            0.38461538461538464,
            1.5873015873015872,
            5.88235294117647,
            4.37956204379562,
            12.5,
            1.2195121951219512,
            3.225806451612903,
            3.932584269662921,
            10.416666666666668,
            0.36363636363636365,
            1.9736842105263157,
            0.4464285714285714,
            3.3557046979865772,
            21.678321678321677,
            1.0471204188481675,
            38.80597014925373,
            5.0,
            1.1363636363636365,
            0.7692307692307693,
            14.285714285714285,
            2.272727272727273,
            1.098901098901099,
            12.068965517241379,
            0.19011406844106463,
            1.1406844106463878,
            3.225806451612903,
            1.6574585635359116,
            5.555555555555555,
            0.20429009193054137,
            2.976190476190476,
            0.7481296758104738,
            5.88235294117647,
            6.25,
            2.8846153846153846,
            6.0606060606060606,
            4.615384615384616,
            0.7834757834757835,
            0.09551098376313276,
            1.1907983761840324,
            0.3590664272890485,
            0.09398496240601503,
            0.07338551859099804,
            2.666666666666667,
            18.627450980392158,
            6.696428571428571,
            1.639344262295082,
            8.47457627118644,
            0.9259259259259258,
            2.5510204081632653,
            0.2380952380952381,
            1.5625,
            7.4074074074074066,
            0.35842293906810035,
            2.6143790849673203,
            2.3387668320340187,
            1.870748299319728,
            0.19290123456790123,
            1.0135135135135136,
            1.2875536480686696,
            5.019815059445178,
            8.78243512974052,
            0.31695721077654515,
            3.8461538461538463,
            4.733727810650888,
            11.11111111111111,
            0.48543689320388345,
            4.10958904109589,
            2.73972602739726,
            0.4092769440654843,
            1.1019283746556474,
            1.4925373134328357,
            0.47904191616766467,
            0.07727975270479134,
            0.9362200117027502,
            1.436130007558579,
            0.19749835418038184,
            1.3605442176870748,
            1.3071895424836601,
            6.338028169014084,
            5.172413793103448,
            2.2900763358778624,
            6.0606060606060606,
            1.1049723756906076,
            6.666666666666667,
            6.666666666666667,
            1.7241379310344827,
            5.520169851380043,
            5.434782608695652,
            3.669724770642202,
            3.278688524590164,
            2.1739130434782608,
            0.6493506493506493,
            7.453416149068323,
            0.9433962264150944,
            2.013422818791946,
            3.0864197530864197,
            0.2898550724637681,
            1.384083044982699,
            0.34602076124567477,
            0.45454545454545453,
            0.37453183520599254,
            7.124239791485665,
            0.13605442176870747,
            3.286384976525822,
            5.714285714285714,
            1.36986301369863,
            2.0491803278688523,
            0.21551724137931033,
            0.8426966292134831,
            1.2987012987012987,
            15.384615384615385,
            10.909090909090908,
            7.526881720430108,
            6.25,
            2.3545706371191137,
            2.2332506203473943,
            3.6585365853658534,
            0.205761316872428,
            5.128205128205128,
            8.536585365853659,
            0.5,
            6.153846153846154,
            2.197802197802198,
            0.5420054200542005,
            3.0303030303030303,
            1.3574660633484164,
            10.256410256410255,
            0.6389776357827476,
            3.6259541984732824,
            4.046242774566474,
            0.28612303290414876,
            6.25,
            0.4444444444444444,
            4.761904761904762,
            11.76470588235294,
            2.564102564102564,
            6.0109289617486334,
            0.9900990099009901,
            0.3508771929824561,
            1.8181818181818181,
            0.9933774834437087,
            8.064516129032258,
            1.2658227848101267,
            9.30232558139535,
            18.421052631578945,
            2.5,
            6.451612903225806,
            4.838709677419355,
            5.191873589164786,
            5.64516129032258,
            0.35149384885764495,
            0.3558718861209964,
            2.083333333333333,
            1.0309278350515463,
            5.263157894736842,
            7.6923076923076925,
            5.263157894736842,
            4.601226993865031,
            0.18083182640144665,
            2.5404157043879905,
            0.2,
            1.146788990825688,
            12.03125,
            1.1560693641618496,
            2.272727272727273,
            3.3057851239669422,
            0.7751937984496124,
            0.2688172043010753,
            0.45045045045045046,
            1.03359173126615,
            1.8181818181818181,
            0.12484394506866417,
            1.377726750861079,
            1.2232415902140672,
            0.2497918401332223,
            1.3333333333333335,
            5.88235294117647,
            6.277056277056277,
            1.1787819253438114,
            0.20891364902506965,
            19.047619047619047,
            12.5,
            0.13568521031207598,
            1.1235955056179776,
            1.680672268907563,
            9.090909090909092,
            1.5985790408525755,
            0.1221001221001221,
            1.1627906976744187,
            3.0927835051546393,
            2.4390243902439024,
            11.610486891385769,
            0.9523809523809524,
            4.25531914893617,
            0.18248175182481752,
            9.580838323353294,
            0.3436426116838488,
            0.3558718861209964,
            3.865546218487395,
            14.761904761904763,
            20.299145299145298,
            2.112676056338028,
            3.937007874015748,
            0.1736111111111111,
            3.1081081081081083,
            2.0542317173377156,
            2.985611510791367,
            6.25,
            12.0,
            9.67741935483871,
            3.0303030303030303,
            2.5210084033613445,
            1.36986301369863,
            4.086538461538462,
            7.317073170731707,
            0.2004008016032064,
            18.930041152263374,
            0.2145922746781116,
            3.9295392953929538,
            3.896103896103896,
            0.34602076124567477,
            2.857142857142857,
            0.3076923076923077,
            1.6260162601626018,
            4.597701149425287,
            2.9605263157894735,
            3.007518796992481,
            0.4032258064516129,
            5.555555555555555,
            0.28735632183908044,
            0.9803921568627451,
            12.0,
            20.0,
            0.6928406466512702,
            0.2008032128514056,
            1.9607843137254901,
            0.7936507936507936,
            3.9603960396039604,
            2.564102564102564,
            1.0676156583629894,
            5.755395683453238,
            2.564102564102564,
            0.33783783783783783,
            1.7027863777089782,
            0.2014098690835851,
            1.1235955056179776,
            6.312292358803987,
            0.17574692442882248,
            0.966183574879227,
            0.32679738562091504,
            0.17446932247746438,
            2.955665024630542,
            3.870967741935484,
            1.2345679012345678,
            1.0638297872340425,
            7.142857142857142,
            0.49504950495049505,
            0.6772009029345373,
            6.666666666666667,
            1.583710407239819,
            5.614035087719298,
            0.5471956224350205,
            4.587155963302752,
            5.865921787709497,
            0.7539410555174777,
            0.4514672686230248,
            11.11111111111111,
            7.6923076923076925,
            4.166666666666666,
            6.8181818181818175,
            7.777777777777778,
            14.285714285714285,
            0.7092198581560284,
            0.05414185165132648,
            6.896551724137931,
            0.4784688995215311,
            2.1686746987951806,
            0.2976190476190476,
            0.43859649122807015,
            0.17391304347826086,
            1.9191919191919191,
            0.6960556844547563,
            0.36496350364963503,
            0.7692307692307693,
            0.6756756756756757,
            0.7142857142857143,
            0.13123359580052493,
            0.07262164124909223,
            0.906344410876133,
            5.084745762711865,
            0.5102040816326531,
            1.1235955056179776,
            5.172413793103448,
            39.37007874015748,
            1.0638297872340425,
            4.084321475625823,
            1.2121212121212122,
            1.647058823529412,
            5.714285714285714,
            9.090909090909092,
            1.0954616588419406,
            0.4830917874396135,
            0.8620689655172413,
            1.7977528089887642,
            0.9803921568627451,
            0.5454545454545455,
            0.7246376811594203,
            8.522727272727272,
            0.6329113924050633,
            1.9672131147540985,
            0.7633587786259541,
            1.048951048951049,
            1.8867924528301887,
            2.6058631921824107,
            0.28328611898017,
            6.829268292682928,
            6.25,
            0.45045045045045046,
            2.030456852791878,
            0.3861003861003861,
            0.1984126984126984,
            3.194444444444444,
            0.7486631016042781,
            4.25531914893617,
            20.0,
            1.2987012987012987,
            7.339449541284404,
            3.9301310043668125,
            2.7777777777777777,
            5.88235294117647,
            14.285714285714285,
            2.2988505747126435,
            2.533532041728763,
            1.1111111111111112,
            0.351288056206089,
            4.25531914893617,
            0.31545741324921134,
            1.1235955056179776,
            13.333333333333334,
            0.09777560498655585,
            0.4076378459558035,
            1.9607843137254901,
            1.1160714285714286,
            3.4615384615384617,
            6.25,
            0.3076923076923077,
            7.317073170731707,
            3.8415366146458583,
            2.7989821882951653,
            0.5434782608695652,
            0.8620689655172413,
            6.493506493506493,
            2.127659574468085,
            11.11111111111111,
            0.906344410876133,
            0.09765625,
            3.125,
            0.7575757575757576,
            4.477611940298507,
            2.1505376344086025,
            12.359550561797752,
            4.477611940298507,
            1.8867924528301887,
            9.803921568627452,
            2.0161290322580645,
            1.2345679012345678,
            8.333333333333332,
            1.3157894736842104,
            0.8620689655172413,
            11.538461538461538,
            2.1739130434782608,
            1.9607843137254901,
            0.37735849056603776,
            0.7017543859649122,
            7.142857142857142,
            7.55813953488372,
            0.851063829787234,
            0.15698587127158556,
            2.0408163265306123,
            0.9174311926605505,
            1.7241379310344827,
            0.7393715341959335,
            1.2779552715654952,
            4.017857142857143,
            0.8771929824561403,
            3.6585365853658534,
            0.9433962264150944,
            1.8604651162790697,
            0.39370078740157477,
            10.666666666666668,
            0.8695652173913043,
            0.40816326530612246,
            2.666666666666667,
            1.4084507042253522,
            0.6802721088435374,
            1.8181818181818181,
            0.33670033670033667,
            2.962085308056872,
            0.11695906432748539,
            15.625,
            0.5747126436781609,
            8.142201834862385,
            1.6172506738544474,
            0.4803843074459567,
            6.989515726410385,
            0.48543689320388345,
            0.4484304932735426,
            0.6928406466512702,
            0.3264417845484222,
            6.25,
            16.666666666666664,
            8.695652173913043,
            0.4032258064516129,
            3.278688524590164,
            3.571428571428571,
            1.5463917525773196,
            4.0,
            5.420054200542006,
            4.761904761904762,
            0.5102040816326531,
            1.9607843137254901,
            0.8333333333333334,
            2.1739130434782608,
            3.125,
            1.2987012987012987,
            2.898550724637681,
            0.014596409283316304,
            0.2028397565922921,
            2.5,
            2.564102564102564,
            9.090909090909092,
            0.12285012285012285,
            10.0,
            8.695652173913043,
            3.4482758620689653,
            15.0,
            2.857142857142857,
            0.6125574272588056,
            0.13531799729364005,
            0.49019607843137253,
            6.58682634730539,
            0.8771929824561403,
            3.3333333333333335,
            1.1235955056179776,
            2.3255813953488373,
            1.1160714285714286,
            0.9900990099009901,
            4.371584699453552,
            1.0380622837370241,
            1.7391304347826086,
            2.127659574468085,
            0.6134969325153374,
            0.5733005733005733,
            0.5932203389830508,
            0.32102728731942215,
            1.3157894736842104,
            0.5555555555555556,
            2.608695652173913,
            0.33783783783783783,
            11.439114391143912,
            11.965811965811966,
            4.545454545454546,
            0.38910505836575876,
            13.88888888888889,
            5.128205128205128,
            2.5974025974025974,
            6.25,
            11.458333333333332,
            0.8,
            15.384615384615385,
            50.0,
            6.25,
            10.526315789473683,
            9.090909090909092,
            12.5,
            2.857142857142857,
            5.0,
            3.8461538461538463,
            20.0,
            10.0,
            13.846153846153847,
            2.0689655172413794,
            14.285714285714285,
            19.35483870967742,
            16.666666666666664,
            10.416666666666668,
            3.3333333333333335,
            33.33333333333333,
            25.0,
            12.222222222222221,
            16.0,
            2.5423728813559325,
            7.017543859649122,
            1.4492753623188406,
            7.6923076923076925,
            2.0408163265306123,
            0.42016806722689076,
            9.333333333333334,
            9.090909090909092,
            8.928571428571429,
            3.4482758620689653,
            10.526315789473683,
            3.9215686274509802,
            0.9216589861751152,
            6.0606060606060606,
            8.695652173913043,
            5.88235294117647,
            5.555555555555555,
            17.24137931034483,
            97.91666666666666,
            1.6666666666666667,
            4.761904761904762,
            4.705882352941177,
            15.0,
            33.33333333333333,
            3.7037037037037033,
            5.88235294117647,
            6.666666666666667,
            6.25,
            5.555555555555555,
            0.2898550724637681,
            0.2044989775051125,
            1.5151515151515151,
            0.7194244604316548,
            4.3478260869565215,
            2.941176470588235,
            0.43478260869565216,
            1.342281879194631,
            1.550387596899225,
            4.137931034482759,
            2.1505376344086025,
            1.65016501650165,
            1.3513513513513513,
            0.6369426751592357,
            0.7853403141361256,
            1.9417475728155338,
            3.8461538461538463,
            1.8181818181818181,
            0.7575757575757576,
            1.694915254237288,
            3.225806451612903,
            1.5873015873015872,
            2.631578947368421,
            0.8130081300813009,
            5.0,
            12.068965517241379,
            16.225165562913908,
            1.876675603217158,
            0.9127789046653144,
            1.4492753623188406,
            2.0618556701030926,
            3.205128205128205,
            1.8018018018018018,
            50.0,
            0.823045267489712,
            11.76470588235294,
            2.380952380952381,
            1.9230769230769231,
            1.36986301369863,
            12.676056338028168,
            1.0084033613445378,
            1.0849909584086799,
            1.6129032258064515,
            0.3241491085899514,
            0.6765899864682002,
            4.201680672268908,
            0.5405405405405406,
            11.11111111111111,
            9.67741935483871,
            5.0,
            6.896551724137931,
            6.435643564356436,
            0.6085192697768762,
            0.8547008547008548,
            0.04784688995215311,
            3.225806451612903,
            2.7027027027027026,
            2.2900763358778624,
            0.7407407407407408,
            2.631578947368421,
            0.4402054292002935,
            0.6276150627615062,
            0.16129032258064516,
            1.3333333333333335,
            3.019538188277087,
            0.628930817610063,
            0.22650056625141565,
            1.1764705882352942,
            9.090909090909092,
            0.22172949002217296,
            2.4242424242424243,
            3.9215686274509802,
            10.526315789473683,
            3.1578947368421053,
            3.125,
            6.0606060606060606,
            4.059539918809202,
            3.0303030303030303,
            0.6535947712418301,
            3.7037037037037033,
            2.127659574468085,
            2.7624309392265194,
            0.9803921568627451,
            2.0,
            1.1811023622047243,
            0.7801418439716312,
            0.6872852233676976,
            0.3501750875437719,
            2.2900763358778624,
            1.8404907975460123,
            1.694915254237288,
            0.7246376811594203,
            1.7467248908296942,
            4.3478260869565215,
            7.142857142857142,
            20.0,
            1.0752688172043012,
            10.526315789473683,
            3.125,
            1.4084507042253522,
            3.642384105960265,
            1.2987012987012987,
            0.2631578947368421,
            14.285714285714285,
            1.5267175572519083,
            0.3215434083601286,
            9.375,
            2.2304832713754648,
            0.9708737864077669,
            0.2680965147453083,
            1.4492753623188406,
            0.5102040816326531,
            16.666666666666664,
            4.324324324324325,
            0.4629629629629629,
            2.3529411764705883,
            8.333333333333332,
            0.684931506849315,
            1.1627906976744187,
            0.9569377990430622,
            8.16326530612245,
            1.1782032400589102,
            1.098901098901099,
            5.88235294117647,
            2.70042194092827,
            0.3731343283582089,
            0.13745704467353953,
            6.666666666666667,
            9.433962264150944,
            2.3529411764705883,
            1.5037593984962405,
            0.6172839506172839
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2017",
                "4176",
                "4436",
                "14649",
                "114",
                "180",
                "5270",
                "17926",
                "53",
                "0",
                "0",
                "21407"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/edgedb/edgedb": 14649
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 6681,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            65.63
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/edgedb/edgedb": 6681
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2016": 303,
            "2017": 344,
            "2018": 1022,
            "2019": 3687,
            "2020": 3138,
            "2021": 1686
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2016": 18,
            "2017": 22,
            "2018": 50,
            "2019": 169,
            "2020": 205,
            "2021": 204
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2016": 432,
            "2017": 288,
            "2018": 425,
            "2019": 785,
            "2020": 566,
            "2021": 770
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                99,
                8090,
                1,
                3591,
                0,
                7772
            ],
            "2016": [
                6,
                9185,
                0,
                4086,
                0,
                7545
            ],
            "2017": [
                807,
                9518,
                256,
                4749,
                536,
                7515
            ],
            "2018": [
                1107,
                10364,
                404,
                5288,
                587,
                8214
            ],
            "2019": [
                1947,
                11966,
                759,
                6284,
                895,
                11012
            ],
            "2020": [
                5031,
                9896,
                2391,
                5595,
                1426,
                12419
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "edgedb-edgedb": 0,
                "elprans@sprymix.com": 1,
                "elvis@magic.io": 74,
                "yury@magic.io": 71,
                "victor@magic.io": 11,
                "elvis@edgedb.com": 228,
                "lukasz@langa.pl": 13,
                "victor@edgedb.com": 42,
                "yury@edgedb.com": 52,
                "lukasz@edgedb.com": 16,
                "paul@edgedb.com": 11,
                "roberto.prevato@gmail.com": 10,
                "roberto@edgedb.com": 4,
                "paul@colomiets.name": 6,
                "sully@msully.net": 109,
                "fantix.king@gmail.com": 14,
                "fmoor@gmx.com": 2,
                "fmoor@users.noreply.github.com": 3,
                "james@edgedb.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "edgedb-edgedb": 0,
                "vpetrovykh@sprymix.com": 52,
                "elprans@sprymix.com": 164,
                "yury@magic.io": 650,
                "elvis@magic.io": 716,
                "victor@magic.io": 505,
                "victor.petrovykh@gmail.com": 6,
                "jonathan@slenders.be": 1,
                "andrii.soldatenko@gmail.com": 1,
                "0xflotus@gmail.com": 1,
                "pedronc@users.noreply.github.com": 1,
                "schettino72@gmail.com": 5,
                "lukasz@langa.pl": 46,
                "elvis@edgedb.com": 679,
                "yury@edgedb.com": 269,
                "aeros167@gmail.com": 3,
                "victor@edgedb.com": 254,
                "stanley@stanzheng.com": 1,
                "paul@colomiets.name": 80,
                "paul@edgedb.com": 70,
                "lukasz@edgedb.com": 36,
                "roberto.prevato@gmail.com": 16,
                "roberto@edgedb.com": 5,
                "emrah@agencylook.com": 1,
                "gish.ee18@gmail.com": 3,
                "fogaprod@gmail.com": 1,
                "als.abdellah@gmail.com": 1,
                "42035119+miguel-lattuada@users.noreply.github.com": 1,
                "sidnev.nick@gmail.com": 7,
                "disfated@gmail.com": 1,
                "sully@msully.net": 432,
                "james@edgedb.com": 19,
                "56599343+Dhghomon@users.noreply.github.com": 7,
                "fmoor@users.noreply.github.com": 15,
                "me@daybreaker.info": 1,
                "pixelfaced@gmail.com": 1,
                "fantix.king@gmail.com": 84,
                "roywes@users.noreply.github.com": 1,
                "fmoor@gmx.com": 11,
                "emrahbilbay@gmail.com": 1,
                "steve@dignam.xyz": 1,
                "mail@sobolevn.me": 2,
                "jracabado@users.noreply.github.com": 1,
                "colin@edgedb.com": 15,
                "david@dgolembiowski.com": 1,
                "5274399+kwikiel@users.noreply.github.com": 1,
                "autarch@urth.org": 1,
                "sf@fermigier.com": 1,
                "aeckardt@outlook.com": 1,
                "46561460+svmorris@users.noreply.github.com": 1,
                "sf@abilian.com": 1,
                "abreu.jamil@gmail.com": 1,
                "slavugan@gmail.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]