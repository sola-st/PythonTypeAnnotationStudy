[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 1061,
        "commit_year_dict": {
            "2019": 581,
            "2020": 212,
            "2021": 268
        },
        "loc_year_edit": {
            "2019": 135656,
            "2020": 32934,
            "2021": 52188
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 289,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 5995,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2019": 2287,
            "2020": 861,
            "2021": 1082
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2019": 1271,
            "2020": 85,
            "2021": 112
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2019": 219,
            "2020": 35,
            "2021": 43
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 4230,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "module": 26,
            "likelihood": 3,
            "tensor": 1301,
            "optimizer": 2,
            "optional [dict [str,union [float,str]]]": 3,
            "int": 328,
            "bool": 290,
            "dict [str,list [tensor]]": 4,
            "list [float]": 12,
            "none": 322,
            "multivariatenormal": 20,
            "optional [int]": 66,
            "tuple [int,...]": 2,
            "callable [...,tensor]": 33,
            "optional [tensor]": 201,
            "list [tensor]": 28,
            "lbfgscompact": 9,
            "tuple [tensor,tensor,tensor]": 5,
            "tuple [tensor,tensor]": 28,
            "optional [callable [...,tensor]]": 17,
            "optional [bool]": 19,
            "optional [list [callable [...,tensor]]]": 11,
            "float": 114,
            "torch.tensor": 42,
            "optional [torch]": 44,
            "callable [...,torch]": 6,
            "optional [list [callable [...,torch]]]": 4,
            "optional [callable [...,torch]]": 2,
            "distribution": 1,
            "type [exactgp]": 1,
            "type [gaussianlikelihood]": 1,
            "cvfolds": 2,
            "cvresults": 1,
            "optional [dict [str,any]]": 7,
            "optional [dict [int,optional [float]]]": 7,
            "optional [float]": 30,
            "marginalloglikelihood": 7,
            "np.ndarray": 16,
            "dict [str,torchattr]": 4,
            "optional [dict [str,float]]": 1,
            "str": 24,
            "tuple [marginalloglikelihood,list [optimizationiteration]]": 1,
            "tuple [float,np]": 3,
            "variables": 6,
            "residuals": 5,
            "optional [any]": 2,
            "constraints": 8,
            "dict [str,any]": 34,
            "optional [residuals]": 1,
            "dict [str,tensor]": 3,
            "optimizationresults": 2,
            "tuple [bool,residuals,int]": 1,
            "tuple [variables,optional [str]]": 1,
            "tuple [tensor,tensor,tensor,tensor]": 3,
            "type [optimizer]": 2,
            "any": 108,
            "tfunc": 4,
            "optional [list [int]]": 40,
            "posterior": 35,
            "gpytorchposterior": 24,
            "mockposterior": 10,
            "optional [union [float,tensor]]": 18,
            "callable": 5,
            "optional [bounds]": 2,
            "optional [parameterbounds]": 4,
            "list [np]": 5,
            "tuple [marginalloglikelihood,optional [list [optimizationiteration]]]": 1,
            "model": 88,
            "optional [dict [str,union [float,int]]]": 1,
            "callable [...,list [tensor]]": 2,
            "optimizeconfig": 4,
            "tuple [tensor,float,float]": 1,
            "closedloopoutput": 3,
            "benchmarkoutput": 2,
            "optional [list [tensor]]": 7,
            "list [list [tensor]]": 4,
            "list [list [float]]": 8,
            "optional [list [list [tensor]]]": 1,
            "tuple [tensor,int]": 2,
            "list [callable [...,tensor]]": 8,
            "gpytorchmodel": 8,
            "\"heteroskedasticsingletaskgp\"": 3,
            "\"model\"": 6,
            "batchacquisitionfunction": 2,
            "optional [callable [...,list [tensor]]]": 1,
            "union [int,iterable [int]]": 2,
            "lazytensor": 15,
            "\"fidelityawaresingletaskgp\"": 1,
            "aggregatedbenchmarkoutput": 1,
            "optional [list [tuple [tensor,tensor,float]]]": 34,
            "torch.size": 59,
            "torch.dtype": 20,
            "torch.device": 20,
            "tuple [np,dict [str,torchattr],optional [np]]": 1,
            "list [int]": 29,
            "tuple [scipyconstraintdict]": 1,
            "scipyconstraintdict": 1,
            "optional [dict [str,union [bool,float]]]": 2,
            "optional [dict [str,union [bool,float,int]]]": 6,
            "acquisitionfunctionconfig": 1,
            "dict [str,acquisitionfunctionconfig]": 1,
            "optional [ordereddict]": 4,
            "union [float,list [float],np]": 1,
            "union [float,list [list [float]],np]": 1,
            "list [model]": 2,
            "dict [str,union [float,int,str]]": 4,
            "dict [str,union [float,int]]": 3,
            "optional [tuple [tensor,tensor]]": 6,
            "dataloader": 4,
            "dict [str,float]": 2,
            "nn.module": 4,
            "tuple [dataloader,dataloader,dataloader]": 2,
            "callable [...,any]": 7,
            "dict [str,union [float,str]]": 1,
            "generator": 1,
            "union [float,tensor]": 12,
            "optional [mcsampler]": 24,
            "optional [mcacquisitionobjective]": 7,
            "mcacquisitionfunction": 3,
            "mcacquisitionobjective": 1,
            "mcsampler": 5,
            "union [list [tensor],list [list [tensor]]]": 1,
            "dict [str,union [bool,float,int]]": 3,
            "optional [dict [int,float]]": 15,
            "dict [int,tuple [optional [float],optional [float]]]": 3,
            "parameterbounds": 2,
            "optional [set [str]]": 1,
            "tuple [tensor,tensor,optional [tensor]]": 3,
            "list [scipyconstraintdict]": 1,
            "acquisitionfunction": 18,
            "type [marginalloglikelihood]": 1,
            "normal": 1,
            "fixednoisegp": 2,
            "\"batchedmultioutputgpytorchmodel\"": 3,
            "\"modellistgp\"": 2,
            "\"modellistgpytorchmodel\"": 1,
            "optional [prior]": 25,
            "optional [interval]": 18,
            "modellistgp": 3,
            "batchedmultioutputgpytorchmodel": 3,
            "optional [likelihood]": 7,
            "optional [module]": 7,
            "optional [kernel]": 6,
            "optional [scalarizedobjective]": 7,
            "union [tensor,list [float]]": 1,
            "union [testcase,testsuite]": 1,
            "optional [dict [str,union [bool,float,int,str]]]": 4,
            "optional [acquisitionobjective]": 18,
            "optional [union [mcacquisitionobjective,scalarizedobjective]]": 2,
            "qknowledgegradient": 1,
            "list [tuple [float,float]]": 6,
            "list [tuple [float,...]]": 1,
            "list [synthetictestfunction]": 1,
            "union [tensor,float]": 1,
            "deterministicposterior": 2,
            "optional [costawareutility]": 2,
            "set [str]": 1,
            "\"lineartruncatedfidelitykernel\"": 1,
            "optional [outcometransform]": 13,
            "inputtransform": 7,
            "outcometransform": 2,
            "tuple [tensor,optional [tensor]]": 16,
            "callable [...,callable [...,any]]": 2,
            "iterator": 1,
            "list [str]": 1,
            "tscipyobjective": 1,
            "tmodtoarray": 1,
            "tarraytomod": 1,
            "generator [none,none,none]": 1,
            "tuple [scalekernel,dict]": 1,
            "path": 2,
            "longtensor": 1,
            "union [tensor,np]": 5,
            "pairwisegp": 2,
            "union [tensor,lazytensor]": 4,
            "logging.logger": 1,
            "model.model": 2,
            "tuple [tensor,float]": 1,
            "tuple [float,float]": 1,
            "tuple [int,int]": 6,
            "list [acquisitionfunction]": 1,
            "optional [analyticmultioutputobjective]": 2,
            "nondominatedpartitioning": 2,
            "optional [mcmultioutputobjective]": 4,
            "list [node]": 2,
            "node": 4,
            "trainingdata": 30,
            "optional [iterable [int],torch]": 1,
            "tuple [list [int],int,int]": 1,
            "optional [homoskedasticnoise]": 1,
            "optional [inputtransform]": 14,
            "tuple [set [str],set [str]]": 2,
            "tuple [torch,torch]": 1,
            "dict [str,list [int]]": 4,
            "optional [dict]": 8,
            "kumaraswamy": 2,
            "size": 5,
            "higherordergpposterior": 1,
            "optional [list [kernel]]": 1,
            "union [bool,tensor]": 2,
            "transformedposterior": 1,
            "higherordergp": 1,
            "optional [type [acquisitionfunction]]": 3,
            "optional [callable [...]]": 2,
            "optional [list [mcsampler]]": 1,
            "optional [list [optional [type [acquisitionfunction]]]]": 1,
            "optional [list [optional [tacqfargconstructor]]]": 1,
            "list [mcsampler]": 1,
            "list [optional [mcsampler]]": 4,
            "list [optional [type [acquisitionfunction]]]": 2,
            "list [optional [tacqfargconstructor]]": 1,
            "acquisitionobjective": 5,
            "optional [tacqfargconstructor]": 1,
            "list [optional [int]]": 1,
            "qmultisteplookahead": 1,
            "tuple [size,list [size],list [int]]": 1,
            "dict [str,str]": 1,
            "list [dict [int,float]]": 1,
            "boxdecomposition": 1,
            "union [list [tensor],tensor]": 1,
            "kernel": 2,
            "list [randomfourierfeatures]": 2,
            "genericdeterministicmodel": 2,
            "list [genericdeterministicmodel]": 1,
            "optional [np]": 2,
            "type [polytopesampler]": 1,
            "list [tuple [tensor,tensor,float]]": 1,
            "optional [callable [...,kernel]]": 1,
            "maternkernel": 1,
            "type [acquisitionfunction]": 3,
            "callable [...,dict [str,any]]": 2,
            "callable [...,acquisitionfunction]": 1,
            "union [list [float],tensor]": 1,
            "optional [multitaskgaussianlikelihood]": 1,
            "multitaskmultivariatenormal": 3,
            "multitaskgpposterior": 1,
            "union [lazytensor,tensor]": 1,
            "optional [union [lazytensor,tensor]]": 1,
            "fixedfeatureacquisitionfunction": 1,
            "dict [int,optional [float]]": 1,
            "_nofixedfeatures": 1,
            "dict [int,float]": 1,
            "runtimeerror": 1,
            "dict [int,list [int]]": 2,
            "optional [approximategp]": 1,
            "optional [mean]": 2,
            "optional [_variationaldistribution]": 2,
            "type [_variationalstrategy]": 2,
            "optional [union [tensor,int]]": 2,
            "dict [int,union [int,float]]": 3,
            "union [scalarizedobjective,mcacquisitionobjective]": 1,
            "optional [str]": 1,
            "callable [any,type]": 2,
            "optional [tuple [type]]": 1,
            "type": 1,
            "tuple [type]": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 1468,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "module": 15,
            "torch.tensor": 17,
            "callable [...,tensor]": 26,
            "likelihood": 2,
            "tensor": 465,
            "optional [dict [str,any]]": 4,
            "optional [dict [str,union [float,str]]]": 2,
            "int": 141,
            "bool": 83,
            "dict [str,list [tensor]]": 5,
            "list [float]": 10,
            "dict [str,torchattr]": 4,
            "numpyparameters": 1,
            "dict [str,tensor]": 4,
            "list [np]": 4,
            "none": 95,
            "multivariatenormal": 5,
            "tuple [tensor,tensor]": 11,
            "tfunc": 2,
            "any": 20,
            "optional [int]": 32,
            "gpytorchmodel": 6,
            "optional [tensor]": 68,
            "tuple [int,...]": 2,
            "str": 4,
            "type [optimizer]": 2,
            "list [tensor]": 20,
            "optional [union [float,tensor]]": 9,
            "np.ndarray": 3,
            "optional [bounds]": 1,
            "float": 40,
            "torch.size": 15,
            "torch.dtype": 9,
            "torch.device": 8,
            "optional [parameterbounds]": 1,
            "tuple [np,dict [str,torchattr],optional [np]]": 1,
            "batchacquisitionfunction": 2,
            "optional [dict [int,optional [float]]]": 4,
            "optimizeconfig": 4,
            "model": 41,
            "benchmarkoutput": 2,
            "posterior": 10,
            "optional [list [int]]": 6,
            "optional [float]": 6,
            "optional [list [callable [...,tensor]]]": 15,
            "optional [callable [...,tensor]]": 10,
            "optional [bool]": 17,
            "list [callable [...,tensor]]": 3,
            "lbfgscompact": 9,
            "tuple [tensor,tensor,tensor]": 5,
            "variables": 6,
            "residuals": 5,
            "optional [any]": 1,
            "constraints": 8,
            "dict [str,any]": 2,
            "optional [residuals]": 1,
            "optimizationresults": 2,
            "tuple [bool,residuals,int]": 1,
            "tuple [variables,optional [str]]": 1,
            "tuple [tensor,tensor,tensor,tensor]": 2,
            "dict [str,union [float,str]]": 2,
            "optional [torch]": 10,
            "optional [tuple [tensor,tensor]]": 1,
            "generator": 1,
            "mockposterior": 8,
            "optional [ordereddict]": 3,
            "callable [...,any]": 5,
            "union [float,tensor]": 10,
            "optional [dict [str,union [bool,float,int]]]": 6,
            "dataloader": 4,
            "dict [str,float]": 2,
            "nn.module": 4,
            "tuple [dataloader,dataloader,dataloader]": 2,
            "dict [str,union [float,int,str]]": 4,
            "union [int,iterable [int]]": 2,
            "lazytensor": 6,
            "optional [list [tensor]]": 5,
            "list [int]": 1,
            "aggregatedbenchmarkoutput": 1,
            "dict [str,union [float,int]]": 3,
            "mcacquisitionobjective": 3,
            "mcsampler": 1,
            "optional [mcsampler]": 1,
            "callable [...,list [tensor]]": 2,
            "acquisitionfunctionconfig": 1,
            "closedloopoutput": 2,
            "optional [mcacquisitionobjective]": 2,
            "dict [str,acquisitionfunctionconfig]": 1,
            "optional [callable [...,list [tensor]]]": 1,
            "_modelbestpointoutput": 1,
            "dict [str,benchmarkoutput]": 1,
            "list [list [tensor]]": 4,
            "list [list [float]]": 4,
            "optional [list [list [tensor]]]": 1,
            "list [model]": 1,
            "optional [dict [str,union [bool,float]]]": 2,
            "scipyconstraintdict": 1,
            "optional [dict [str,float]]": 1,
            "type [gaussianlikelihood]": 1,
            "union [list [tensor],list [list [tensor]]]": 1,
            "acquisitionfunction": 4,
            "optional [list [tuple [tensor,tensor,float]]]": 8,
            "optional [dict [int,float]]": 3,
            "optional [prior]": 13,
            "optional [interval]": 11,
            "optional [likelihood]": 2,
            "optional [kernel]": 2,
            "optional [outcometransform]": 1,
            "marginalloglikelihood": 2,
            "tuple [float,np]": 1,
            "callable": 1,
            "list [tuple [float,float]]": 1,
            "optional [homoskedasticnoise]": 1,
            "size": 1,
            "kumaraswamy": 2,
            "multitaskmultivariatenormal": 1,
            "gpytorchposterior": 2
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 297,
        "typeChanged_dict_var": {
            "np.array -> list [np]": 1,
            "list [list [float]] -> list [tensor]": 3,
            "list [list [float]] -> list [list [tensor]]": 1,
            "list [list [tensor]] -> list [tensor]": 1,
            "float -> tensor": 2,
            "distribution -> gpytorchposterior": 1,
            "list [synthetictestfunction] -> list [basetestproblem]": 1
        },
        "typeChanged_dict_arg": {
            "optimizer -> type [optimizer]": 1,
            "optimizer -> callable": 1,
            "torch.tensor -> tensor": 22,
            "optional [tensor] -> optional [union [float,tensor]]": 2,
            "module -> model": 23,
            "module -> gpytorchmodel": 1,
            "callable -> module": 1,
            "optional [dict [str,union [float,str]]] -> optional [dict [str,any]]": 1,
            "optional [torch] -> optional [tensor]": 9,
            "callable [...,torch] -> callable [...,tensor]": 7,
            "optional [list [callable [...,torch]]] -> optional [list [callable [...,tensor]]]": 5,
            "optional [callable [...,torch]] -> optional [callable [...,tensor]]": 2,
            "tensor -> optional [tensor]": 3,
            "optional [dict [str,union [float,int]]] -> optional [dict [str,union [bool,float,int]]]": 1,
            "optional [tensor] -> tensor": 5,
            "likelihood -> optional [likelihood]": 1,
            "tfunc -> callable [...,any]": 1,
            "callable [...,any] -> callable [...,tensor]": 1,
            "callable [...,tensor] -> mcacquisitionobjective": 3,
            "callable [...,tensor] -> optional [mcacquisitionobjective]": 2,
            "mcacquisitionfunction -> acquisitionfunction": 2,
            "int -> optional [int]": 5,
            "list [model] -> list [gpytorchmodel]": 1,
            "module -> acquisitionfunction": 2,
            "dict [str,union [bool,float,int]] -> optional [dict [str,union [bool,float,int]]]": 3,
            "type [exactgp] -> type [gpytorchmodel]": 1,
            "union [float,list [float],np] -> tensor": 1,
            "union [float,list [list [float]],np] -> tensor": 1,
            "optional [int] -> int": 1,
            "tensor -> union [float,tensor]": 1,
            "list [gpytorchmodel] -> gpytorchmodel": 1,
            "optional [dict [str,union [bool,float,int]]] -> optional [dict [str,union [bool,float,int,str]]]": 1,
            "union [testcase,testsuite] -> union [unittest,unittest]": 1,
            "optional [union [mcacquisitionobjective,scalarizedobjective]] -> optional [acquisitionobjective]": 1,
            "bool -> union [bool,tensor]": 5,
            "callable [...,tensor] -> optional [callable [...,tensor]]": 1,
            "size -> torch.size": 2,
            "tuple [tensor,tensor] -> optional [tuple [tensor,tensor]]": 3,
            "list [float] -> union [list [float],tensor]": 1,
            "union [tensor,list [float]] -> union [tensor,sequence [union [tensor,float]]]": 1,
            "callable -> acquisitionfunction": 1,
            "any -> acqf": 1,
            "tensor -> any": 1,
            "optional [acquisitionobjective] -> acquisitionobjective": 1
        },
        "typeChanged_dict_ret": {
            "module -> marginalloglikelihood": 1,
            "dict [str,tensor] -> tuple [np,dict [str,torchattr]]": 1,
            "numpyparameters -> module": 1,
            "torch.tensor -> tensor": 13,
            "module -> gpytorchmodel": 1,
            "tuple [np,dict [str,torchattr]] -> tuple [np,dict [str,torchattr],optional [np]]": 1,
            "tuple [marginalloglikelihood,list [optimizationiteration]] -> tuple [marginalloglikelihood,optional [list [optimizationiteration]]]": 1,
            "tensor -> tuple [tensor,tensor]": 4,
            "torch.tensor -> none": 3,
            "none -> \"singletaskgp\"": 1,
            "tuple [tensor,float,float] -> tuple [tensor,tensor,tensor]": 1,
            "\"fidelityawaresingletaskgp\" -> none": 1,
            "\"singletaskgp\" -> none": 1,
            "\"heteroskedasticsingletaskgp\" -> none": 1,
            "\"model\" -> none": 1,
            "closedloopoutput -> _modelbestpointoutput": 1,
            "tensor -> dict [str,benchmarkoutput]": 1,
            "tensor -> none": 10,
            "tensor -> torch.device": 2,
            "posterior -> gpytorchposterior": 1,
            "tensor -> optional [list [callable [...,tensor]]]": 1,
            "tfunc -> callable [...,any]": 1,
            "none -> optional [int]": 1,
            "none -> tensor": 8,
            "any -> tensor": 2,
            "tensor -> callable [...,tensor]": 1,
            "callable [...,any] -> tensor": 2,
            "tuple [tensor,int] -> callable [...,any]": 1,
            "tensor -> torch.size": 1,
            "multivariatenormal -> int": 3,
            "module -> callable [...,any]": 1,
            "tuple [tensor,tensor,tensor] -> tuple [tensor,tensor]": 1,
            "tuple [marginalloglikelihood,optional [list [optimizationiteration]]] -> tuple [marginalloglikelihood,list [optimizationiteration]]": 2,
            "tensor -> callable [...,any]": 2,
            "int -> multivariatenormal": 2,
            "torch.size -> tensor": 1,
            "optional [callable [...,tensor]] -> tensor": 1,
            "tuple [scipyconstraintdict] -> list [scipyconstraintdict]": 1,
            "float -> np.float64": 1,
            "list [int] -> list [scipyconstraintdict]": 1,
            "np.ndarray -> optional [tensor]": 2,
            "callable [...,any] -> callable [...,callable [...,any]]": 1,
            "any -> callable [...,any]": 1,
            "callable [...,any] -> any": 1,
            "int -> tuple [tensor,tensor]": 1,
            "generator -> generator [none,none,none]": 1,
            "optional [tensor] -> tensor": 1,
            "tensor -> union [list [tensor],list [list [tensor]]]": 1,
            "none -> tuple [tensor,tensor,optional [tensor]]": 1,
            "multivariatenormal -> \"fixednoisegp\"": 1,
            "none -> posterior": 1,
            "gpytorchposterior -> none": 1,
            "tuple [tensor,tensor,optional [tensor]] -> none": 1,
            "tuple [marginalloglikelihood,list [optimizationiteration]] -> tuple [marginalloglikelihood,dict [str,union [float,list [optimizationiteration]]]]": 2,
            "bool -> none": 1,
            "tensor -> int": 2,
            "mcacquisitionfunction -> \"monte_carlo.mcacquisitionfunction\"": 1,
            "none -> mockposterior": 1,
            "callable [...,callable [...,any]] -> optional [list [int]]": 1,
            "deterministicposterior -> int": 1,
            "gpytorchposterior -> int": 1,
            "\"model\" -> int": 1,
            "tensor -> \"genericdeterministicmodel\"": 1,
            "tensor -> \"affinedeterministicmodel\"": 1,
            "none -> tuple [torch,torch]": 1,
            "generator [none,none,none] -> tensor": 1,
            "\"monte_carlo.mcacquisitionfunction\" -> monte_carlo.mcacquisitionfunction": 1,
            "\"genericdeterministicmodel\" -> genericdeterministicmodel": 1,
            "\"affinedeterministicmodel\" -> affinedeterministicmodel": 1,
            "\"fixednoisegp\" -> fixednoisegp": 1,
            "\"batchedmultioutputgpytorchmodel\" -> batchedmultioutputgpytorchmodel": 3,
            "\"heteroskedasticsingletaskgp\" -> heteroskedasticsingletaskgp": 2,
            "\"model\" -> model": 4,
            "\"modellistgpytorchmodel\" -> modellistgpytorchmodel": 1,
            "\"lineartruncatedfidelitykernel\" -> lineartruncatedfidelitykernel": 1,
            "\"modellistgp\" -> modellistgp": 2,
            "none -> bool": 2,
            "float -> tuple [tensor,tensor]": 1,
            "int -> tensor": 1,
            "none -> optional [str]": 1,
            "int -> torch.size": 3,
            "tuple [tensor,tensor,optional [tensor]] -> torch.size": 1,
            "none -> int": 1,
            "acquisitionfunction -> none": 1,
            "tuple [tensor,tensor] -> tensor": 1,
            "none -> torch.size": 1,
            "float -> tensor": 1,
            "float -> none": 1,
            "callable [...,callable [...,any]] -> bool": 1,
            "tuple [tensor,optional [tensor]] -> outcometransform": 4,
            "torch.device -> torch.size": 4,
            "none -> np.ndarray": 1,
            "tuple [set [str],set [str]] -> batchedmultioutputgpytorchmodel": 1,
            "gpytorchposterior -> tensor": 1,
            "list [genericdeterministicmodel] -> genericdeterministicmodel": 1,
            "modellistgpytorchmodel -> model": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 2853,
        "functionReturnsType_added": 1150,
        "variableType_added": 227,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 1000,
        "functionReturnsType_removed": 318,
        "variableType_removed": 150,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 131,
        "functionReturnsType_changed": 156,
        "variableType_changed": 10,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            1.037924151696607,
            4.958677685950414,
            10.56338028169014,
            1.3986013986013985,
            7.216494845360824,
            17.857142857142858,
            4.819277108433735,
            2.2222222222222223,
            15.384615384615385,
            4.587155963302752,
            0.8264462809917356,
            2.7027027027027026,
            6.005221932114883,
            12.121212121212121,
            0.9615384615384616,
            7.938257993384785,
            2.941176470588235,
            1.3888888888888888,
            6.091370558375635,
            0.6944444444444444,
            2.9850746268656714,
            3.9473684210526314,
            12.5,
            1.8292682926829267,
            1.1764705882352942,
            1.7064846416382253,
            6.212121212121212,
            0.2364066193853428,
            2.256317689530686,
            5.555555555555555,
            13.422818791946309,
            1.6853932584269662,
            11.11111111111111,
            13.333333333333334,
            3.902439024390244,
            12.790697674418606,
            10.0,
            6.382978723404255,
            0.6072874493927125,
            8.641975308641975,
            5.714285714285714,
            0.3731343283582089,
            4.827586206896552,
            8.241758241758241,
            2.0066889632107023,
            1.25,
            1.0443864229765014,
            4.460093896713615,
            8.016877637130802,
            18.181818181818183,
            1.639344262295082,
            8.571428571428571,
            10.0,
            1.5151515151515151,
            8.0,
            90.9090909090909,
            8.791208791208792,
            25.0,
            1.0416666666666665,
            5.484460694698354,
            5.592105263157895,
            14.285714285714285,
            14.285714285714285,
            3.8461538461538463,
            4.3478260869565215,
            6.557377049180328,
            0.09970089730807577,
            3.4552845528455287,
            5.9171597633136095,
            0.12033694344163659,
            7.729468599033816,
            1.932367149758454,
            6.785714285714286,
            6.885245901639345,
            1.0297482837528604,
            15.625,
            3.8461538461538463,
            0.53475935828877,
            1.6666666666666667,
            1.36986301369863,
            14.516129032258066,
            2.941176470588235,
            12.931034482758621,
            2.923976608187134,
            1.1627906976744187,
            0.3875968992248062,
            18.75,
            1.3043478260869565,
            3.389830508474576,
            6.25,
            16.666666666666664,
            0.4484304932735426,
            2.941176470588235,
            18.367346938775512,
            15.789473684210526,
            8.333333333333332,
            4.0,
            1.3157894736842104,
            8.333333333333332,
            100.0,
            4.054054054054054,
            8.333333333333332,
            1.0810810810810811,
            9.022556390977442,
            6.896551724137931,
            0.5813953488372093,
            7.6923076923076925,
            15.789473684210526,
            33.33333333333333,
            6.25,
            0.5076142131979695,
            2.941176470588235,
            0.9564293304994688,
            0.5908419497784343,
            0.5531653349723417,
            5.40765391014975,
            6.897678980058843,
            0.07035647279549719,
            10.344827586206897,
            6.896551724137931,
            3.967576791808874,
            5.72811617587737,
            0.04145077720207254,
            3.125,
            4.807692307692308,
            2.109704641350211,
            2.4390243902439024,
            7.142857142857142,
            1.7857142857142856,
            0.37251655629139074,
            0.42194092827004215,
            7.446808510638298,
            13.586956521739129,
            7.565789473684211,
            7.6923076923076925,
            0.398406374501992,
            6.122448979591836,
            6.122448979591836,
            6.0606060606060606,
            1.3605442176870748,
            0.16420361247947454,
            0.0544069640914037,
            4.098360655737705,
            50.0,
            2.898550724637681,
            2.989130434782609,
            8.88888888888889,
            4.105571847507331,
            3.8596491228070176,
            0.1594896331738437,
            1.0575793184488838,
            2.4390243902439024,
            5.687203791469194,
            4.744525547445255,
            0.205761316872428,
            7.804878048780488,
            33.33333333333333,
            33.33333333333333,
            1.5686274509803921,
            11.494252873563218,
            11.235955056179774,
            2.8846153846153846,
            1.4705882352941175,
            2.3346303501945527,
            2.5,
            0.5277044854881267,
            25.0,
            25.0,
            2.5380710659898478,
            7.934131736526946,
            3.5532994923857872,
            3.5532994923857872,
            6.422018348623854,
            0.2145922746781116,
            4.562737642585551,
            0.6472491909385114,
            1.183431952662722,
            3.3333333333333335,
            1.1450381679389312,
            1.8518518518518516,
            1.098901098901099,
            2.941176470588235,
            16.0,
            2.7027027027027026,
            1.550387596899225,
            16.666666666666664,
            8.16326530612245,
            4.0,
            0.6172839506172839,
            14.285714285714285,
            0.40733197556008144,
            0.14914243102162564,
            0.6329113924050633,
            1.0752688172043012,
            0.6896551724137931,
            1.639344262295082,
            3.4090909090909087,
            1.8691588785046727,
            13.953488372093023,
            3.0303030303030303,
            6.25,
            9.090909090909092,
            0.546448087431694,
            1.2987012987012987,
            2.7027027027027026,
            10.526315789473683,
            2.1052631578947367,
            1.7241379310344827,
            3.389830508474576,
            2.0,
            0.199203187250996,
            1.2195121951219512,
            0.1937984496124031,
            4.761904761904762,
            1.25,
            1.0033444816053512,
            10.0,
            10.948905109489052,
            1.9667170953101363,
            1.9696969696969695,
            4.634146341463414,
            1.8292682926829267,
            0.17391304347826086,
            3.71900826446281,
            0.33783783783783783,
            4.193548387096775,
            0.6622516556291391,
            1.2269938650306749,
            1.48619957537155,
            4.266666666666667,
            5.445544554455446,
            3.6585365853658534,
            3.7037037037037033,
            3.4700315457413247,
            3.571428571428571,
            0.2890173410404624,
            2.7777777777777777,
            7.142857142857142,
            15.0,
            10.0,
            3.225806451612903,
            3.804347826086957,
            7.4074074074074066,
            4.145077720207254,
            0.9009009009009009,
            2.3255813953488373,
            8.709677419354838,
            6.532663316582915,
            6.557377049180328,
            1.3513513513513513,
            100.0,
            0.13329778725673155,
            0.029002320185614848,
            0.02777392028884877,
            1.694915254237288,
            3.225806451612903,
            3.571428571428571,
            5.555555555555555,
            1.5857284440039643,
            0.8605851979345954,
            4.958677685950414,
            8.064516129032258,
            0.2347417840375587,
            4.545454545454546,
            4.694835680751173,
            0.09523809523809523,
            5.834092980856882,
            0.8445945945945946,
            5.714285714285714,
            4.242424242424243,
            0.546448087431694,
            5.633802816901409,
            4.961832061068702,
            9.090909090909092,
            3.4031413612565444,
            0.2457002457002457,
            3.8834951456310676,
            2.072538860103627,
            2.335279399499583,
            2.1757322175732217,
            4.672897196261682,
            3.278688524590164,
            3.4788540245566164,
            3.587443946188341,
            2.109704641350211,
            4.878048780487805,
            7.547169811320755,
            0.27932960893854747,
            0.11961722488038277,
            0.0643915003219575,
            3.7130270610446825,
            0.06277463904582549,
            1.4492753623188406,
            0.591715976331361,
            9.090909090909092,
            4.0,
            4.166666666666666,
            13.793103448275861,
            0.7722007722007722,
            1.0362694300518136,
            5.687203791469194,
            0.9345794392523363,
            5.88235294117647,
            7.042253521126761,
            3.7037037037037033,
            2.083333333333333,
            1.9230769230769231,
            16.901408450704224,
            2.7450980392156863,
            9.48905109489051,
            0.6097560975609756,
            11.486486486486488,
            5.120481927710843,
            3.755868544600939,
            4.0650406504065035,
            3.4782608695652173,
            3.8499506416584404,
            5.8988764044943816,
            4.487179487179487,
            0.39215686274509803,
            3.0797101449275366,
            6.140350877192982,
            9.333333333333334,
            13.513513513513514,
            0.8849557522123894,
            6.451612903225806,
            7.801418439716312,
            5.426356589147287,
            4.102564102564102,
            0.4878048780487805,
            5.154639175257731,
            0.5076142131979695,
            3.041922290388548,
            5.0,
            66.66666666666666,
            3.0303030303030303,
            66.66666666666666,
            1.5873015873015872,
            20.0,
            100.0,
            3.3333333333333335,
            3.7135278514588856,
            0.24213075060532688,
            8.108108108108109,
            2.564102564102564,
            3.7735849056603774,
            1.4925373134328357,
            0.5747126436781609,
            2.717391304347826,
            1.2448132780082988,
            0.8333333333333334,
            3.571428571428571,
            2.3255813953488373,
            6.25,
            5.343511450381679,
            8.333333333333332,
            3.7735849056603774,
            6.8493150684931505,
            8.333333333333332,
            1.0204081632653061,
            2.62582056892779,
            1.694915254237288,
            4.66321243523316,
            7.2727272727272725,
            6.382978723404255,
            0.5102040816326531,
            1.7094017094017095,
            6.0606060606060606,
            3.571428571428571,
            6.39481000926784,
            4.651162790697675,
            14.285714285714285,
            6.779661016949152,
            8.16326530612245,
            1.40485312899106,
            4.743083003952568,
            8.108108108108109,
            25.0,
            4.878048780487805,
            3.9735099337748347,
            7.6923076923076925,
            1.2048192771084338,
            25.0,
            16.666666666666664,
            4.339622641509433,
            5.7591623036649215,
            0.4694835680751174,
            0.3676470588235294,
            8.93939393939394,
            1.4598540145985401,
            2.198852772466539,
            2.2590361445783134,
            1.8867924528301887,
            0.6269592476489028,
            1.5151515151515151,
            0.22123893805309736,
            2.857142857142857,
            1.0101010101010102,
            3.0303030303030303,
            10.869565217391305,
            0.4878048780487805,
            3.9215686274509802,
            2.6490066225165565,
            5.737704918032787,
            5.555555555555555,
            0.7092198581560284,
            0.10221465076660989,
            20.0,
            5.633802816901409,
            2.6490066225165565,
            1.8544935805991443,
            3.404255319148936,
            3.27455919395466,
            0.4592422502870264,
            2.5236593059936907,
            0.09082652134423251,
            2.666666666666667,
            0.9009009009009009,
            6.9478908188585615,
            4.878048780487805,
            0.205761316872428,
            1.094890510948905,
            1.4218009478672986,
            6.172839506172839,
            6.806282722513089,
            1.1389521640091116,
            50.0,
            1.5068493150684932,
            2.278481012658228,
            6.341463414634147,
            3.6585365853658534,
            0.3472222222222222,
            4.502369668246446,
            0.6756756756756757,
            2.7027027027027026,
            2.5906735751295336,
            2.9296875,
            3.571428571428571,
            5.063291139240507,
            1.2738853503184715,
            0.6134969325153374,
            3.1948881789137378,
            1.7857142857142856,
            4.371584699453552,
            11.538461538461538,
            1.098901098901099,
            13.333333333333334,
            6.666666666666667,
            7.13375796178344,
            2.251655629139073,
            0.06548788474132286,
            30.0,
            12.121212121212121,
            10.824742268041238,
            4.0,
            2.054794520547945,
            3.5135135135135136,
            3.205128205128205,
            6.41025641025641,
            3.7735849056603774,
            4.0201005025125625,
            2.7777777777777777,
            2.684563758389262,
            5.0,
            3.5294117647058822,
            0.7462686567164178,
            1.4925373134328357,
            0.7692307692307693,
            4.222222222222222,
            0.423728813559322,
            5.0,
            100.0,
            9.090909090909092,
            9.090909090909092,
            9.502262443438914,
            5.88235294117647,
            6.666666666666667,
            1.2345679012345678,
            1.89873417721519,
            0.234192037470726,
            0.6535947712418301,
            1.2658227848101267,
            2.9914529914529915,
            12.903225806451612,
            3.125,
            2.904564315352697,
            6.666666666666667,
            2.380952380952381,
            4.878048780487805,
            2.8169014084507045,
            5.095541401273886,
            1.9607843137254901,
            0.38167938931297707,
            2.2364217252396164,
            2.5893958076448826,
            2.6476578411405294,
            4.0,
            5.287713841368585,
            2.6929982046678633,
            2.923976608187134,
            3.1948881789137378,
            3.4482758620689653,
            9.558823529411764,
            0.18248175182481752,
            6.529209621993128,
            10.81081081081081,
            2.4390243902439024,
            4.18848167539267,
            4.861111111111112
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2018",
                "1061",
                "1731",
                "5995",
                "157",
                "31",
                "1560",
                "1914",
                "74",
                "0",
                "0",
                "17168"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/pytorch/botorch": 5995
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 3071,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            72.6
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/pytorch/botorch": 3071
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2019": 2287,
            "2020": 861,
            "2021": 1082
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2019": 153,
            "2020": 54,
            "2021": 82
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2019": 428,
            "2020": 158,
            "2021": 186
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2018": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2019": [
                529,
                892,
                202,
                500,
                39,
                2617
            ],
            "2020": [
                1102,
                1015,
                497,
                457,
                63,
                4409
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "pytorch-botorch": 0,
                "facebook-github-bot@users.noreply.github.com": 1,
                "balandat@fb.com": 106,
                "briankarrer@fb.com": 11,
                "samdaulton@instagram.com": 39,
                "bletham@fb.com": 5,
                "drjiang@fb.com": 16,
                "weiweili90@fb.com": 7,
                "kkashin@fb.com": 1,
                "liangshi@fb.com": 2,
                "sdaulton@fb.com": 43,
                "zylin@fb.com": 3,
                "scubasteve@fb.com": 1,
                "jmarkovic@fb.com": 2,
                "jej@fb.com": 2,
                "ericlou@fb.com": 4,
                "alh99@fb.com": 1,
                "saitcakmak@outlook.com": 7,
                "": 1,
                "doctorfreund@fb.com": 1,
                "drfreund@fb.com": 6,
                "qingfeng@fb.com": 3,
                "wjm363@nyu.edu": 5,
                "wjmaddox@fb.com": 3,
                "zylin@cs.stanford.edu": 1,
                "henry.moss@secondmind.ai": 1,
                "vishwaks@fb.com": 4,
                "saitcakmak@fb.com": 5,
                "lsl@fb.com": 1,
                "roussel@ucla.edu": 1,
                "lukasfro@ethz.ch": 1,
                "balandat@gmail.com": 1,
                "jtwilson@fb.com": 2,
                "ss3765@cornell.edu": 1,
                "johannespeter.duerholt@evonik.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "pytorch-botorch": 0,
                "facebook-github-bot@users.noreply.github.com": 1,
                "balandat@fb.com": 538,
                "briankarrer@fb.com": 14,
                "samdaulton@instagram.com": 90,
                "bletham@fb.com": 15,
                "drjiang@fb.com": 63,
                "kkashin@fb.com": 3,
                "till@okcupid.com": 1,
                "shaundsingh@fb.com": 3,
                "ebakshy@fb.com": 4,
                "gpleiss@gmail.com": 1,
                "bopengli@fb.com": 1,
                "brianjo@fb.com": 2,
                "amurthy@fb.com": 3,
                "drfreund@fb.com": 11,
                "lilidworkin@fb.com": 4,
                "straussmaximilian@gmail.com": 1,
                "igevorse@gmail.com": 1,
                "syameimaru_kurumi@pku.edu.cn": 2,
                "adek@fb.com": 1,
                "joelm@fb.com": 1,
                "weiweili90@fb.com": 11,
                "31725302+jmren168@users.noreply.github.com": 1,
                "poshannessy@fb.com": 1,
                "51128276+bradybromley@users.noreply.github.com": 1,
                "liangshi@fb.com": 6,
                "paul@oshannessy.com": 2,
                "scubasteve@fb.com": 3,
                "sdaulton@fb.com": 100,
                "zylin@fb.com": 5,
                "spisakjo@gmail.com": 1,
                "hmedal@utk.edu": 2,
                "kazerouni@fb.com": 3,
                "jmarkovic@fb.com": 3,
                "49699333+dependabot[bot]@users.noreply.github.com": 13,
                "jej@fb.com": 2,
                "ericlou@fb.com": 4,
                "stash@fb.com": 2,
                "synapticarbors@users.noreply.github.com": 1,
                "alh99@fb.com": 1,
                "saitcakmak@outlook.com": 21,
                "": 1,
                "doctorfreund@fb.com": 1,
                "markus.rothe@rite.cc": 2,
                "michael.shvartsman@fb.com": 1,
                "deriksson@fb.com": 8,
                "qingfeng@fb.com": 4,
                "wjm363@nyu.edu": 16,
                "jreese@fb.com": 1,
                "milesial@users.noreply.github.com": 1,
                "dme65@cornell.edu": 5,
                "wjmaddox@fb.com": 4,
                "807580+SamuelMarks@users.noreply.github.com": 1,
                "neerajprad@fb.com": 1,
                "skyline75489@outlook.com": 1,
                "zylin@cs.stanford.edu": 1,
                "henry.moss@secondmind.ai": 2,
                "vishwaks@fb.com": 11,
                "saitcakmak@fb.com": 15,
                "1112238+ltiao@users.noreply.github.com": 1,
                "Balandat@users.noreply.github.com": 1,
                "25031668+NTR0314@users.noreply.github.com": 1,
                "docusaurus-bot@users.noreply.github.com": 1,
                "lsl@fb.com": 4,
                "balandat@gmail.com": 24,
                "skainsworth@gmail.com": 1,
                "roussel@ucla.edu": 2,
                "lukasfro@ethz.ch": 1,
                "valtron2000@gmail.com": 1,
                "jtwilson@fb.com": 2,
                "ss3765@cornell.edu": 1,
                "johannespeter.duerholt@evonik.com": 1,
                "asuarez@fb.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]