[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 768,
        "commit_year_dict": {
            "2017": 609,
            "2018": 146,
            "2019": 11,
            "2020": 1,
            "2021": 1
        },
        "loc_year_edit": {
            "2017": 33899,
            "2018": 64232,
            "2019": 8158,
            "2020": 2,
            "2021": 2
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 112,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 1766,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2017": 706,
            "2018": 176,
            "2019": 1
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2017": 368,
            "2018": 476,
            "2019": 2
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2017": 35,
            "2018": 2
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 883,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "str": 91,
            "dict [str,str]": 2,
            "none": 58,
            "any": 9,
            "int": 34,
            "list [tuple [str,str]]": 2,
            "iterable [bytes]": 2,
            "wsgi.wsgiresponse": 3,
            "list [route]": 4,
            "http.path": 11,
            "urlargs": 1,
            "http.response": 40,
            "urlarg": 1,
            "http.namedqueryparam": 2,
            "http.namedheader": 2,
            "responsedata": 2,
            "type": 14,
            "headers": 3,
            "argname": 8,
            "queryparams": 2,
            "pipeline": 9,
            "callable": 21,
            "urlpathargs": 2,
            "wsgienviron": 37,
            "headerstype": 2,
            "method": 1,
            "url": 1,
            "http.method": 10,
            "http.scheme": 3,
            "http.host": 3,
            "http.port": 3,
            "http.rootpath": 1,
            "http.querystring": 4,
            "http.queryparams": 11,
            "http.url": 7,
            "http.headers": 20,
            "http.request": 5,
            "wsgi.wsgienviron": 3,
            "float": 5,
            "schema.number": 2,
            "http.body": 9,
            "'method'": 1,
            "'scheme'": 1,
            "'host'": 1,
            "'port'": 1,
            "'rootpath'": 1,
            "'path'": 1,
            "'querystring'": 1,
            "'url'": 1,
            "'body'": 1,
            "'headers'": 1,
            "'header'": 1,
            "'queryparams'": 1,
            "'queryparam'": 1,
            "'request'": 1,
            "'response'": 1,
            "bool": 20,
            "dict": 11,
            "step": 3,
            "routerlookup": 1,
            "'wsgiresponse'": 1,
            "approot": 1,
            "http.mountpath": 1,
            "http.relativepath": 1,
            "dict [str,any]": 14,
            "exception": 2,
            "schema.boolean": 1,
            "minmaxinteger": 2,
            "multipleinteger": 2,
            "minmaxnumber": 2,
            "multiplenumber": 2,
            "minmaxlength": 2,
            "notblank": 2,
            "validpattern": 2,
            "maxlength": 3,
            "schema.integer": 4,
            "set": 5,
            "targetdir": 2,
            "layout": 2,
            "force": 2,
            "host": 2,
            "port": 2,
            "list [routing]": 3,
            "list [callable]": 1,
            "app.app": 1,
            "settings": 19,
            "templates": 8,
            "template": 2,
            "setting": 1,
            "list [type]": 4,
            "app": 19,
            "dbbackend": 2,
            "http.queryparam": 10,
            "sqlalchemy": 4,
            "body": 1,
            "highscore": 2,
            "http.requestdata": 8,
            "color": 2,
            "termsandconditions": 2,
            "union [str,dict]": 2,
            "requestdata": 1,
            "kittencolor": 2,
            "kittenname": 2,
            "http.requestfield": 1,
            "list [kitten]": 2,
            "kitten": 4,
            "union [str,list [str]]": 2,
            "todonote": 2,
            "format": 1,
            "schema.path": 1,
            "statics": 1,
            "route": 4,
            "link": 7,
            "dict [str,route]": 2,
            "apischema": 4,
            "set [type]": 1,
            "path": 1,
            "routesconfig": 1,
            "iterator [route]": 1,
            "list": 3,
            "mapping": 5,
            "iterator": 2,
            "click.context": 2,
            "djangobackend": 2,
            "requests.preparedrequest": 1,
            "_testclient": 1,
            "untypedlist": 2,
            "typedlist": 2,
            "category": 2,
            "nodebugger": 1,
            "djangoorm": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [session,none,none]": 2,
            "sqlalchemybackend": 3,
            "console": 1,
            "schema": 4,
            "filewrapper": 2,
            "router": 2,
            "staticfile": 1,
            "jinja2.template": 1,
            "staticfiles": 2,
            "umimessage": 11,
            "paramname": 4,
            "umichannels": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int]": 2,
            "coreapi.link": 2,
            "pathwildcard": 2,
            "response": 9,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [coreapi]": 1,
            "typing.type": 7,
            "session": 4,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [kitten]": 2,
            "a": 6,
            "loggingcomponent": 2,
            "contextmanagercomponent": 1,
            "keywordargs": 1,
            "typesystem.number": 1,
            "typesystem.integer": 2,
            "typesystem.string": 1,
            "typesystem.boolean": 1,
            "http.session": 6,
            "http.header": 7,
            "sessionstore": 1,
            "http.responseheaders": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,str]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [http,none,none]": 1,
            "injector": 8,
            "http.requeststream": 2,
            "typing.any": 1,
            "immutablemultidict": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,dict]": 1,
            "handler": 5,
            "auth": 4,
            "returnvalue": 2,
            "wsgistartresponse": 2,
            "asgisend": 2,
            "asgiscope": 11,
            "parameter": 4,
            "asgireceive": 2,
            "inspect.parameter": 8,
            "http.pathparams": 2,
            "validatedpathparams": 2,
            "validatedqueryparams": 2,
            "validatedrequestdata": 2,
            "user": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [user]": 1,
            "list [union [str,int]]": 4,
            "'token'": 1,
            "token": 3
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 846,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "foo": 2,
            "bar": 1,
            "baz": 1,
            "int": 34,
            "none": 54,
            "type": 10,
            "http.response": 53,
            "response": 8,
            "wsgienviron": 34,
            "headers": 2,
            "argname": 5,
            "queryparams": 1,
            "str": 79,
            "headerstype": 2,
            "method": 1,
            "url": 1,
            "any": 8,
            "responsedata": 1,
            "list [tuple [str,str]]": 2,
            "iterable [bytes]": 2,
            "http.method": 11,
            "http.scheme": 4,
            "http.host": 4,
            "http.port": 4,
            "http.rootpath": 2,
            "http.path": 12,
            "http.querystring": 5,
            "http.queryparams": 12,
            "http.namedqueryparam": 1,
            "http.url": 8,
            "http.headers": 21,
            "http.namedheader": 1,
            "http.request": 6,
            "urlpathargs": 3,
            "wsgi.wsgienviron": 4,
            "wsgi.wsgiresponse": 3,
            "'method'": 1,
            "'scheme'": 1,
            "'host'": 1,
            "'port'": 1,
            "'rootpath'": 1,
            "'path'": 1,
            "'querystring'": 1,
            "'url'": 1,
            "'body'": 1,
            "'headers'": 1,
            "'header'": 1,
            "'queryparams'": 1,
            "'queryparam'": 1,
            "'request'": 1,
            "'response'": 1,
            "'wsgiresponse'": 1,
            "dict": 8,
            "float": 4,
            "schema.number": 2,
            "wsgirequest": 2,
            "session": 6,
            "wsgiresponse": 1,
            "targetdir": 1,
            "layout": 2,
            "force": 1,
            "host": 1,
            "port": 1,
            "approot": 1,
            "dbbackend": 2,
            "http.queryparam": 12,
            "sqlalchemy": 4,
            "body": 1,
            "union [str,list [str]]": 2,
            "list [route]": 1,
            "app": 17,
            "apischema": 4,
            "templates": 8,
            "djangobackend": 4,
            "pipeline": 6,
            "dict [str,any]": 10,
            "callable": 12,
            "set": 4,
            "list [type]": 3,
            "bool": 18,
            "step": 2,
            "settings": 19,
            "routesconfig": 4,
            "route": 4,
            "optional [str]": 2,
            "dict [str,route]": 1,
            "attribute(\n    value=name(\n        value='coreschema',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='schemas',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).schema": 1,
            "link": 3,
            "routing.routesconfig": 3,
            "list [callable]": 1,
            "mapping": 1,
            "click.context": 1,
            "iterator": 1,
            "set [type]": 1,
            "nodebugger": 1,
            "path": 3,
            "list": 2,
            "exception": 1,
            "routerlookup": 1,
            "iterator [route]": 1,
            "app.app": 1,
            "statics": 1,
            "untypedlist": 2,
            "typedlist": 2,
            "schema.boolean": 1,
            "color": 2,
            "termsandconditions": 2,
            "minmaxinteger": 2,
            "multipleinteger": 2,
            "minmaxnumber": 2,
            "multiplenumber": 2,
            "highscore": 2,
            "kittencolor": 2,
            "kittenname": 2,
            "list [kitten]": 2,
            "kitten": 4,
            "minmaxlength": 2,
            "notblank": 2,
            "validpattern": 2,
            "todonote": 2,
            "category": 2,
            "http.mountpath": 1,
            "http.relativepath": 1,
            "http.requestfield": 1,
            "maxlength": 2,
            "schema.integer": 2,
            "schema.string": 1,
            "setting": 1,
            "template": 2,
            "umimessage": 11,
            "umichannels": 2,
            "djangoorm": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [session,none,none]": 2,
            "sqlalchemybackend": 3,
            "console": 1,
            "schema": 4,
            "http.session": 6,
            "http.header": 8,
            "sessionstore": 1,
            "http.responseheaders": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,str]": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [http,none,none]": 1,
            "filewrapper": 2,
            "router": 2,
            "staticfile": 1,
            "jinja2.template": 1,
            "staticfiles": 2,
            "paramname": 4,
            "http.body": 9,
            "injector": 8,
            "handler": 5,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='optional',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [int]": 2,
            "typing.mapping": 1,
            "union [str,dict]": 3,
            "coreapi.link": 2,
            "pathwildcard": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [coreapi]": 1,
            "returnvalue": 1,
            "http.requeststream": 2,
            "typing.any": 1,
            "immutablemultidict": 2,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='tuple',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,dict]": 1,
            "auth": 4,
            "typing.type": 7,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [kitten]": 2,
            "a": 6,
            "loggingcomponent": 2,
            "contextmanagercomponent": 1,
            "keywordargs": 1,
            "typesystem.number": 1,
            "typesystem.integer": 2,
            "typesystem.string": 1,
            "typesystem.boolean": 1,
            "http.requestdata": 8,
            "validatedrequestdata": 2,
            "asgiscope": 10,
            "parameter": 4,
            "asgireceive": 2,
            "inspect.parameter": 8,
            "wsgistartresponse": 1,
            "asgisend": 1,
            "http.pathparams": 2,
            "validatedpathparams": 2,
            "validatedqueryparams": 2,
            "typing.callable": 4,
            "requests.preparedrequest": 1,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,typing]": 1,
            "requests.response": 1,
            "_testclient": 1,
            "list [union [str,int]]": 4,
            "'token'": 1,
            "token": 3,
            "user": 3,
            "attribute(\n    value=name(\n        value='typing',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [user]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 37,
        "typeChanged_dict_var": {},
        "typeChanged_dict_arg": {
            "urlarg -> int": 1,
            "dict [str,str] -> headerstype": 2,
            "urlargs -> urlpathargs": 1,
            "http.namedqueryparam -> http.queryparam": 1,
            "http.namedheader -> http.header": 1,
            "str -> union [str,dict]": 1,
            "schema.path -> path": 1,
            "maxlength -> path": 1,
            "list [route] -> routesconfig": 3,
            "list [routing] -> any": 1,
            "list [routing] -> routing.routesconfig": 2,
            "any -> routing.routesconfig": 1,
            "schema.integer -> schema.string": 2,
            "targetdir -> str": 1,
            "force -> bool": 1,
            "host -> str": 1,
            "port -> int": 1,
            "format -> str": 1,
            "mapping -> typing.mapping": 1,
            "str -> bool": 1,
            "int -> str": 1
        },
        "typeChanged_dict_ret": {
            "link -> dict [str,route]": 1,
            "dict [str,route] -> http.response": 1,
            "dict [str,route] -> optional [str]": 1,
            "http.response -> str": 2,
            "link -> attribute(\n    value=name(\n        value='coreschema',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='schemas',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).schema": 2,
            "link -> optional [str]": 1,
            "none -> bytes": 1,
            "dict -> none": 1,
            "bytes -> str": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 624,
        "functionReturnsType_added": 259,
        "variableType_added": 0,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 586,
        "functionReturnsType_removed": 260,
        "variableType_removed": 0,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 26,
        "functionReturnsType_changed": 11,
        "variableType_changed": 0,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            2.4390243902439024,
            11.428571428571429,
            3.3333333333333335,
            2.0,
            3.79746835443038,
            1.0,
            3.6585365853658534,
            1.6666666666666667,
            0.2801120448179272,
            0.9638554216867471,
            4.605263157894736,
            0.37174721189591076,
            1.3333333333333335,
            9.67741935483871,
            9.67741935483871,
            5.555555555555555,
            5.230769230769231,
            12.5,
            2.1739130434782608,
            11.76470588235294,
            2.380952380952381,
            100.0,
            11.11111111111111,
            51.92307692307693,
            100.0,
            2.1739130434782608,
            12.5,
            4.761904761904762,
            7.8431372549019605,
            12.5,
            2.272727272727273,
            4.081632653061225,
            3.076923076923077,
            4.285714285714286,
            15.384615384615385,
            2.2222222222222223,
            3.8461538461538463,
            9.090909090909092,
            2.7027027027027026,
            6.25,
            4.761904761904762,
            2.197802197802198,
            1.8518518518518516,
            2.0408163265306123,
            3.0303030303030303,
            11.320754716981133,
            7.6923076923076925,
            2.7777777777777777,
            2.7027027027027026,
            5.0,
            66.66666666666666,
            58.82352941176471,
            100.0,
            2.4390243902439024,
            14.285714285714285,
            14.285714285714285,
            1.7857142857142856,
            1.935483870967742,
            1.7045454545454544,
            1.9230769230769231,
            2.127659574468085,
            1.7167381974248928,
            3.79746835443038,
            100.0,
            13.333333333333334,
            8.333333333333332,
            3.571428571428571,
            2.4390243902439024,
            20.0,
            3.061224489795918,
            3.3333333333333335,
            4.166666666666666,
            50.0,
            33.33333333333333,
            33.33333333333333,
            50.0,
            2.631578947368421,
            100.0,
            4.132231404958678,
            2.4390243902439024,
            3.9215686274509802,
            4.545454545454546,
            6.666666666666667,
            2.666666666666667,
            5.128205128205128,
            4.25531914893617,
            1.574803149606299,
            7.4074074074074066,
            1.4925373134328357,
            4.081632653061225,
            6.896551724137931,
            3.0303030303030303,
            1.9607843137254901,
            3.8461538461538463,
            14.285714285714285,
            50.0,
            7.142857142857142,
            3.0303030303030303,
            7.142857142857142,
            7.142857142857142,
            53.333333333333336,
            60.0,
            1.0101010101010102,
            6.25,
            7.142857142857142,
            2.857142857142857,
            2.0408163265306123,
            53.333333333333336,
            60.0,
            7.142857142857142,
            7.142857142857142,
            10.526315789473683,
            4.3478260869565215,
            13.333333333333334,
            2.7777777777777777,
            9.049773755656108,
            9.049773755656108,
            10.526315789473683,
            4.3478260869565215,
            13.333333333333334,
            2.7777777777777777,
            9.00900900900901,
            9.00900900900901,
            2.898550724637681,
            2.941176470588235,
            22.22222222222222,
            1.5151515151515151,
            4.545454545454546,
            100.0,
            66.66666666666666,
            10.526315789473683,
            4.761904761904762,
            7.6923076923076925,
            2.43358721902285,
            2.687904430064709,
            0.0531575590048905,
            4.651162790697675,
            25.0,
            3.257328990228013,
            5.555555555555555,
            0.7692307692307693,
            17.391304347826086,
            5.691056910569105,
            3.508771929824561,
            3.004291845493562,
            9.433962264150944,
            1.9607843137254901,
            4.10958904109589,
            5.454545454545454,
            2.7027027027027026,
            6.25,
            1.0977337110481586,
            1.5408320493066257,
            9.75609756097561,
            1.4184397163120568,
            2.857142857142857,
            6.382978723404255,
            1.098901098901099,
            1.7241379310344827,
            3.9215686274509802,
            0.6369426751592357,
            0.9523809523809524,
            2.7027027027027026,
            0.7874015748031495,
            3.4482758620689653,
            0.6784260515603799,
            7.142857142857142,
            9.433962264150944,
            0.02540435261241426,
            0.8389492504469811,
            0.09633911368015415,
            0.03156565656565657
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2017",
                "768",
                "5490",
                "1766",
                "434",
                "31",
                "419",
                "1035",
                "92",
                "0",
                "0",
                "6858"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/encode/apistar": 1766
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 33,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            3.74
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/encode/apistar": 33
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2017": 706,
            "2018": 176,
            "2019": 1
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2017": 98,
            "2018": 13,
            "2019": 1
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2017": 509,
            "2018": 129,
            "2019": 8
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                322,
                293,
                171,
                277,
                0,
                846
            ],
            "2018": [
                207,
                784,
                58,
                428,
                0,
                1115
            ],
            "2019": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2020": [
                0,
                0,
                0,
                0,
                0,
                0
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "encode-apistar": 0,
                "tom@tomchristie.com": 72,
                "ciplazar@users.noreply.github.com": 2,
                "andrew@mysticcoders.com": 1,
                "max@maxhurl.co.uk": 4,
                "pete@weargoggles.co.uk": 1,
                "kontakt@maxi-muth.de": 4,
                "sbolgert@gmail.com": 1,
                "anze@pecar.me": 2,
                "tadhg@tadhg.com": 5,
                "nir@galon.io": 4,
                "dorian.pula@amber-penguin-software.ca": 2,
                "jesse@jr4consulting.com": 2,
                "me@netoxico.com": 2,
                "benno@jeamland.net": 1,
                "aaron.devore@gmail.com": 1,
                "lowell.abbott@gmail.com": 1,
                "ryan.da.baker@gmail.com": 1,
                "fvoron@gmail.com": 1,
                "sb@ryansb.com": 1,
                "drpoggi@users.noreply.github.com": 1,
                "popa.bogdanp@gmail.com": 2,
                "anlutro@gmail.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "encode-apistar": 0,
                "tom@tomchristie.com": 496,
                "hjwp2@cantab.net": 1,
                "jair.henrique@gmail.com": 13,
                "iljabauer@gmail.com": 1,
                "sylwester.brzeczkowski@10clouds.com": 1,
                "cclauss@bluewin.ch": 3,
                "andrew@mysticcoders.com": 9,
                "ciplazar@users.noreply.github.com": 6,
                "jpadilla@webapplicate.com": 1,
                "maziar@rokoko.com": 1,
                "g2h.horde@gmail.com": 1,
                "radorado@hackbulgaria.com": 1,
                "max@maxhurl.co.uk": 21,
                "pete@weargoggles.co.uk": 1,
                "kontakt@maxi-muth.de": 18,
                "sroychowdhury@gmail.com": 2,
                "raphael@hackebrot.de": 5,
                "brian@brosner.com": 1,
                "thimslugga@users.noreply.github.com": 5,
                "sbolgert@gmail.com": 2,
                "nir@galon.io": 38,
                "anze@pecar.me": 6,
                "maackle.d@gmail.com": 2,
                "kwidman@23andme.com": 2,
                "brian@brianschrader.com": 2,
                "tadhg@tadhg.com": 5,
                "dorian.pula@amber-penguin-software.ca": 22,
                "vickumar@gmail.com": 5,
                "jesse@jr4consulting.com": 2,
                "me@netoxico.com": 5,
                "benno@jeamland.net": 2,
                "aaron.devore@gmail.com": 3,
                "lowell.abbott@gmail.com": 1,
                "dan@technigami.com": 1,
                "ewjoachim@gmail.com": 2,
                "souravbasu17@gmail.com": 1,
                "bameda@dbarragan.com": 1,
                "omer.drow@gmail.com": 2,
                "ryan.da.baker@gmail.com": 1,
                "marcosfede@gmail.com": 1,
                "fvoron@gmail.com": 1,
                "audiolion@users.noreply.github.com": 1,
                "globophobe@gmail.com": 1,
                "sb@ryansb.com": 1,
                "benjamin.kircher@gmail.com": 1,
                "martin.bruno.mail@gmail.com": 1,
                "jlowin@users.noreply.github.com": 1,
                "drpoggi@users.noreply.github.com": 2,
                "pringlewood@users.noreply.github.com": 1,
                "lucaslobosque@gmail.com": 1,
                "nieh.erik@gmail.com": 1,
                "michael.jung@terreon.de": 1,
                "galerajimenez@gmail.com": 1,
                "pavel@holvi.com": 1,
                "terji78@gmail.com": 1,
                "marco@rougeth.com": 3,
                "grangerp@users.noreply.github.com": 1,
                "martinjohnpeck@gmail.com": 1,
                "cconnon11@gmail.com": 1,
                "yunti9-mail@yahoo.com": 1,
                "243083df@dispostable.com": 1,
                "ebube.rc@gmail.com": 1,
                "michael-k@users.noreply.github.com": 1,
                "aart@goossens.me": 2,
                "reuben.helms@gmail.com": 3,
                "354868+imanhodjaev@users.noreply.github.com": 1,
                "pslacerda@users.noreply.github.com": 2,
                "paw.zubr@gmail.com": 1,
                "alpower@users.noreply.github.com": 10,
                "popa.bogdanp@gmail.com": 2,
                "perdy.hh@gmail.com": 2,
                "ijkl@netc.fr": 1,
                "aliaksei.homza@gmail.com": 1,
                "akalipetis@gmail.com": 2,
                "chenl@users.noreply.github.com": 1,
                "perdy@perdy.io": 2,
                "harshad@sharma.io": 1,
                "446077695@qq.com": 1,
                "upy@users.noreply.github.com": 2,
                "dani.gonzalez@infantium.com": 2,
                "jonatas.baldin@gmail.com": 1,
                "tuzepoito@gmail.com": 1,
                "aachurin@gmail.com": 1,
                "anlutro@gmail.com": 1,
                "ak@alkov.pro": 2,
                "uqsazeez@uq.edu.au": 1,
                "karansthr@hotmail.com": 2,
                "samhuang91@gmail.com": 1,
                "lucidiot@protonmail.com": 1,
                "tim.gates@iress.com": 1,
                "gliptak@gmail.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]