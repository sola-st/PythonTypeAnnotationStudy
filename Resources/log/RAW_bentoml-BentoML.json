[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 1472,
        "commit_year_dict": {
            "2019": 412,
            "2020": 542,
            "2021": 518
        },
        "loc_year_edit": {
            "2019": 106843,
            "2020": 349788,
            "2021": 648905
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 181,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 5348,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2020": 583,
            "2021": 2330
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2020": 240,
            "2021": 1953
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2020": 106,
            "2021": 136
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 2913,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "bytes": 44,
            "iterable [simplerequest]": 24,
            "iterable [simpleresponse]": 26,
            "callable": 26,
            "str": 743,
            "tuple": 3,
            "int": 232,
            "multiprocessing.lock": 2,
            "request": 6,
            "flask.request": 9,
            "flask.response": 2,
            "iterable [\"pd.dataframe\"]": 2,
            "iterable [str]": 7,
            "pd.dataframe": 33,
            "list [str]": 97,
            "dataframestate": 14,
            "list": 14,
            "dict": 51,
            "iterator [str]": 8,
            "func.httprequest": 1,
            "func.context": 1,
            "func.httpresponse": 1,
            "bool": 166,
            "bytesio": 1,
            "bentoserviceartifact": 12,
            "bentoserviceenv": 60,
            "mlmodel": 3,
            "float": 8,
            "pytorchmodel": 1,
            "attribute(\n    value=name(\n        value='ct',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='models',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).mlmodel": 1,
            "list [bentoserviceartifact]": 14,
            "baseinputadapter": 11,
            "baseoutputadapter": 11,
            "artifactcollection": 3,
            "iterable [httprequest]": 6,
            "iterable [awslambdaevent]": 5,
            "tuple [str]": 21,
            "iterable [annoimgtask]": 2,
            "tuple [annoimgtask]": 2,
            "iterator [annoimgtask]": 1,
            "apifuncargs": 18,
            "tuple [awslambdaevent]": 1,
            "inferencetask": 15,
            "iterable [inferencetask]": 16,
            "argparse.argumentparser": 2,
            "sequence [str]": 13,
            "iterator [tuple [bytes]]": 2,
            "iterator [bytes]": 1,
            "apifuncreturnvalue": 6,
            "tuple [inferencecontext]": 3,
            "iterable [inferenceresult]": 8,
            "type [baseoutputadapter]": 2,
            "iterable [httpresponse]": 1,
            "iterable [inferencetask [bytes]]": 4,
            "tuple [inferencetask [bytes]]": 2,
            "iterator [inferencetask [bytes]]": 2,
            "iterator [httpresponse]": 1,
            "bentoservice": 1,
            "inferenceapi": 2,
            "tuple [inferenceresult]": 2,
            "iterator [inferencetask]": 6,
            "tuple [tuple [str,str]]": 1,
            "optional [str]": 81,
            "optional [int]": 31,
            "optional [cimultidict]": 2,
            "optional [dict]": 10,
            "optional [tuple [str]]": 1,
            "input": 2,
            "inferencecontext": 4,
            "output": 2,
            "iterable ['inferenceresult']": 2,
            "iterator ['inferenceresult']": 2,
            "message": 4,
            "object": 2,
            "list [bytes]": 3,
            "iterable [inferencetask [binaryio]]": 2,
            "iterable [multifiletask]": 1,
            "list [multifiletask]": 1,
            "tuple [multifiletask]": 1,
            "iterator [multifiletask]": 2,
            "sequence [tuple [str,str]]": 4,
            "binaryio": 2,
            "list [multiimgtask]": 1,
            "iterable [multiimgtask]": 2,
            "optional [inferenceresult]": 3,
            "httprequest": 20,
            "awslambdaevent": 15,
            "iterable": 5,
            "sequence [inferencetask]": 16,
            "iterator [tuple [output,inferencetask]]": 2,
            "tuple [inferencetask]": 2,
            "sequence [inferenceresult [str]]": 4,
            "sequence [httprequest]": 12,
            "mapping [str,int]": 2,
            "sequence [multiimgtask]": 1,
            "mapping [str,object]": 4,
            "inferenceresult": 8,
            "parsedheaders": 1,
            "optional [sequence [str]]": 2,
            "list [inferenceapi]": 5,
            "sequence [inferenceresult]": 4,
            "requirement": 3,
            "iterable [inferencetask [str]]": 5,
            "inferencetask [str]": 4,
            "iterator [inferencetask [str]]": 8,
            "optional [binaryio]": 3,
            "optional [bytes]": 3,
            "mapping [str,str]": 2,
            "batchapifuncargs": 4,
            "iterator [apifuncargs]": 2,
            "union [str,type,sequence]": 3,
            "dict [str,zipimport]": 4,
            "tempfile.temporarydirectory": 3,
            "multiprocessing.event": 3,
            "subprocess.process": 3,
            "optional [mapping [str,any]]": 2,
            "np.ndarray": 8,
            "list [binaryio]": 2,
            "bentomlconfiguration": 4,
            "optional [multiprocessing]": 4,
            "baserepository": 5,
            "db": 2,
            "grpc.servicercontext": 13,
            "tuple [methodname,bool]": 3,
            "union [str,dict [str,specialcasefunction]]": 4,
            "mockrequest": 6,
            "iterable [mockrequest]": 4,
            "optional [list]": 2,
            "optional [bool]": 15,
            "grpc.server": 3,
            "mockresponse": 4,
            "iterable [mockresponse]": 4,
            "promserverinterceptor": 2,
            "servicelatencyinterceptor": 2,
            "optional [\"resourceoptions\"]": 4,
            "\"application\"": 5,
            "httpresponse": 12,
            "union [httpheaders,dict,tuple,list]": 2,
            "callable [...,inferenceapi]": 3,
            "optional [\"baseconnector\"]": 7,
            "optional [\"clientsession\"]": 6,
            "\"baseconnector\"": 6,
            "\"request\"": 17,
            "\"bentoservicemetadata\"": 5,
            "\"yataiclient\"": 9,
            "\"bentoservice\"": 10,
            "none": 52,
            "\"savedbundleconfig\"": 3,
            "optional [\"yataistub\"]": 3,
            "\"bentorepositoryapiclient\"": 3,
            "\"deploymentapiclient\"": 3,
            "\"yataistub\"": 3,
            "\"bento\"": 9,
            "\"bentouri\"": 12,
            "list [\"bento\"]": 3,
            "dict [str,str]": 6,
            "optional [dict [str,str]]": 7,
            "iterator": 5,
            "provider [str]": 6,
            "provider [int]": 4,
            "\"marshalapp\"": 5,
            "optional [\"lock\"]": 3,
            "noreturn": 8,
            "\"modelapp\"": 2,
            "\"inferenceapi\"": 3,
            "path": 5,
            "re.pattern": 1,
            "mutablemapping": 3,
            "environment": 1,
            "list [tuple [str,str]]": 3,
            "logging.logrecord": 1,
            "union [mutablemapping,list]": 1,
            "pathlib.path": 1,
            "union [dict,mutablemapping]": 1,
            "union [dict,list,str]": 1,
            "metadataspecvalidator": 1,
            "iterable [union [any,str]]": 1,
            "generator": 1,
            "any": 10,
            "tuple [str,...]": 1,
            "iterator [tuple [filelike]]": 1,
            "iterator [filelike]": 1,
            "iterable [inferencetask [filelike]]": 1,
            "inferencetask [filelike]": 2,
            "iterator [inferencetask [filelike]]": 2,
            "sequence [multifiletask]": 1,
            "multifiletask": 2,
            "nonblocksema": 4,
            "sequence [httpresponse]": 8,
            "httpheaders": 4,
            "optional [output]": 1,
            "iterable ['inferencetask']": 1,
            "optional [input]": 1,
            "\"func.httprequest\"": 1,
            "\"func.context\"": 1,
            "\"func.httpresponse\"": 1,
            "modelartifact": 4,
            "list [modelartifact]": 2,
            "dict [str,list [str]]": 1,
            "reader": 2,
            "easyocr.reader": 2,
            "\"evalml.pipelines.pipelinebase\"": 2,
            "\"evalml.pipelines.binaryclassificationpipeline\"": 2,
            "\"learner\"": 4,
            "\"pd.dataframe\"": 4,
            "\"mxnet.gluon.block\"": 2,
            "\"mxnet.gluon.nn.hybridsequential\"": 2,
            "\"lightgbm.booster\"": 4,
            "\"skn.kneighborsclassifier\"": 1,
            "onnxruntime.inferencesession": 3,
            "\"onnxruntime.inferencesession\"": 12,
            "executionsession": 4,
            "pl.lightningmodule": 6,
            "nn.module": 6,
            "st": 2,
            "\"typespec\"": 1,
            "t.any": 17,
            "\"holtwintersresults\"": 2,
            "mt": 1,
            "modelwithdata": 2,
            "attribute(\n    value=name(\n        value='keras',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='models',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).model": 2,
            "np.array": 2,
            "t": 4,
            "v": 3,
            "optional [type [t]]": 3,
            "optional [t]": 3,
            "\"cached_property\"": 1,
            "union [\"cached_property\",v]": 1,
            "dict [union [str,tuple],t]": 2,
            "callable [...,iterator [t]]": 1,
            "union [str,tuple]": 1,
            "callable [...,_generatorcontextmanager [t]]": 1,
            "iterator [t]": 1,
            "iterator [int]": 2,
            "tuple [int,str]": 1,
            "union [type [baseexception],tuple [type [baseexception],...]]": 5,
            "callable [...,t]": 1,
            "callable [...,optional [t]]": 1,
            "yataiclient": 1,
            "tuple [str,str]": 1,
            "union [int,str]": 2,
            "union [none,str,set [str]]": 1,
            "bentorepositoryapiclient": 1,
            "deploymentapiclient": 1,
            "yataistub": 1,
            "tuple [optional [str],str]": 1,
            "_f": 3,
            "iodescriptor": 12,
            "optional [list [api]]": 1,
            "optional [list [model]]": 1,
            "optional [environment]": 1,
            "storagetype": 1,
            "metadata": 2,
            "uri": 2,
            "optional [list [metadata]]": 1,
            "types.moduletype": 1,
            "iopyobj": 2,
            "union [bytes,filelike]": 4,
            "multipartio": 2,
            "tuple [iodescriptor,...]": 1,
            "dict [str,inferenceapi]": 3,
            "list [runner]": 1,
            "optional [list [runner]]": 2,
            "pathtype": 11,
            "\"service\"": 4,
            "union [np,str,none]": 1,
            "optional [tuple]": 2,
            "\"np.ndarray\"": 1,
            "optional [list [str]]": 7,
            "bentotag": 6,
            "list [bentotag]": 1,
            "dict [str,iodescriptor]": 1,
            "dict [str,runner]": 2,
            "\"_t\"": 2,
            "union [int,float,str]": 1,
            "dict [union [str,tuple],_t]": 1,
            "optional [_t]": 2,
            "callable [...,_t]": 1,
            "callable [...,optional [_t]]": 1,
            "service": 2,
            "optional [dict [str,any]]": 3,
            "json.jsonencoder": 1,
            "\"path\"": 6,
            "\"bentotag\"": 1,
            "resourcequota": 2,
            "batchoptions": 2,
            "union [runner,simplerunner]": 2,
            "\"transporter\"": 1,
            "dict [str,int]": 2,
            "runnerclient": 1,
            "type": 4,
            "params": 1,
            "signature": 1,
            "\"runnerimpl\"": 1,
            "union [none,sequence [str],dict [str,float]]": 1,
            "transporter": 1,
            "\"serviceapp\"": 1,
            "\"starlette\"": 5,
            "\"runner\"": 1,
            "\"response\"": 7,
            "singletype": 1,
            "batchtype": 2,
            "sequence [indextype]": 1,
            "union [sequence [indextype],none]": 1,
            "payloadtype": 2,
            "indextype": 1,
            "iterator [singletype]": 1,
            "iterator [union [singletype,batchtype]]": 1,
            "union [iterator [union [singletype,batchtype]],iterator [singletype]]": 1,
            "\"container\"": 1,
            "\"modelstore\"": 19,
            "tf.tensor": 4,
            "keras.model": 3,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [autotokenizer,automodelforcausallm]]": 1,
            "\"pl.lightningmodule\"": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,\"modelinfo\"]": 7,
            "\"modelinfo\"": 7,
            "attribute(\n    value=name(\n        value='cbt',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='core',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).catboostclassifier": 1,
            "response": 4,
            "sequence [_dtypelikenested]": 1,
            "sequence [int]": 1,
            "sequence [any]": 1,
            "_dtype_co": 1,
            "\"np.ndarray[any, _dtype_co]\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"baseroute\"]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [\"middleware\"]": 2,
            "\"tracer\"": 1,
            "\"prometheusclient\"": 1,
            "t.dict": 6,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,t [t,t,\"response\"]]": 2,
            "t.callable": 4,
            "jsonserializable": 4,
            "\"lgb.lgbmclassifier\"": 1,
            "tag": 1,
            "fs": 1,
            "datetime": 6,
            "torch.tensor": 1,
            "bentomlexception": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='generator',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,none,none]": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 1,
            "\"str\"": 1,
            "\"bentostore\"": 1,
            "list [yataiclientcontext]": 1,
            "yataiclientconfig": 4,
            "yataiclientcontext": 3,
            "yatairestapiclient": 2,
            "optional [datetime]": 8,
            "type [t]": 1,
            "resourcetype": 1,
            "list [organizationschema]": 1,
            "dict [str,bentoapischema]": 1,
            "bentoimagebuildstatus": 1,
            "bentouploadstatus": 1,
            "bentomanifestschema": 2,
            "optional [bentoschema]": 2,
            "list [labelitemschema]": 2,
            "optional [bentouploadstatus]": 1,
            "dict [str,any]": 3,
            "modelimagebuildstatus": 1,
            "modeluploadstatus": 1,
            "modelmanifestschema": 2,
            "optional [modelschema]": 2,
            "optional [modeluploadstatus]": 1,
            "requests.response": 2,
            "createbentorepositoryschema": 1,
            "createbentoschema": 1,
            "finishuploadbentoschema": 1,
            "createmodelrepositoryschema": 1,
            "createmodelschema": 1,
            "finishuploadmodelschema": 1,
            "optional [userschema]": 1,
            "optional [organizationschema]": 1,
            "optional [bentorepositoryschema]": 1,
            "bentorepositoryschema": 1,
            "bentoschema": 5,
            "optional [modelrepositoryschema]": 1,
            "modelrepositoryschema": 1,
            "modelschema": 5,
            "pytest.fixturerequest": 1,
            "\"pytest.temppathfactory\"": 1,
            "modelstore": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 2193,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "callable": 17,
            "multiprocessing.lock": 2,
            "flask.request": 8,
            "flask.response": 1,
            "iterable [simpleresponse]": 11,
            "iterable [simplerequest]": 14,
            "request": 7,
            "iterable [\"pd.dataframe\"]": 1,
            "iterable [str]": 8,
            "dataframestate": 14,
            "list [str]": 91,
            "pd.dataframe": 24,
            "tuple": 2,
            "str": 533,
            "int": 195,
            "iterable [httprequest]": 14,
            "iterable [awslambdaevent]": 4,
            "tuple [str]": 16,
            "tuple [annoimgtask]": 2,
            "iterator [annoimgtask]": 1,
            "apifuncargs": 22,
            "iterable [httpresponse]": 2,
            "bytesio": 1,
            "iterable [inferencetask]": 12,
            "input": 1,
            "inferencecontext": 4,
            "output": 1,
            "tuple [awslambdaevent]": 1,
            "tuple [inferencecontext]": 3,
            "sequence [tuple [str,str]]": 4,
            "iterator [str]": 5,
            "iterable [inferenceresult]": 8,
            "optional [str]": 61,
            "optional [sequence [str]]": 3,
            "optional [inferenceresult]": 3,
            "bentoserviceenv": 47,
            "bentoserviceartifact": 12,
            "list [bentoserviceartifact]": 13,
            "baseinputadapter": 11,
            "baseoutputadapter": 11,
            "sequence [httprequest]": 14,
            "sequence [str]": 17,
            "bool": 126,
            "list [inferenceapi]": 6,
            "artifactcollection": 3,
            "iterator [inferencetask]": 8,
            "sequence [inferenceresult]": 6,
            "httprequest": 14,
            "awslambdaevent": 16,
            "inferencetask [bytes]": 1,
            "iterator [inferencetask [bytes]]": 1,
            "binaryio": 2,
            "optional [cimultidict]": 1,
            "optional [bool]": 21,
            "inferencetask": 17,
            "optional [binaryio]": 2,
            "multiimgtask": 1,
            "sequence [multiimgtask]": 1,
            "iterator [tuple [filelike]]": 3,
            "sequence [inferencetask]": 16,
            "tempfile.temporarydirectory": 3,
            "multiprocessing.event": 3,
            "subprocess.process": 3,
            "bentomlconfiguration": 4,
            "requirement": 3,
            "asyncio.future": 1,
            "optional [\"baseconnector\"]": 7,
            "optional [\"clientsession\"]": 6,
            "optional [int]": 35,
            "optional [multiprocessing]": 4,
            "bentoservice": 1,
            "inferenceapi": 1,
            "grpc.server": 3,
            "iterable [annoimgtask]": 2,
            "tuple [str,...]": 2,
            "batchapifuncargs": 4,
            "argparse.argumentparser": 2,
            "iterator [apifuncargs]": 2,
            "iterator [filelike]": 2,
            "iterable": 3,
            "apifuncreturnvalue": 6,
            "inferenceresult": 8,
            "iterator [tuple [output,inferencetask]]": 2,
            "httpresponse": 8,
            "mapping [str,object]": 4,
            "iterable [inferencetask [str]]": 8,
            "iterator [inferencetask [str]]": 8,
            "sequence [inferenceresult [str]]": 6,
            "tuple [inferencetask]": 2,
            "type [baseoutputadapter]": 2,
            "tuple [inferenceresult]": 2,
            "iterable [inferencetask [filelike]]": 2,
            "inferencetask [filelike]": 4,
            "iterator [inferencetask [filelike]]": 4,
            "iterable [inferencetask [binaryio]]": 2,
            "sequence [multifiletask]": 2,
            "multifiletask": 4,
            "iterator [multifiletask]": 2,
            "iterable [multiimgtask]": 2,
            "inferencetask [str]": 4,
            "list": 8,
            "\"bentoservicemetadata\"": 5,
            "\"yataiclient\"": 9,
            "provider [str]": 3,
            "provider [int]": 2,
            "dict": 28,
            "\"marshalapp\"": 4,
            "nonblocksema": 4,
            "optional [\"resourceoptions\"]": 4,
            "\"request\"": 10,
            "\"baseconnector\"": 6,
            "\"application\"": 5,
            "bytes": 44,
            "sequence [httpresponse]": 10,
            "optional [\"lock\"]": 3,
            "none": 25,
            "\"bentoservice\"": 6,
            "\"savedbundleconfig\"": 3,
            "dict [str,zipimport]": 3,
            "noreturn": 8,
            "\"modelapp\"": 2,
            "\"inferenceapi\"": 2,
            "optional [bytes]": 3,
            "mapping [str,str]": 2,
            "httpheaders": 8,
            "union [httpheaders,dict,tuple,list]": 2,
            "optional [output]": 2,
            "optional [dict]": 10,
            "iterable ['inferencetask']": 1,
            "iterable ['inferenceresult']": 1,
            "optional [input]": 2,
            "optional [mapping [str,any]]": 2,
            "iterator ['inferenceresult']": 1,
            "message": 4,
            "object": 2,
            "mapping [str,int]": 2,
            "union [str,type,sequence]": 2,
            "optional [\"yataistub\"]": 3,
            "\"bentorepositoryapiclient\"": 3,
            "\"deploymentapiclient\"": 3,
            "\"yataistub\"": 4,
            "\"bento\"": 9,
            "dict [str,str]": 3,
            "\"bentouri\"": 12,
            "list [\"bento\"]": 3,
            "\"func.httprequest\"": 2,
            "\"func.context\"": 2,
            "\"func.httpresponse\"": 2,
            "optional [dict [str,str]]": 4,
            "grpc.servicercontext": 13,
            "baserepository": 5,
            "iterator": 3,
            "tuple [methodname,bool]": 3,
            "db": 2,
            "list [bentserviceartifact]": 1,
            "basemodelartifact": 3,
            "list [basemodelartifact]": 2,
            "callable [...,inferenceapi]": 3,
            "list [bytes]": 3,
            "mlmodel": 3,
            "float": 2,
            "np.ndarray": 3,
            "list [binaryio]": 2,
            "union [str,dict [str,specialcasefunction]]": 4,
            "mockrequest": 6,
            "iterable [mockrequest]": 4,
            "optional [list]": 2,
            "mockresponse": 4,
            "iterable [mockresponse]": 4,
            "promserverinterceptor": 2,
            "servicelatencyinterceptor": 2,
            "pytorchmodel": 1,
            "attribute(\n    value=name(\n        value='ct',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='models',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).mlmodel": 1,
            "\"pd.dataframe\"": 2,
            "\"skn.kneighborsclassifier\"": 1,
            "onnxruntime.inferencesession": 2,
            "\"onnxruntime.inferencesession\"": 9,
            "executionsession": 3,
            "modelartifact": 1,
            "mt": 1,
            "dict [union [str,tuple],t]": 2,
            "_f": 2,
            "bentorepositoryapiclient": 1,
            "deploymentapiclient": 1,
            "yataiclient": 1,
            "\"service\"": 7,
            "tuple [optional [str],str]": 1,
            "union [type [baseexception],tuple [type [baseexception],...]]": 3,
            "any": 6,
            "tuple [int,str]": 2,
            "dict [str,iodescriptor]": 1,
            "dict [str,inferenceapi]": 2,
            "list [runner]": 1,
            "optional [t]": 2,
            "callable [...,t]": 1,
            "callable [...,optional [t]]": 1,
            "pathtype": 9,
            "bentotag": 7,
            "list [bentotag]": 1,
            "iterable [\"inferencetask\"]": 1,
            "iterable [\"inferenceresult\"]": 1,
            "iterator [\"inferenceresult\"]": 1,
            "iodescriptor": 6,
            "optional [list [api]]": 1,
            "optional [list [model]]": 1,
            "optional [environment]": 1,
            "storagetype": 1,
            "metadata": 2,
            "uri": 2,
            "optional [list [metadata]]": 1,
            "callable [...,_v]": 1,
            "_t": 2,
            "_v": 3,
            "optional [type [_t]]": 3,
            "optional [_t]": 1,
            "dict [union [str,tuple],_t]": 1,
            "callable [...,iterator [_t]]": 1,
            "union [str,tuple]": 1,
            "\"cached_property\"": 1,
            "union [\"cached_property\",_v]": 1,
            "callable [...,\"_generatorcontextmanager[_t]\"]": 1,
            "iterator [_t]": 1,
            "tuple [str,str]": 1,
            "\"_t\"": 1,
            "dict [str,runner]": 1,
            "optional [list [runner]]": 1,
            "optional [list [str]]": 4,
            "optional [dict [str,any]]": 2,
            "type": 1,
            "np.array": 1,
            "tf.tensor": 2,
            "reader": 1,
            "easyocr.reader": 1,
            "\"evalml.pipelines.pipelinebase\"": 1,
            "\"evalml.pipelines.binaryclassificationpipeline\"": 1,
            "\"learner\"": 2,
            "\"mxnet.gluon.block\"": 1,
            "\"mxnet.gluon.nn.hybridsequential\"": 1,
            "keras.model": 4,
            "\"lightgbm.booster\"": 3,
            "pl.lightningmodule": 3,
            "nn.module": 3,
            "t.any": 1,
            "\"holtwintersresults\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [autotokenizer,automodelforcausallm]]": 2,
            "modelwithdata": 1,
            "attribute(\n    value=name(\n        value='keras',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='models',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).model": 1,
            "\"transporter\"": 1,
            "dict [str,int]": 2,
            "singletype": 1,
            "batchtype": 2,
            "sequence [indextype]": 1,
            "union [sequence [indextype],none]": 1,
            "payloadtype": 2,
            "indextype": 1,
            "iterator [singletype]": 1,
            "iterator [union [singletype,batchtype]]": 1,
            "union [iterator [union [singletype,batchtype]],iterator [singletype]]": 1,
            "\"container\"": 1,
            "response": 2,
            "\"serviceapp\"": 1,
            "union [none,str,set [str]]": 1,
            "\"starlette\"": 1,
            "\"path\"": 1,
            "union [bytes,filelike]": 2,
            "\"response\"": 1,
            "t.dict": 3,
            "t.callable": 4,
            "\"modelstore\"": 2,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,\"modelinfo\"]": 1,
            "\"modelinfo\"": 1,
            "list [tuple [str,str]]": 1,
            "sequence [_dtypelikenested]": 1,
            "sequence [int]": 1,
            "sequence [any]": 1,
            "_dtype_co": 1,
            "\"np.ndarray[any, _dtype_co]\"": 1,
            "runnerclient": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 242,
        "typeChanged_dict_var": {
            "tuple [tuple [str,str]] -> sequence [tuple [str,str]]": 1,
            "optional [tuple [str]] -> optional [sequence [str]]": 1,
            "inferenceapi -> list [inferenceapi]": 1,
            "str -> bytes": 1,
            "optional [cimultidict] -> parsedheaders": 1,
            "bool -> optional [bool]": 1,
            "sequence [tuple [str,str]] -> httpheaders": 1,
            "tuple -> httpheaders": 1,
            "parsedheaders -> httpheaders": 2,
            "optional [str] -> str": 1,
            "output -> optional [output]": 1,
            "optional [int] -> int": 1,
            "input -> optional [input]": 1,
            "bytes -> optional [bytes]": 1,
            "list [bentoserviceartifact] -> list [bentserviceartifact]": 1,
            "v -> _v": 1,
            "pl.lightningmodule -> \"pl.lightningmodule\"": 2,
            "\"mxnet.gluon.block\" -> gluon.block": 1
        },
        "typeChanged_dict_arg": {
            "callable -> nonblocksema": 1,
            "list [str] -> iterator [str]": 1,
            "iterable [simplerequest] -> iterable [httprequest]": 9,
            "iterable [simpleresponse] -> iterable [httpresponse]": 1,
            "iterable [inferencetask [bytes]] -> iterable [inferencetask [binaryio]]": 1,
            "tuple [str] -> sequence [str]": 3,
            "iterable [multifiletask] -> sequence [multifiletask]": 1,
            "iterable [inferencetask] -> iterable ['inferencetask']": 1,
            "tuple [str] -> tuple [str,...]": 2,
            "iterable [httprequest] -> sequence [httprequest]": 1,
            "iterable [httpresponse] -> sequence [httpresponse]": 1,
            "iterable [\"pd.dataframe\"] -> iterable [bytes]": 1,
            "tuple [str,...] -> sequence [str]": 1,
            "iterable [inferencetask [binaryio]] -> iterable [inferencetask [filelike]]": 1,
            "iterable [inferencetask [bytes]] -> iterable [inferencetask [str]]": 3,
            "iterable [bytes] -> iterable [str]": 1,
            "int -> optional [int]": 10,
            "bool -> optional [bool]": 5,
            "optional [int] -> int": 1,
            "flask.request -> request": 1,
            "callable -> callable": 1,
            "request -> httprequest": 1,
            "str -> optional [str]": 7,
            "func.httprequest -> \"func.httprequest\"": 1,
            "func.context -> \"func.context\"": 1,
            "modelartifact -> basemodelartifact": 2,
            "list [modelartifact] -> list [basemodelartifact]": 1,
            "iterable ['inferencetask'] -> iterable [\"inferencetask\"]": 1,
            "iterable ['inferenceresult'] -> iterable [\"inferenceresult\"]": 1,
            "\"bentoservice\" -> \"service\"": 3,
            "callable -> callable [...,v]": 1,
            "np.ndarray -> \"np.ndarray\"": 1,
            "pd.dataframe -> \"pd.dataframe\"": 1,
            "tuple [iodescriptor,...] -> dict [str,iodescriptor]": 1,
            "union [np,str,none] -> union [\"np.dtype\",str,none]": 1,
            "callable [...,v] -> callable [...,_v]": 1,
            "t -> _t": 2,
            "v -> _v": 1,
            "optional [type [t]] -> optional [type [_t]]": 3,
            "optional [t] -> optional [_t]": 1,
            "callable [...,iterator [t]] -> callable [...,iterator [_t]]": 1,
            "httprequest -> request": 6,
            "\"pydantic.main.basemodel\" -> \"pydantic.basemodel\"": 1,
            "str -> t.any": 1,
            "iopyobj -> t.any": 1,
            "callable -> t.callable": 1,
            "str -> bentotag": 1,
            "t.any -> iopyobj": 1,
            "t.dict -> jsonserializable": 1
        },
        "typeChanged_dict_ret": {
            "callable -> asyncio.future": 1,
            "iterable [simpleresponse] -> iterable [httpresponse]": 10,
            "flask.response -> tuple [inferenceresult]": 1,
            "iterable [simpleresponse] -> tuple [inferenceresult]": 1,
            "iterable [simpleresponse] -> list [inferencetask [binaryio]]": 1,
            "iterable [simpleresponse] -> tuple [inferencetask [bytes]]": 1,
            "iterable [simpleresponse] -> tuple [inferenceresult [str]]": 1,
            "iterable [simplerequest] -> iterable [httprequest]": 1,
            "tuple [inferencetask [bytes]] -> tuple [inferencetask [binaryio]]": 1,
            "iterator [inferencetask [bytes]] -> iterator [inferencetask [binaryio]]": 1,
            "iterator [bytes] -> iterator [binaryio]": 1,
            "iterable [httpresponse] -> apifuncargs": 4,
            "iterator [tuple [bytes]] -> iterator [tuple [binaryio]]": 2,
            "tuple [inferencetask [bytes]] -> iterator [inferencetask [bytes]]": 1,
            "str -> cimultidict": 1,
            "tuple [multifiletask] -> sequence [multifiletask]": 1,
            "tuple [inferenceresult] -> sequence [inferenceresult]": 2,
            "iterable [inferencetask] -> inferencetask": 2,
            "iterable [inferencetask] -> iterator [inferencetask]": 1,
            "list [inferencetask [binaryio]] -> inferencetask [binaryio]": 1,
            "tuple [inferencetask [binaryio]] -> inferencetask [binaryio]": 1,
            "iterator [inferencetask [bytes]] -> inferencetask [bytes]": 1,
            "tuple [inferencetask [bytes]] -> inferencetask [bytes]": 1,
            "list [multiimgtask] -> multiimgtask": 1,
            "list [multifiletask] -> multifiletask": 1,
            "sequence [multifiletask] -> multifiletask": 1,
            "tuple [inferenceresult [str]] -> sequence [inferenceresult [str]]": 1,
            "sequence [inferenceresult] -> iterator [inferencetask]": 1,
            "iterator [inferencetask] -> sequence [inferenceresult]": 1,
            "iterable [httprequest] -> sequence [httprequest]": 1,
            "iterable [httpresponse] -> sequence [httpresponse]": 1,
            "iterable [httpresponse] -> inferencetask [binaryio]": 1,
            "iterable [httpresponse] -> sequence [inferenceresult [str]]": 1,
            "iterable [httpresponse] -> httpresponse": 2,
            "iterable [awslambdaevent] -> awslambdaevent": 1,
            "iterator [httpresponse] -> httpresponse": 1,
            "iterator [tuple [binaryio]] -> iterator [tuple [filelike]]": 2,
            "iterator [binaryio] -> iterator [filelike]": 1,
            "inferencetask [binaryio] -> inferencetask [filelike]": 3,
            "iterator [inferencetask [binaryio]] -> iterator [inferencetask [filelike]]": 1,
            "inferencetask [bytes] -> apifuncargs": 1,
            "cimultidict -> str": 1,
            "apifuncargs -> batchapifuncargs": 1,
            "inferencetask [filelike] -> str": 1,
            "str -> apifuncargs": 1,
            "batchapifuncargs -> iterator [inferencetask]": 1,
            "apifuncargs -> iterator [inferencetask [filelike]]": 1,
            "bool -> optional [bool]": 1,
            "func.httpresponse -> \"func.httpresponse\"": 1,
            "modelartifact -> basemodelartifact": 1,
            "list [modelartifact] -> list [basemodelartifact]": 1,
            "iterator ['inferenceresult'] -> iterator [\"inferenceresult\"]": 1,
            "\"bentoservice\" -> \"service\"": 1,
            "dict -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [autotokenizer,automodelwithlmhead]]": 1,
            "\"yataiclient\" -> yataiclient": 1,
            "callable [...,_generatorcontextmanager [t]] -> callable [...,generatorcontextmanager [t]]": 1,
            "yataiclient -> \"yataiclient\"": 1,
            "yataistub -> \"yataistub\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [autotokenizer,automodelwithlmhead]] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [autotokenizer,automodelforcausallm]]": 1,
            "_f -> list [str]": 1,
            "callable [...,generatorcontextmanager [t]] -> callable [...,\"_generatorcontextmanager[t]\"]": 1,
            "np.ndarray -> \"np.ndarray\"": 1,
            "pd.dataframe -> \"pd.dataframe\"": 1,
            "str -> tuple [int,str]": 1,
            "v -> _v": 1,
            "union [\"cached_property\",v] -> union [\"cached_property\",_v]": 1,
            "callable [...,\"_generatorcontextmanager[t]\"] -> callable [...,\"_generatorcontextmanager[_t]\"]": 1,
            "iterator [t] -> iterator [_t]": 1,
            "iterator [int] -> none": 1,
            "bool -> float": 1,
            "httpresponse -> response": 6,
            "str -> t.any": 1,
            "bool -> int": 1,
            "\"_t\" -> \"runnerimpl\"": 1,
            "transporter -> none": 1,
            "iopyobj -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 1,
            "response -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 2,
            "none -> \"response\"": 2,
            "str -> \"response\"": 1,
            "\"mxnet.gluon.nn.hybridsequential\" -> attribute(\n    value=name(\n        value='gluon',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).hybridsequential": 1,
            "t.any -> iopyobj": 1,
            "str -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 2,
            "t.dict -> jsonserializable": 1,
            "\"lightgbm.booster\" -> \"lgb.basic.booster\"": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t] -> str": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [str,t]]": 1,
            "response -> str": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,\"modelinfo\"] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,\"model\"]": 6,
            "\"modelinfo\" -> \"model\"": 6,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t [str,t]] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='dict',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [str,t]": 1,
            "\"response\" -> str": 1,
            "\"starlette\" -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t [...,none]]": 1,
            "attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='callable',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [...,t [t,t,\"response\"]] -> attribute(\n    value=name(\n        value='t',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='list',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n) [t [...,none]]": 1
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 1871,
        "functionReturnsType_added": 589,
        "variableType_added": 453,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 1520,
        "functionReturnsType_removed": 403,
        "variableType_removed": 270,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 92,
        "functionReturnsType_changed": 130,
        "variableType_changed": 20,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            0.33333333333333337,
            6.451612903225806,
            0.9868421052631579,
            0.5050505050505051,
            1.3888888888888888,
            3.571428571428571,
            0.9259259259259258,
            0.6211180124223602,
            0.303951367781155,
            0.11947431302270012,
            0.6578947368421052,
            0.11337868480725624,
            0.10526315789473684,
            0.8077544426494345,
            0.7147719537100068,
            0.7481296758104738,
            1.4814814814814816,
            2.15311004784689,
            0.45045045045045046,
            0.8264462809917356,
            1.9607843137254901,
            0.5780346820809248,
            0.04528985507246377,
            1.762114537444934,
            2.857142857142857,
            1.3157894736842104,
            14.285714285714285,
            1.639344262295082,
            0.1,
            0.10010010010010009,
            1.394422310756972,
            1.2048192771084338,
            0.8771929824561403,
            29.48717948717949,
            0.8356545961002786,
            1.773049645390071,
            7.4074074074074066,
            0.594059405940594,
            14.285714285714285,
            0.35211267605633806,
            6.844106463878327,
            1.3658536585365855,
            1.098901098901099,
            25.0,
            0.6060606060606061,
            0.6230529595015576,
            0.4098360655737705,
            1.9305019305019304,
            0.7042253521126761,
            1.1111111111111112,
            2.2058823529411766,
            0.4830917874396135,
            0.9615384615384616,
            0.20590253946465342,
            1.5873015873015872,
            1.3803680981595092,
            0.4897959183673469,
            4.455445544554455,
            3.3333333333333335,
            2.0746887966804977,
            4.014598540145985,
            2.366863905325444,
            0.8103727714748784,
            12.162162162162163,
            2.3529411764705883,
            1.0309278350515463,
            0.24360535931790497,
            0.45662100456621,
            0.20408163265306123,
            5.681818181818182,
            11.38211382113821,
            5.116279069767442,
            1.1695906432748537,
            6.666666666666667,
            1.992382068561383,
            1.8665934669228657,
            4.824561403508771,
            5.797101449275362,
            1.8779342723004695,
            1.9047619047619049,
            2.694610778443114,
            1.276595744680851,
            3.7280701754385963,
            4.545454545454546,
            2.5936599423631126,
            2.254428341384863,
            2.4390243902439024,
            0.08976660682226212,
            0.9615384615384616,
            5.0,
            0.2597402597402597,
            0.4132231404958678,
            5.714285714285714,
            5.263157894736842,
            0.8771929824561403,
            1.0638297872340425,
            2.666666666666667,
            4.166666666666666,
            0.425531914893617,
            2.2222222222222223,
            0.36101083032490977,
            1.9867549668874174,
            9.090909090909092,
            4.697986577181208,
            3.8461538461538463,
            7.894736842105263,
            0.40650406504065045,
            8.47457627118644,
            4.10958904109589,
            3.3333333333333335,
            1.1235955056179776,
            0.6802721088435374,
            0.53475935828877,
            0.7722007722007722,
            2.781136638452237,
            0.4629629629629629,
            1.6666666666666667,
            11.320754716981133,
            0.6535947712418301,
            2.1447721179624666,
            4.10958904109589,
            6.0606060606060606,
            1.8691588785046727,
            0.38910505836575876,
            4.697986577181208,
            3.125,
            2.464788732394366,
            37.5,
            37.5,
            0.7407407407407408,
            0.7692307692307693,
            1.7595307917888565,
            3.125,
            6.887755102040815,
            2.2641509433962264,
            1.153846153846154,
            1.3636363636363635,
            4.8503611971104235,
            0.10638297872340426,
            0.33003300330033003,
            0.4149377593360996,
            1.7686072218128224,
            6.837606837606838,
            2.2556390977443606,
            0.2717391304347826,
            2.050113895216401,
            1.0050251256281406,
            3.4482758620689653,
            0.4518072289156626,
            7.82608695652174,
            5.633802816901409,
            4.545454545454546,
            0.6802721088435374,
            1.36986301369863,
            1.6666666666666667,
            0.5813953488372093,
            25.0,
            1.4598540145985401,
            1.3793103448275863,
            1.0526315789473684,
            3.104125736738703,
            4.916512059369202,
            6.4575645756457565,
            0.09242144177449169,
            1.6236654804270463,
            1.598774403896767,
            0.6299863158710077,
            33.33333333333333,
            0.927213722763097,
            0.16393442622950818,
            0.4273504273504274,
            2.309307207837649,
            0.1578764746703678,
            3.6342321219226257,
            2.079722703639515,
            3.4090909090909087,
            3.0456852791878175,
            1.7786561264822136,
            1.8108651911468814,
            0.24494005414464354,
            0.04118616144975289,
            0.018597731076808628,
            1.0845986984815619,
            3.7406483790523692,
            6.701030927835052,
            2.6833631484794274,
            2.9268292682926833,
            0.3143336127409891,
            0.2608267716535433,
            0.005774005427565102,
            2.867383512544803,
            3.375527426160337,
            6.772908366533864,
            1.2146643109540636,
            0.6727462998953506,
            2.4879614767255216,
            2.34375,
            0.15810276679841898,
            0.27972027972027974,
            0.3968253968253968,
            0.09053870529651425,
            0.9458297506448838,
            0.5939123979213066,
            0.2145922746781116,
            0.28680688336520077,
            0.05053057099545225,
            2.9914529914529915,
            50.72463768115942,
            1.7094017094017095,
            2.5,
            2.3255813953488373,
            2.380952380952381,
            4.98812351543943,
            2.4390243902439024,
            1.9230769230769231,
            0.46728971962616817,
            1.4492753623188406,
            1.3513513513513513,
            0.16652789342214822,
            0.10695187165775401,
            0.04679457182966776,
            18.181818181818183,
            0.7657500870170553,
            0.5780346820809248,
            0.5586592178770949,
            4.8417132216014895,
            3.074670571010249,
            3.2409215150331905,
            11.494252873563218,
            0.8032128514056224,
            1.5317286652078774,
            0.35335689045936397,
            1.8504240555127216,
            1.0204081632653061,
            0.04042037186742118,
            0.3236245954692557,
            5.063291139240507,
            0.19102196752626552,
            5.0,
            11.11111111111111,
            3.3333333333333335,
            16.666666666666664,
            15.384615384615385,
            2.462380300957592,
            2.029520295202952,
            0.933852140077821,
            1.694915254237288,
            1.5873015873015872,
            3.7162162162162162,
            3.4722222222222223,
            0.042936882782310004,
            0.15743440233236153,
            7.512953367875648,
            1.3793103448275863,
            6.896551724137931,
            3.6011080332409975,
            0.6211180124223602,
            0.4273504273504274,
            0.45454545454545453,
            4.060913705583756,
            6.451612903225806,
            0.8695652173913043,
            0.29411764705882354,
            5.088953247827885,
            5.215419501133787,
            10.204081632653061,
            4.166666666666666,
            0.8130081300813009,
            0.8206330597889802,
            0.3472222222222222,
            1.4388489208633095,
            1.4142165984369186,
            1.3157894736842104,
            0.9900990099009901,
            7.6923076923076925,
            0.411522633744856,
            0.35714285714285715,
            0.3952569169960474,
            0.411522633744856,
            0.2985074626865672,
            3.278688524590164,
            0.39263803680981596,
            1.1952191235059761,
            1.1952191235059761,
            1.4367816091954022,
            3.2520325203252036,
            2.11864406779661,
            0.21097046413502107,
            5.063291139240507,
            5.286343612334802,
            4.0,
            0.7168458781362007,
            0.78125,
            2.3792357606344625,
            0.48939641109298526,
            3.614457831325301,
            7.443365695792881,
            3.582089552238806,
            0.46367851622874806,
            0.847457627118644,
            4.633204633204633,
            1.2345679012345678,
            0.2801120448179272,
            13.698630136986301,
            0.36429872495446264,
            1.1560693641618496,
            0.5509641873278237,
            1.8281535648994516,
            8.849557522123893,
            0.3021148036253776,
            0.28735632183908044,
            4.166666666666666,
            2.2222222222222223,
            1.9801980198019802,
            0.21645021645021645,
            0.2457002457002457,
            0.9523809523809524,
            1.5625,
            3.7383177570093453,
            1.8779342723004695,
            0.06402048655569782,
            1.7804154302670623,
            0.20920502092050208,
            0.14054813773717498,
            3.1914893617021276,
            3.802281368821293,
            5.1020408163265305,
            0.7633587786259541,
            0.10111223458038424,
            0.10526315789473684,
            0.4761904761904762,
            6.25,
            0.5509641873278237,
            0.45454545454545453,
            0.3738317757009346,
            0.09720534629404617,
            0.045615235488653205,
            0.22710068130204392,
            0.4634994206257242,
            0.7462686567164178,
            0.020850708924103418,
            1.098901098901099,
            1.3647642679900744,
            0.9633911368015413,
            0.2259036144578313,
            10.185933710590138,
            2.5,
            4.3314500941619585,
            0.9708737864077669,
            1.1940298507462688,
            0.7112375533428165
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2019",
                "1472",
                "1804",
                "5348",
                "208",
                "58",
                "2317",
                "6514",
                "104",
                "0",
                "0",
                "27462"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/bentoml/BentoML": 5348
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 2326,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            79.85
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/bentoml/BentoML": 2326
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2020": 583,
            "2021": 2330
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2020": 64,
            "2021": 117
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2020": 420,
            "2021": 399
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2018": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2019": [
                0,
                1198,
                0,
                613,
                0,
                1279
            ],
            "2020": [
                103,
                2645,
                26,
                1374,
                9,
                3551
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "bentoml-BentoML": 0,
                "hrmthw.troy@gmail.com": 8,
                "5886138+bojiang@users.noreply.github.com": 51,
                "paranoyang@gmail.com": 39,
                "yubz86@gmail.com": 8,
                "aanand@akainth.me": 2,
                "Sharathmk99@gmail.com": 1,
                "guy4261@gmail.com": 1,
                "evan.of.crows@gmail.com": 1,
                "hrmthw@outlook.com": 1,
                "j.zhao2k19@gmail.com": 2,
                "liusy182@gmail.com": 2,
                "jakubsemric@gmail.com": 2,
                "62316076+gregd33@users.noreply.github.com": 2,
                "paul.sw.lee@gmail.com": 1,
                "ssheng@linkedin.com": 1,
                "s3sheng@gmail.com": 6,
                "37096589+cqvu@users.noreply.github.com": 1,
                "55592496+andrewsi-z@users.noreply.github.com": 1,
                "Aaronpham0103@gmail.com": 24,
                "dev@zsy.im": 7,
                "yetoneful@gmail.com": 2,
                "29749331+aarnphm@users.noreply.github.com": 7,
                "tasha.jae.kim@gmail.com": 3,
                "2347889+sauyon@users.noreply.github.com": 6,
                "temirdamir10@gmail.com": 2
            }
        ],
        "list_dev_dict_total": [
            {
                "bentoml-BentoML": 0,
                "paranoyang@gmail.com": 479,
                "yubz86@gmail.com": 325,
                "badges@fossa.io": 1,
                "badger@gitter.im": 1,
                "i@liangsun.org": 1,
                "i@leons.im": 44,
                "bartczukkuba@gmail.com": 1,
                "sungjunkim@linecorp.com": 10,
                "ghunkins@users.noreply.github.com": 2,
                "7lagrange@gmail.com": 2,
                "hrmthw.troy@gmail.com": 33,
                "lintingzhen@gmail.com": 5,
                "nick.coish@gmail.com": 1,
                "kevin.hanselman@gmail.com": 1,
                "hcndashwood@gmail.com": 1,
                "63852157+GCHQResearcher83493@users.noreply.github.com": 1,
                "rohithrnair@outlook.com": 1,
                "henry.dashwood@curationcorp.com": 2,
                "xmoleslo@gmail.com": 1,
                "5886138+bojiang@users.noreply.github.com": 152,
                "kautukkundan@gmail.com": 3,
                "65292895+dogancanbakir@users.noreply.github.com": 1,
                "lemontheme@gmail.com": 1,
                "omrihar@gmail.com": 2,
                "jamesjithin97@gmail.com": 4,
                "akainth015@gmail.com": 1,
                "aanand@akainth.me": 8,
                "1250892+docteurZ@users.noreply.github.com": 1,
                "liusy182@hotmail.com": 1,
                "cory.massaro@gmail.com": 1,
                "j.zhao2k19@gmail.com": 17,
                "ian.coffey@gmail.com": 1,
                "alexis.dutot76@gmail.com": 1,
                "karan.sheth@somaiya.edu": 5,
                "Sharathmk99@gmail.com": 2,
                "icoffey@vmware.com": 2,
                "joshuacwnewton@gmail.com": 3,
                "49699333+dependabot[bot]@users.noreply.github.com": 26,
                "corentin.regal@gmail.com": 1,
                "guy4261@gmail.com": 2,
                "26552821+dinakar29@users.noreply.github.com": 3,
                "evan.of.crows@gmail.com": 1,
                "34909206+yashika51@users.noreply.github.com": 1,
                "s.sakhavi@gmail.com": 2,
                "avipress@gmail.com": 1,
                "ericmand@gmail.com": 1,
                "daniel.dubovski@beyondminds.ai": 1,
                "hrmthw@outlook.com": 1,
                "umihui86@gmail.com": 1,
                "zeyady98@gmail.com": 1,
                "vedaaa29296@gmail.com": 2,
                "joerg.schad@gmail.com": 1,
                "62316076+gregd33@users.noreply.github.com": 3,
                "mayurnewase111@gmail.com": 5,
                "35164475+narennadig@users.noreply.github.com": 2,
                "70535974+mdscruggs-onna@users.noreply.github.com": 1,
                "rxin@databricks.com": 1,
                "8881940+j-hartshorn@users.noreply.github.com": 1,
                "1330919+changhw01@users.noreply.github.com": 2,
                "45061877+telescopic@users.noreply.github.com": 4,
                "parthparikh1999p@gmail.com": 1,
                "37292933+rhbian@users.noreply.github.com": 3,
                "liusy182@gmail.com": 3,
                "35740094+awalvie@users.noreply.github.com": 1,
                "jine9323@gmail.com": 1,
                "jakubsemric@gmail.com": 3,
                "caronte.francesco@gmail.com": 1,
                "jloehel@users.noreply.github.com": 1,
                "paul.sw.lee@gmail.com": 1,
                "s3sheng@gmail.com": 15,
                "felix.weizman@gmail.com": 3,
                "47258917+CallmeMehdi@users.noreply.github.com": 1,
                "39212456+jack1902@users.noreply.github.com": 1,
                "bukosabino@gmail.com": 1,
                "ssheng@linkedin.com": 5,
                "theopinard@hotmail.fr": 1,
                "vgeshiktor@gmail.com": 1,
                "37096589+cqvu@users.noreply.github.com": 1,
                "38586033+Shumpei-Kikuta@users.noreply.github.com": 2,
                "soeque1@users.noreply.github.com": 1,
                "eliasecchi95@gmail.com": 1,
                "steven@properchaos.nl": 1,
                "sencenan@users.noreply.github.com": 1,
                "sharshofski@gmail.com": 1,
                "55592496+andrewsi-z@users.noreply.github.com": 2,
                "Aaronpham0103@gmail.com": 55,
                "72350590+AnvithaGadagi@users.noreply.github.com": 2,
                "47995124+henrywu2019@users.noreply.github.com": 1,
                "acepor@gmail.com": 3,
                "joaquincabezas@gmail.com": 1,
                "dev@zsy.im": 32,
                "tim.carroll@appian.com": 1,
                "shadowwalker2718@gmail.com": 1,
                "jmc529@users.noreply.github.com": 1,
                "yetoneful@gmail.com": 6,
                "wh7923@gmail.com": 1,
                "aaronpham0103@gmail.com": 4,
                "abrennan@redhat.com": 1,
                "temirdamir10@gmail.com": 4,
                "tasha.jae.kim@gmail.com": 6,
                "29749331+aarnphm@users.noreply.github.com": 67,
                "2347889+sauyon@users.noreply.github.com": 50,
                "dulei66@gmail.com": 1
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]