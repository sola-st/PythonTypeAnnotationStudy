[
    {
        "execution_time": "",
        "machine": {
            "OS": "Linux-4.15.0-166-generic-x86_64-with-Ubuntu-18.04-bionic",
            "CPU": "x86_64",
            "CORES": 48
        },
        "total_repositories": 1,
        "total_commits": 1390,
        "commit_year_dict": {
            "2017": 50,
            "2018": 355,
            "2019": 279,
            "2020": 362,
            "2021": 344
        },
        "loc_year_edit": {
            "2017": 26792,
            "2018": 73304,
            "2019": 97786,
            "2020": 282469,
            "2021": 52358
        },
        "s0": "------------------------------------------------------------------------",
        "RQ0": "How many types are used?",
        "code_changes": [],
        "commit_statistics": [],
        "repo_with_types_changes": 1,
        "percentage_repo_with_typeChanges": "",
        "commits_with_typeChanges": 525,
        "percentage_commits_with_typeChanges": "",
        "total_typeAnnotation_codeChanges": 22965,
        "s1": "------------------------------------------------------------------------",
        "RQ1": "Are type annotation inserted, removed and changed?",
        "insert_types": {
            "2017": 351,
            "2018": 1117,
            "2019": 1780,
            "2020": 7830,
            "2021": 2140
        },
        "percentage_insert_types": "",
        "remove_types": {
            "2017": 3,
            "2018": 890,
            "2019": 708,
            "2020": 5906,
            "2021": 1356
        },
        "percentage_remove_types": "",
        "modify_existing_types": {
            "2017": 1,
            "2018": 156,
            "2019": 224,
            "2020": 393,
            "2021": 110
        },
        "percentage_modify_existing_types": "",
        "s2": "------------------------------------------------------------------------",
        "RQ2_1": "What types are added (generic, numeric, ...)?",
        "anyType_added": 0,
        "noneType_added": 0,
        "numericType_added": 0,
        "binarySequenceType_added": 0,
        "textSequenceType_added": 0,
        "mappingTypes_added": 0,
        "setTypes_added": 0,
        "sequenceType_added": 0,
        "newType_added": 0,
        "total_added": 13218,
        "RQ2_2": "What are the top 5 types added?",
        "typeAdded_dict": {
            "list [str]": 358,
            "str": 518,
            "bool": 837,
            "int": 1474,
            "list [dict [str,float]]": 33,
            "list [float]": 161,
            "list [bool]": 23,
            "list [list [str]]": 12,
            "optional [list [dict [int,float]]]": 7,
            "tuple [int,float,bool,list [str]]": 2,
            "tuple [list [dict [str,float]],list [str],list [float],list [dict [str,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]]": 5,
            "trainingdatapage": 31,
            "list [list [dict [str,float]]]": 2,
            "list [dict [int,float]]": 30,
            "tuple [list [dict [str,float]],list [dict [str,float]],list [float],list [dict [str,float]],list [dict [str,float]],list [bool],list [list [dict [str,float]]],list [dict [int,float]]]": 1,
            "none": 378,
            "np.ndarray": 178,
            "modelhelper": 9,
            "list [int]": 208,
            "float": 535,
            "trainingparameters": 10,
            "list [np]": 59,
            "core.net": 18,
            "dict [int,str]": 8,
            "dict [str,np]": 7,
            "dict [str,normalizationparameters]": 11,
            "continuousactionmodelparameters": 10,
            "optional [evaluator]": 10,
            "optional [np]": 70,
            "optional [list [np]]": 1,
            "continuousactiondqnpredictor": 2,
            "discreteactionmodelparameters": 19,
            "optional [bool]": 37,
            "discreteactionpredictor": 3,
            "rlpredictor": 1,
            "optional [list]": 2,
            "optional [int]": 238,
            "discreteactionconvmodelparameters": 1,
            "cnnmodelparameters": 2,
            "union [discreteactionmodelparameters,continuousactionmodelparameters]": 1,
            "optional [str]": 90,
            "tuple [str,str,str]": 1,
            "tuple [str,list [str]]": 2,
            "dict [int,normalizationparameters]": 116,
            "any": 76,
            "optional [any]": 6,
            "list [list [float]]": 11,
            "optional [modelhelper]": 7,
            "list [dict [any,any]]": 2,
            "list [dict [any,dict [any,any]]]": 2,
            "policyevaluatorparameters": 2,
            "list [list [dict [str,np]]]": 1,
            "stackedarray": 1,
            "ddpgpredictor": 4,
            "torch.floattensor": 18,
            "nn.modulelist": 71,
            "cnnparameters": 3,
            "convmltrainer": 2,
            "optional [dict [int,normalizationparameters]]": 13,
            "mltrainer": 2,
            "additionalfeaturetypes": 6,
            "dict [str,dict [str,np]]": 1,
            "dict [str,valueinputmodelparameters]": 1,
            "list [slate]": 1,
            "dict [str,any]": 10,
            "list [dict [str,dict [str,any]]]": 1,
            "slate": 18,
            "dict [str,dict [str,list [any]]]": 1,
            "dict [str,dict [str,any]]": 2,
            "tuple [bool,list [int]]": 1,
            "tuple [str,float]": 2,
            "tuple [list [np],list [np],list [int],list [np],list [np],list [bool],list [np],list [dict [int,float]]]": 1,
            "list [trainingdatapage]": 5,
            "samples": 9,
            "evaluator": 8,
            "dqnpredictor": 3,
            "list [object]": 1,
            "tuple [list [object],list [int],list [float],list [float],list [float]]": 1,
            "parametricdqnpredictor": 2,
            "torch.tensor": 848,
            "list [cpe_estimate]": 30,
            "list [sample]": 1,
            "set [int]": 2,
            "evolutionpool": 2,
            "evolutionparameters": 4,
            "processgroup": 2,
            "dict [str,list [int]]": 8,
            "list [dict [str,torch]]": 2,
            "dict [str,torch]": 16,
            "normalizationparameters": 12,
            "list": 15,
            "list [normalizationparameters]": 30,
            "parameter": 4,
            "knndqnpredictor": 3,
            "ordereddict": 6,
            "bytesio": 6,
            "tuple [torch,...]": 1,
            "valuetype": 37,
            "optional [valuetype]": 12,
            "optional [namedtuple]": 2,
            "state": 74,
            "action": 48,
            "possibleactions": 3,
            "stateaction": 3,
            "statepossibleactions": 1,
            "optional [ordereddict]": 6,
            "optional [torch]": 427,
            "featureextractornet": 1,
            "union [maxqlearninginput,sarsainput]": 1,
            "summarywriter": 4,
            "optional [float]": 125,
            "optional [state]": 17,
            "outputtransformernet": 1,
            "sacmodelparameters": 3,
            "_parametricdqnpredictor": 1,
            "actorpredictor": 1,
            "dict [str,list [float]]": 8,
            "dict [str,int]": 12,
            "list [torch]": 32,
            "batchstatsforcpe": 1,
            "optional [list [dict [int,int]]]": 1,
            "dict [str,dict [str,float]]": 2,
            "optional [list [str]]": 57,
            "list [batchstats]": 3,
            "list [list [int]]": 2,
            "tuple [torch,torch]": 66,
            "cpeestimate": 14,
            "cpeestimateset": 5,
            "dict [str,cpeestimateset]": 4,
            "evaluationdatapage": 44,
            "tuple [cpeestimate,cpeestimate,cpeestimate]": 13,
            "rltrainer": 14,
            "trainingbatch": 12,
            "cpedetails": 4,
            "list [features]": 13,
            "list [action]": 18,
            "list [list [action]]": 17,
            "list [list [features]]": 7,
            "list [list [bool]]": 7,
            "list [list [list [action]]]": 6,
            "deque [int]": 6,
            "deque [str]": 2,
            "deque [float]": 44,
            "deque [bool]": 4,
            "deque [list [str]]": 2,
            "tuple [rlt,optional [rlt]]": 3,
            "optional [dict [str,float]]": 25,
            "preprocesshandler": 4,
            "union [rlpredictor,gympredictor,none]": 4,
            "tuple [np,float]": 1,
            "deque [features]": 6,
            "deque [action]": 6,
            "deque [list [action]]": 6,
            "union [samples,multistepsamples]": 6,
            "list [cpedetails]": 9,
            "features": 4,
            "mt.trainingbatch": 1,
            "optional [mt]": 1,
            "stackedassociativearray": 1,
            "sparsetodenseprocessor": 14,
            "np.array": 13,
            "memorynetwork": 11,
            "mdnrnnparameters": 7,
            "rlt.trainingbatch": 2,
            "mdnrnntrainer": 26,
            "dict": 17,
            "list [dict]": 23,
            "optional [rlt]": 16,
            "rlt.valuetype": 10,
            "videoidfeatures": 1,
            "watchedvideosequence": 1,
            "dict [str,rlt]": 8,
            "optional [idfeaturebase]": 1,
            "type [t]": 1,
            "type [u]": 1,
            "dict [str,idmapping]": 5,
            "type [sequencefeatures]": 1,
            "optional [sequencefeaturebase]": 1,
            "dict [str,idfeatureconfig]": 1,
            "t": 2,
            "u": 1,
            "dict [str,dict [str,core]]": 6,
            "dict [str,core]": 4,
            "dict [str,type [rlt]]": 2,
            "dict [str,dict [str,rlt]]": 2,
            "schema.list": 4,
            "schema.blobreference": 4,
            "core.blobreference": 14,
            "schema.struct": 2,
            "rlt.sequencefeatures": 2,
            "abidfeatures": 3,
            "cidfeatures": 3,
            "idonlysequence": 3,
            "idandfloatsequence": 3,
            "floatonlysequence": 3,
            "list [rlt]": 8,
            "list [floatfeatureinfo]": 5,
            "optional [normalizationparameters]": 2,
            "worldmodelfeatureextractor": 2,
            "optional [cpeestimate]": 44,
            "union [gridworld,gridworldcontinuous]": 2,
            "rlt.stateinput": 2,
            "rlt.actoroutput": 49,
            "rlt.stateaction": 2,
            "rlt.singleqvalue": 1,
            "position": 3,
            "openaigymmemorypool": 4,
            "openaigymenvironment": 28,
            "rldataset": 5,
            "dict [str,float]": 15,
            "union [str,env]": 4,
            "env": 22,
            "maxqlearninginput": 1,
            "modelbase": 95,
            "tuple [core,core]": 1,
            "list [summarywriter]": 3,
            "envtype": 3,
            "dqnpolicyactionset": 8,
            "sacpolicyactionset": 4,
            "optional [evaluationdatapage]": 21,
            "list [tuple [float,float]]": 2,
            "documentfeature": 8,
            "td3modelparameters": 2,
            "preprocessor": 41,
            "optional [nn]": 10,
            "tuple [list [str],torch]": 9,
            "tuple [str,str]": 1,
            "torch.bytetensor": 6,
            "dict [int,int]": 18,
            "rlt.preprocessedstate": 50,
            "rlt.rawtrainingbatch": 12,
            "rlt.preprocessedtrainingbatch": 46,
            "featurevector": 19,
            "union [featurevector,torch]": 2,
            "union [rawbaseinput,rawdiscretedqninput,rawparametricdqninput,rawpolicynetworkinput]": 2,
            "union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput]": 2,
            "preprocessedtrainingbatch": 42,
            "discretedqnwithpreprocessor": 3,
            "parametricdqnwithpreprocessor": 4,
            "dict [str,tensor]": 24,
            "optional [tensor]": 63,
            "tensor": 168,
            "estimationdata": 24,
            "importancesamplingdata": 9,
            "optional [dict]": 11,
            "dict [str,union [str,float,int]]": 17,
            "xgb.booster": 12,
            "list [memorynetwork]": 2,
            "rlt.preprocessedstateaction": 12,
            "cemplannernetwork": 8,
            "cemplanner": 2,
            "tuple [int,np]": 2,
            "onpolicypredictor": 2,
            "optional [dict [str,any]]": 3,
            "mdnrnnmemorypool": 2,
            "list [mdnrnntrainer]": 2,
            "cemparameters": 5,
            "union [rlt,rlt]": 2,
            "union [sacpolicyactionset,dqnpolicyactionset]": 2,
            "cemtrainer": 7,
            "dict [str,str]": 5,
            "constantvalue": 1,
            "list [operator]": 1,
            "list [constant]": 1,
            "rlt.preprocessedfeaturevector": 10,
            "dqntrainer": 12,
            "actorwithpreprocessor": 2,
            "type": 43,
            "feedforwardparameters": 12,
            "optional [cnnparameters]": 2,
            "optional [factorizationparameters]": 1,
            "rlparameters": 31,
            "rainbowdqnparameters": 4,
            "optional [statefeatureparameters]": 8,
            "optional [list [float]]": 29,
            "evaluationparameters": 41,
            "ddpgtrainingparameters": 2,
            "ddpgnetworkparameters": 4,
            "dict [int,list [float]]": 1,
            "optimizerparameters": 19,
            "td3trainingparameters": 3,
            "sactrainingparameters": 1,
            "optional [feedforwardparameters]": 12,
            "optional [list [int]]": 14,
            "openairundetails": 13,
            "optional [rlparameters]": 4,
            "optional [rainbowdqnparameters]": 3,
            "optional [trainingparameters]": 3,
            "optional [td3trainingparameters]": 3,
            "optional [sactrainingparameters]": 1,
            "optional [cemparameters]": 3,
            "optional [mdnrnnparameters]": 3,
            "openaigymparameters": 18,
            "decisionrewardaggreation": 1,
            "optional [postprocessor]": 3,
            "tuple [torch]": 2,
            "optional [urllib]": 1,
            "list [tuple [str,float]]": 1,
            "seq2slatetrainer": 4,
            "rlt.preprocessedrankinginput": 36,
            "seq2slatetransformernet": 16,
            "transformerparameters": 4,
            "baselineparameters": 1,
            "seq2slatewithpreprocessor": 2,
            "baselinenet": 1,
            "seq2slatetransformerparameters": 10,
            "preprocessedfeaturevector": 36,
            "optional [preprocessedfeaturevector]": 9,
            "optional [memorybuffer]": 2,
            "tuple [list [int],list [int]]": 2,
            "preprocessedtiledfeaturevector": 4,
            "optional [dict [str,union [float,int,str]]]": 2,
            "doublyrobusthp": 2,
            "rlp.rlparameters": 14,
            "rlp.evaluationparameters": 9,
            "slateqtrainerparameters": 7,
            "rlt.preprocessedtiledfeaturevector": 4,
            "rlt.preprocessedslatefeaturevector": 4,
            "tuple [torch,torch,documentfeature]": 8,
            "optional [openaigymmemorypool]": 2,
            "recsim": 6,
            "rewardnettrainer": 3,
            "seq2slaterewardnet": 2,
            "nn.module": 7,
            "optional [evaluationparameters]": 4,
            "parametricdqntrainerparameters": 7,
            "rlp.optimizerparameters": 13,
            "optional [sactrainerparameters]": 2,
            "sactrainerparameters": 8,
            "sactrainer": 9,
            "dict [str,type]": 9,
            "dirichletfullyconnectedconfig": 1,
            "normalizationdata": 84,
            "gaussianfullyconnectedconfig": 1,
            "attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module": 84,
            "fullyconnectedconfig": 3,
            "continuousactornetbuilderchooser": 1,
            "parametricdqnnetbuilderchooser": 1,
            "duelingconfig": 1,
            "rlt.modelfeatureconfig": 72,
            "optional [bcqconfig]": 3,
            "dict [int,tuple [torch,torch]]": 8,
            "optional [sequencefeatures]": 1,
            "list [idlistfeatureconfig]": 5,
            "idlistfeatures": 4,
            "rlp.discreteactionmodelparameters": 2,
            "tuple [int,...]": 6,
            "optional [list [replayelement]]": 2,
            "list [replayelement]": 9,
            "learningmethod": 3,
            "dict [str,callable]": 2,
            "dict [str,dict [str,list [float]]]": 4,
            "list [observer]": 7,
            "dict [str,list [observer]]": 4,
            "list [any]": 12,
            "aggregator": 3,
            "observer": 6,
            "optional [baselinenet]": 5,
            "categoricalconfig": 1,
            "duelingquantileconfig": 1,
            "quantileconfig": 1,
            "discretedqnwithpreprocessorwithidlist": 2,
            "fullyconnectedwithembeddingconfig": 1,
            "discretedqnnetbuilderchooser": 1,
            "policy": 41,
            "actionpreprocessor": 3,
            "optional [replaybuffer]": 2,
            "optional [replaybufferaddfn]": 2,
            "optional [replaybuffertrainfn]": 2,
            "replaybuffer": 15,
            "trainer": 32,
            "trainerpreprocessor": 9,
            "replaybuffertrainfn": 2,
            "scorer": 9,
            "sampler": 2,
            "policypreprocessor": 6,
            "gaussiansamplerscore": 6,
            "agent": 12,
            "gym.env": 39,
            "optional [dict [str,normalizationdata]]": 19,
            "rewardoptions": 96,
            "optional [rltrainer]": 3,
            "tablespec": 107,
            "dict [str,normalizationdata]": 166,
            "optional [tuple [float,float]]": 48,
            "dataset": 90,
            "optional [dataset]": 72,
            "optional [rewardoptions]": 40,
            "rltrainingoutput": 80,
            "list [type]": 3,
            "c51trainerparameters": 6,
            "categoricaldqnnetbuilder__union": 10,
            "c51trainer": 7,
            "dqntrainerparameters": 6,
            "discretedqnnetbuilder__union": 22,
            "qrdqntrainerparameters": 6,
            "qrdqnnetbuilder__union": 7,
            "qrdqntrainer": 8,
            "optional [preprocessingoptions]": 33,
            "optional [readeroptions]": 29,
            "optional [modelbase]": 59,
            "batchpreprocessor": 41,
            "optional [dict [int,str]]": 6,
            "dict [int,normalization]": 6,
            "preprocessingoptions": 8,
            "modelmanager": 17,
            "optional [recurringperiod]": 17,
            "publishingoutput": 2,
            "nopublishingresults": 5,
            "novalidationresults": 3,
            "modelmanager__union": 16,
            "optional [modelvalidator__union]": 5,
            "optional [modelpublisher__union]": 5,
            "tuple [float,float]": 25,
            "modelvalidator__union": 2,
            "modelpublisher__union": 4,
            "trainevalsampleranges": 7,
            "publishingresults": 1,
            "validationresults": 1,
            "validationoutput": 2,
            "optional [rewardclamp]": 4,
            "dataclass": 2,
            "object": 4,
            "actiondistribution": 22,
            "reward": 13,
            "iterable [logsample]": 4,
            "actionspace": 17,
            "iterable [log]": 2,
            "optional [banditsmodel]": 4,
            "banditsestimatorinput": 11,
            "clamper": 14,
            "actionrewards": 6,
            "estimatorresults": 29,
            "optional [resultdiffs]": 4,
            "union [float,tensor]": 8,
            "optional [union [float,tensor]]": 2,
            "probability": 8,
            "optional [action]": 4,
            "status": 2,
            "rlpolicy": 19,
            "mapping [state,sequence [mdp]]": 2,
            "optional [valuefunction]": 5,
            "sequence [mdp]": 2,
            "rlestimatorinput": 13,
            "iterable [iterable [transition]]": 2,
            "statedistribution": 9,
            "union [mapping [slateslot,float],sequence [float],np,tensor]": 2,
            "union [mutablemapping [slateslot,type],mutablesequence [type]]": 2,
            "slateslot": 8,
            "sequence [object]": 2,
            "slateitems": 8,
            "slateitemvalues": 17,
            "slateslots": 37,
            "sequence [slateitem]": 2,
            "union [mutablemapping [slateslot,slateitemvalues],mutablesequence [slateitemvalues]]": 4,
            "sequence [slateitemvalues]": 3,
            "union [mapping [slateitem,float],sequence [float],np,tensor]": 2,
            "slatequery": 2,
            "slatecontext": 22,
            "slateslotvalues": 36,
            "optional [slateslotvalues]": 3,
            "slatemetric": 2,
            "optional [slateslotitemprobabilities]": 4,
            "optional [slateitemprobabilities]": 4,
            "optional [slateitemvalues]": 2,
            "iterable [logepisode]": 2,
            "slatemodel": 2,
            "slateestimatorinput": 11,
            "optional [type]": 2,
            "sequence [type]": 4,
            "union [mapping [slateslot,object],sequence [object]]": 2,
            "slateitem": 7,
            "slateslotitemexpectations": 10,
            "slateitemprobabilities": 7,
            "optional [slateslotitemexpectations]": 4,
            "union [mapping [type,float],sequence [float],np,tensor]": 4,
            "union [mapping [type,float],sequence [float],tensor,np]": 2,
            "union [sequence [type],int]": 2,
            "union [mapping [action,float],sequence [float],np,tensor]": 2,
            "tuple [sequence [type],tensor]": 2,
            "\"values\"": 4,
            "union [sequence [type],type]": 4,
            "union [sequence [float],mapping [type,float]]": 2,
            "sequence [action]": 2,
            "tuple [action,actiondistribution]": 6,
            "optional [none]": 4,
            "environment": 11,
            "mdp": 2,
            "tuple [int,int]": 22,
            "iterable [tuple [int,int]]": 4,
            "sequence [sequence [str]]": 2,
            "valuefunction": 2,
            "gridworld": 2,
            "tuple [tuple [int,int],float,bool]": 4,
            "statereward": 3,
            "list [tuple [float,tensor]]": 2,
            "mslrdatasets": 8,
            "estimator": 3,
            "multiclasscontext": 4,
            "multiclassdatarow": 2,
            "distribution": 2,
            "tuple [int]": 7,
            "sequence [tuple [int,int]]": 3,
            "list [tuple [int,int]]": 2,
            "optional [mutablemapping [tuple [int,int],float]]": 2,
            "union [sequence [tuple [tuple [int,int],float]],mutablemapping [tuple [int,int],float]]": 2,
            "loggedquery": 2,
            "\"processedquery\"": 2,
            "trainingdataset": 4,
            "trainingdata": 15,
            "tuple [np,np,np]": 3,
            "predictresults": 7,
            "sequence [float]": 5,
            "model": 2,
            "tabularpolicy": 4,
            "mapping [state,float]": 2,
            "union [float,sequence [float],torch,np]": 4,
            "\"runningaverage\"": 2,
            "optional [pydantic]": 2,
            "aparam": 2,
            "foounion": 2,
            "optional [validationresult__union]": 6,
            "optional [publishingresult__union]": 6,
            "optional [rltrainingreport]": 5,
            "optional [doublyrobusthp]": 3,
            "trainvalidevaldata": 1,
            "parametricdqntrainer": 9,
            "union [namedtuple,torch]": 1,
            "optional [baselineparameters]": 1,
            "tuple [torch,torch,torch,int]": 1,
            "tuple [list [np],list [np],list [int],list [np],list [np],list [bool],list [np],list [np]]": 1,
            "tuple [int,float,bool,object]": 1,
            "tuple [action,action,float]": 1,
            "optional [onpolicypredictor]": 4,
            "tuple [list [str],list [int],list [torch],list [int],list [float],list [float],list [float],list [bool]]": 1,
            "tuple [torch,float]": 1,
            "union [float,torch]": 3,
            "continuousactornetbuilder__union": 10,
            "parametricdqnnetbuilder__union": 18,
            "tuple [rlt,rlt]": 2,
            "optional [optimizerparameters]": 1,
            "valuepresence": 1,
            "preprocessedslatefeaturevector": 2,
            "union [torch,torch]": 1,
            "union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput,preprocessedrankinginput,preprocessedslateqinput]": 1,
            "publishingresult": 2,
            "validationresult": 2,
            "optional [dict [str,str]]": 2,
            "poststep": 3,
            "optional [union [str,torch]]": 2,
            "rlt.preprocesseddiscretedqninput": 4,
            "extradata": 12,
            "preprocessedmemorynetworkinput": 5,
            "optional [preprocessor]": 1,
            "torch.device": 15,
            "dqntrainingreport": 5,
            "trainingpagehandler": 1,
            "evaluationpagehandler": 1,
            "modulewithdimensions": 4,
            "dqnbase": 1,
            "optional [modulewithdimensions]": 4,
            "rlt.allactionqvalues": 5,
            "union [str,torch]": 2,
            "spaces.box": 1,
            "rlt.policynetworkinput": 2,
            "optional [extradata]": 17,
            "optional [valuenetbuilder__union]": 9,
            "optional [list [tuple [int,str]]]": 24,
            "list [tuple [int,str]]": 4,
            "actorcritictrainingreport": 3,
            "trainingreport": 4,
            "td3trainer": 6,
            "rlt.preprocessedmemorynetworkinput": 2,
            "mdnrnntrainerparameters": 6,
            "callable": 6,
            "tuple [torch,torch,torch]": 1,
            "list [nn]": 2,
            "preprocessedstate": 1,
            "rlt.featuredata": 62,
            "list [tuple [str,int]]": 4,
            "\"recsimgymenv\"": 2,
            "dict [str,valuelistobserver]": 3,
            "dict [str,intervalaggregatingobserver]": 3,
            "readeroptions": 49,
            "iterabledataset": 1,
            "replaybufferinserter": 1,
            "featuredata": 45,
            "rlt.memorynetworkinput": 21,
            "union [np,float]": 4,
            "cemtrainerparameters": 4,
            "worldmodel": 4,
            "optional [trainer]": 9,
            "rlt.doclist": 2,
            "optional [doclist]": 4,
            "rlt.parametricdqninput": 1,
            "parametricdqntrainingreport": 3,
            "bytes": 3,
            "list [bytes]": 2,
            "dict [str,bytes]": 3,
            "transition": 6,
            "list [transition]": 1,
            "dict [str,bool]": 1,
            "pd.dataframe": 4,
            "valuemode": 1,
            "tinydb": 3,
            "dict [int,any]": 1,
            "union [float,list [float]]": 3,
            "optimizer__union": 33,
            "optional [optimizer__union]": 1,
            "seq2rewardtrainer": 6,
            "seq2rewardnetwork": 3,
            "seq2rewardtrainerparameters": 6,
            "valuenetbuilder__union": 8,
            "sequence [logsample]": 10,
            "logging.logger": 10,
            "logsample": 7,
            "tuple [reward,reward]": 1,
            "optional [estimatorresult]": 8,
            "mutablesequence [float]": 4,
            "estimatorresult": 2,
            "iterable [tuple [iterable [estimator],object]]": 1,
            "mapping [str,estimatorresults]": 2,
            "optional [mapping [str,iterable [estimatorresults]]]": 1,
            "union [mapping [slateitem,tensor],sequence [tensor],tensor,np]": 2,
            "slateitemfeatures": 2,
            "iterable [tuple [set [int],float,float,float]]": 2,
            "iterable [tuple [sequence [slateitem],float]]": 1,
            "optional [iterable [logsample]]": 1,
            "optional [estimatorsampleresult]": 2,
            "union [mapping [keytype,valuetype],sequence [valuetype]]": 1,
            "keytype": 2,
            "union [mapping [keytype,float],sequence [float],np,tensor]": 2,
            "sequence [valuetype]": 1,
            "sequence [keytype]": 1,
            "tuple [sequence [keytype],tensor]": 1,
            "iterable [tuple [iterable [slateestimator],int]]": 2,
            "rewarddistribution": 4,
            "iterable [tuple [iterable [estimator],int]]": 1,
            "ucimulticlassdataset": 1,
            "tuple [list [float],mapping [tuple [int,int],float]]": 1,
            "sequence [trainingquery]": 2,
            "gruparameters": 1,
            "modelfeatureconfigprovider__union": 11,
            "optional [modeloutputs]": 1,
            "list [estimatorresult]": 1,
            "tuple [float,float,float,float]": 1,
            "seq2slaterewardnetbase": 1,
            "list [tuple [torch,torch]]": 3,
            "list [idscorelistfeatureconfig]": 4,
            "idscorelistfeature": 4,
            "servingidlistfeature": 4,
            "servingidscorelistfeature": 4,
            "rlt.servingfeaturedata": 11,
            "sparsepreprocessor": 1,
            "dict [int,tuple [torch,torch,torch]]": 2,
            "dict [int,dict [int,int]]": 3,
            "dict [str,tuple [torch,torch]]": 4,
            "dict [str,tuple [torch,torch,torch]]": 2,
            "rlestimator": 1,
            "mutablemapping [tuple [int,int],runningaverage]": 1,
            "reinforceparams": 1,
            "rlt.policygradientinput": 5,
            "optional [resourceoptions]": 29,
            "env__union": 3,
            "slateqtrainer": 6,
            "np.dtype": 1,
            "elementmetadata": 1,
            "dict [str,replayelement]": 1,
            "optional [clamper]": 1,
            "optional [reward]": 1,
            "tuple [torch,torch,torch,torch,torch,torch,runningaverage,runningaverage]": 1,
            "tuple [pandas,str]": 2,
            "optional [ipsclamp]": 3,
            "ipsclampmethod": 2,
            "optional [simulationparameters]": 2,
            "variancethreshold": 1,
            "environmentmodel": 1,
            "compressmodeltrainer": 1,
            "memorynetworkinput": 4,
            "fullyconnectednetwork": 2,
            "optional [batchpreprocessor]": 2,
            "ossdataset": 1,
            "rlt.tensordataclass": 1,
            "list [tuple [str,agg]]": 3,
            "datafetcher": 40,
            "resourceoptions": 2,
            "optional [modelvalidator]": 1,
            "modelvalidator": 1,
            "modelpublisher": 1,
            "tuple [dataset,dataset]": 1,
            "attribute(\n    value=attribute(\n        value=name(\n            value='torch',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='utils',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='data',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).dataloader": 1,
            "optional [rlestimatorinput]": 1,
            "td3trainerparameters": 3,
            "optional [trainingreport__union]": 1,
            "idlistfeature": 3,
            "optional [featuredata]": 12,
            "union [preprocessedrankinginput]": 3,
            "iterable [observer]": 1,
            "optional [postepisode]": 2,
            "trajectory": 4,
            "optional [poststep]": 1,
            "envwrapper": 7,
            "policygradientinput": 2,
            "seq2slatenet": 1,
            "seq2slateoutputarch": 5,
            "pl.trainresult": 1,
            "optional [pl]": 5,
            "pl.trainer": 1,
            "list [score_function_t]": 1,
            "score_function_t": 1,
            "rankingactorwithpreprocessor": 1,
            "modulenametoentityid": 8,
            "optional [modulenametoentityid]": 1,
            "lossfunction": 4,
            "slateqtrainingreport": 2,
            "optional [reagentdatamodule]": 23,
            "optional [dict [str,bytes]]": 25,
            "union [str,callable [...,float],list [callable [...,float]]]": 2,
            "optional [union [str,callable [...,float]]]": 1,
            "seq2slatetransformeroutput": 4,
            "optional [crrweightfn]": 1,
            "rlt.discretedqninput": 5,
            "tuple [torch,none]": 1,
            "crrtrainerparameters": 2,
            "discreteactornetbuilder__union": 2,
            "discretecrrtrainer": 4,
            "tuple [torch,torch,torch,torch]": 1,
            "optional [tablespec]": 10,
            "list [modelbase]": 1,
            "preprocessedrankinginput": 1,
            "gym": 3,
            "list [optimizer]": 1,
            "reinforcetrainerparameters": 2,
            "optional [policy]": 6,
            "reinforcetrainer": 2,
            "episodicdataset": 1,
            "ppotrainerparameters": 2,
            "ppotrainer": 2,
            "optional [callable]": 4,
            "list [dict [str,any]]": 1,
            "list [dict [str,tuple [float,float]]]": 1,
            "tuple [dict [str,any],axclient]": 1,
            "reagentlightningmodule": 25,
            "worldmodeltrainingreport": 2,
            "problemdomain": 1,
            "dict [int,float]": 2,
            "finallayer": 2,
            "optional [tuple [float,float,float]]": 1,
            "seq2rewardtrainingreport": 2,
            "optional [sactype]": 1,
            "optional [td3type]": 1,
            "optional [discretec51dqntype]": 1,
            "optional [discretecrrtype]": 1,
            "optional [discretedqntype]": 1,
            "optional [discreteqrdqntype]": 1,
            "optional [crossentropymethodtype]": 1,
            "optional [seq2rewardmodeltype]": 1,
            "optional [worldmodeltype]": 1,
            "optional [parametricdqntype]": 1,
            "optional [ppotype]": 1,
            "optional [reinforcetype]": 1,
            "optional [slateqtype]": 1,
            "optional [slaterankingtransformertype]": 1,
            "optional [slaterewardgrutype]": 1,
            "optional [slaterewardtransformertype]": 1,
            "optional [fullyconnecteddiscreteactortype]": 1,
            "optional [fullyconnectedcontinuousactortype]": 1,
            "optional [dirichletfullyconnectedtype]": 1,
            "optional [gaussianfullyconnectedtype]": 1,
            "optional [duelingtype]": 1,
            "optional [fullyconnectedtype]": 1,
            "optional [fullyconnectedwithembeddingtype]": 1,
            "optional [categoricaltype]": 1,
            "optional [quantiletype]": 1,
            "optional [duelingquantiletype]": 1,
            "optional [fullyconnectedparametrictype]": 1,
            "optional [fullyconnectedvaluetype]": 1,
            "optional [seq2rewardnetbuildertype]": 1,
            "optional [slaterankingscorert]": 1,
            "dict [str,union [float,torch,dict [str,union [float,torch]]]]": 2,
            "dict [str,dict [str,list [tuple [float,float]]]]": 4,
            "optional [union [int,str]]": 1,
            "rewardnetworktrainerparameters": 1,
            "syntheticrewardnetbuilder__union": 1,
            "optional [syntheticrewardtype]": 1,
            "optional [normalizationdata]": 11,
            "optional [singlestepsyntheticrewardtype]": 1,
            "optional [ngramsyntheticrewardtype]": 1,
            "rlp.convnetparameters": 1,
            "convnetparameters": 1,
            "optional [ngramconvnetsyntheticrewardtype]": 1,
            "optional [sequencesyntheticrewardtype]": 1,
            "syntheticrewardnetbuilder": 2,
            "rlt.banditrewardmodelinput": 5,
            "reporterbase": 1,
            "list [reporterbase]": 1,
            "callable [...,trainingreport]": 1,
            "list [reagentlightningmodule]": 1,
            "dict [int,tuple [int,int]]": 1,
            "seq2slateparameters": 3,
            "optional [list [tuple [evaluationdatapage,evaluationdatapage]]]": 2,
            "optional [transformersyntheticrewardtype]": 1,
            "slateoptmethod": 1,
            "optional [rlp]": 1,
            "kernel": 1,
            "nextslatevaluenormmethod": 1,
            "rlt.slateqinput": 1,
            "optional [list [rltrainingoutput]]": 3,
            "callable [...,torch]": 1,
            "callable [...,any]": 1,
            "optional [union [torch,np]]": 2,
            "optional [explicitmapping]": 1,
            "optional [modulomapping]": 1,
            "rlt.idlistfeatureconfig": 1,
            "rlt.idscorelistfeatureconfig": 1,
            "mapidlist": 1,
            "mapidscorelist": 1,
            "dict [int,mapidlist]": 1,
            "dict [int,mapidscorelist]": 1,
            "list [union [str,int]]": 2,
            "optional [list [union [str,int]]]": 5,
            "union [np,sequence]": 9,
            "union [str,int]": 1,
            "tuple [tensor,...]": 2,
            "mab": 1,
            "mabalgo": 1,
            "type [mabalgo]": 1,
            "type [mab]": 2,
            "list [type [mabalgo]]": 1,
            "optional [union [dict,list [dict]]]": 1,
            "tuple [list [str],list [np]]": 1,
            "final [optional [torch]]": 4,
            "\"cbinput\"": 2,
            "cbinput": 2,
            "dqntrainerbaselightning": 1
        },
        "RQ2_3": "What types are removed (generic, numeric, ...)?",
        "anyType_removed": 0,
        "noneType_removed": 0,
        "numericType_removed": 0,
        "binarySequenceType_removed": 0,
        "textSequenceType_removed": 0,
        "mappingTypes_removed": 0,
        "setTypes_removed": 0,
        "sequenceType_removed": 0,
        "newType_removed": 0,
        "total_removed": 8863,
        "RQ2_4": "What are the top 5 types removed?",
        "typeRemoved_dict": {
            "list [np]": 58,
            "np.ndarray": 113,
            "int": 858,
            "discreteactionmodelparameters": 15,
            "list [int]": 142,
            "list [str]": 235,
            "trainingdatapage": 12,
            "optional [evaluator]": 10,
            "optional [np]": 51,
            "optional [bool]": 32,
            "none": 293,
            "modelhelper": 7,
            "str": 328,
            "trainingparameters": 9,
            "list [dict [str,float]]": 18,
            "list [float]": 152,
            "list [bool]": 21,
            "list [list [dict [str,float]]]": 1,
            "list [dict [int,float]]": 38,
            "list [list [str]]": 9,
            "optional [list [dict [int,float]]]": 5,
            "bool": 555,
            "dict [str,normalizationparameters]": 5,
            "dict [int,str]": 4,
            "core.net": 18,
            "optional [int]": 170,
            "dict [str,np]": 5,
            "optional [list [np]]": 1,
            "optional [list]": 1,
            "optional [str]": 71,
            "tuple [str,str,str]": 1,
            "stackedarray": 2,
            "continuousactionmodelparameters": 10,
            "discreteactionconvmodelparameters": 1,
            "dict [int,normalizationparameters]": 113,
            "discreteactionpredictor": 2,
            "cnnmodelparameters": 2,
            "float": 295,
            "nn.modulelist": 68,
            "torch.floattensor": 13,
            "list [list [dict [str,np]]]": 1,
            "optional [modelhelper]": 7,
            "any": 58,
            "list [list [dict [int,float]]]": 2,
            "optional [dict [int,normalizationparameters]]": 12,
            "tuple [str,float]": 1,
            "list [sample]": 1,
            "set [int]": 2,
            "torch.tensor": 528,
            "samples": 13,
            "list [trainingdatapage]": 9,
            "tuple [int,float,bool,list [str]]": 1,
            "valuetype": 14,
            "optional [valuetype]": 2,
            "optional [namedtuple]": 2,
            "state": 37,
            "action": 23,
            "possibleactions": 1,
            "stateaction": 3,
            "statepossibleactions": 1,
            "dict [str,dict [str,np]]": 1,
            "policyevaluatorparameters": 2,
            "dict [str,valueinputmodelparameters]": 1,
            "list [slate]": 1,
            "dict [str,any]": 4,
            "list [dict [str,dict [str,any]]]": 1,
            "dict [str,dict [str,list [any]]]": 1,
            "dict [str,dict [str,any]]": 1,
            "slate": 10,
            "additionalfeaturetypes": 6,
            "knndqnpredictor": 3,
            "tuple [str,list [str]]": 2,
            "evaluator": 8,
            "optional [torch]": 360,
            "continuousactiondqnpredictor": 1,
            "cnnparameters": 3,
            "convmltrainer": 2,
            "union [discreteactionmodelparameters,continuousactionmodelparameters]": 1,
            "mltrainer": 2,
            "list [cpe_estimate]": 30,
            "list": 10,
            "dict [str,list [int]]": 6,
            "dict [str,int]": 7,
            "list [torch]": 29,
            "dict [str,list [float]]": 6,
            "batchstatsforcpe": 1,
            "dict [str,dict [str,float]]": 2,
            "optional [float]": 82,
            "actorpredictor": 1,
            "_parametricdqnpredictor": 1,
            "summarywriter": 4,
            "cpeestimateset": 4,
            "dict [str,cpeestimateset]": 3,
            "cpedetails": 3,
            "list [features]": 13,
            "list [action]": 18,
            "list [list [action]]": 17,
            "list [list [float]]": 9,
            "list [list [features]]": 7,
            "list [list [bool]]": 7,
            "list [list [list [action]]]": 6,
            "list [list [list [str]]]": 1,
            "deque [int]": 6,
            "deque [str]": 2,
            "deque [float]": 43,
            "deque [bool]": 4,
            "deque [list [str]]": 2,
            "union [samples,multistepsamples]": 9,
            "deque [features]": 6,
            "deque [action]": 6,
            "deque [list [action]]": 6,
            "trainingbatch": 1,
            "list [cpedetails]": 9,
            "optional [list [dict [int,int]]]": 1,
            "dqnpredictor": 3,
            "rlt.valuetype": 6,
            "abidfeatures": 3,
            "cidfeatures": 3,
            "idonlysequence": 3,
            "idandfloatsequence": 3,
            "floatonlysequence": 3,
            "dict [str,rlt]": 8,
            "tuple [rlt,optional [rlt]]": 2,
            "tuple [rlt,rlt]": 2,
            "parametricdqnpredictor": 2,
            "list [rlt]": 7,
            "cpeestimate": 8,
            "ddpgpredictor": 2,
            "rlt.trainingbatch": 1,
            "rlt.stateinput": 2,
            "rlt.stateaction": 2,
            "rlt.actoroutput": 33,
            "rlt.singleqvalue": 1,
            "preprocesshandler": 4,
            "worldmodelfeatureextractor": 2,
            "openaigymmemorypool": 4,
            "mdnrnntrainer": 19,
            "evaluationdatapage": 31,
            "maxqlearninginput": 1,
            "list [dict]": 20,
            "sparsetodenseprocessor": 14,
            "dqntrainer": 11,
            "namedtuple": 2,
            "optional [state]": 9,
            "optional [nn]": 6,
            "modelbase": 39,
            "dict [str,tensor]": 16,
            "optional [tensor]": 42,
            "tensor": 96,
            "estimationdata": 22,
            "importancesamplingdata": 7,
            "tuple [cpeestimate,cpeestimate,cpeestimate]": 10,
            "optional [dict]": 4,
            "dict [str,union [str,float,int]]": 17,
            "xgb.booster": 12,
            "envtype": 3,
            "optional [rlt]": 11,
            "parametricdqnwithpreprocessor": 3,
            "bytesio": 3,
            "tuple [torch,...]": 1,
            "outputtransformernet": 1,
            "feedforwardparameters": 12,
            "optional [factorizationparameters]": 1,
            "optional [normalizationparameters]": 2,
            "core.blobreference": 15,
            "dict [str,dict [str,core]]": 6,
            "dict [str,core]": 4,
            "dict [str,type [rlt]]": 2,
            "dict [str,dict [str,rlt]]": 2,
            "schema.list": 4,
            "schema.blobreference": 4,
            "tuple [core,core]": 1,
            "schema.struct": 2,
            "optional [list [str]]": 32,
            "featureextractornet": 1,
            "tuple [str,str]": 1,
            "rlt.sequencefeatures": 1,
            "tuple [bool,list [int]]": 1,
            "list [dict [any,dict [any,any]]]": 2,
            "tuple [torch,torch,documentfeature]": 8,
            "recsim": 6,
            "evaluationparameters": 32,
            "rlt.preprocessedtrainingbatch": 38,
            "optional [evaluationdatapage]": 21,
            "optional [preprocessedfeaturevector]": 5,
            "stackedassociativearray": 1,
            "tuple [str,str,list [str]]": 1,
            "list [dict [any,any]]": 2,
            "dict [int,int]": 10,
            "tuple [torch,torch]": 37,
            "rlparameters": 21,
            "ddpgtrainingparameters": 2,
            "ddpgnetworkparameters": 4,
            "dict [int,list [float]]": 1,
            "optional [statefeatureparameters]": 8,
            "optimizerparameters": 18,
            "optional [list [float]]": 22,
            "sactrainingparameters": 1,
            "optional [feedforwardparameters]": 12,
            "openairundetails": 13,
            "optional [rlparameters]": 3,
            "optional [rainbowdqnparameters]": 3,
            "optional [trainingparameters]": 3,
            "optional [td3trainingparameters]": 3,
            "optional [sactrainingparameters]": 1,
            "optional [cemparameters]": 2,
            "optional [mdnrnnparameters]": 2,
            "sacmodelparameters": 2,
            "openaigymenvironment": 28,
            "videoidfeatures": 1,
            "watchedvideosequence": 1,
            "dict [str,idfeatureconfig]": 2,
            "optional [idfeaturebase]": 1,
            "optional [valuepresence]": 1,
            "type [t]": 1,
            "dict [int,tuple [torch,torch]]": 6,
            "type [u]": 1,
            "list [floatfeatureinfo]": 5,
            "t": 1,
            "u": 1,
            "optional [type [sequencefeatures]]": 1,
            "optional [sequencefeatures]": 2,
            "type": 30,
            "seq2slatetrainer": 4,
            "preprocessedtrainingbatch": 47,
            "cemparameters": 3,
            "mdnrnnparameters": 5,
            "cemtrainer": 6,
            "dict [str,type]": 7,
            "categoricalconfig": 1,
            "dirichletfullyconnectedconfig": 1,
            "gaussianfullyconnectedconfig": 1,
            "duelingconfig": 1,
            "fullyconnectedconfig": 3,
            "fullyconnectedwithembeddingconfig": 1,
            "duelingquantileconfig": 1,
            "quantileconfig": 1,
            "optional [rltrainer]": 3,
            "rlt.modelfeatureconfig": 46,
            "rlp.rlparameters": 12,
            "rlp.optimizerparameters": 10,
            "parametricdqntrainerparameters": 7,
            "optional [modelbase]": 56,
            "optional [any]": 5,
            "optional [nopublishingresults]": 1,
            "optional [novalidationresults]": 1,
            "publishingresults": 1,
            "validationresults": 1,
            "dict [str,callable]": 1,
            "dict [str,dict [str,list [float]]]": 3,
            "dict [str,float]": 10,
            "list [type]": 2,
            "optional [pydantic]": 1,
            "list [observer]": 4,
            "dict [str,list [observer]]": 3,
            "list [any]": 7,
            "aggregator": 2,
            "observer": 5,
            "optional [cpeestimate]": 30,
            "optional [dict [str,float]]": 17,
            "optional [dict [str,union [float,int,str]]]": 1,
            "doublyrobusthp": 1,
            "optional [doublyrobusthp]": 5,
            "trainvalidevaldata": 1,
            "trainer": 22,
            "seq2slatetransformernet": 10,
            "nn.module": 2,
            "rlt.preprocessedrankinginput": 18,
            "parametricdqntrainer": 8,
            "rlt.preprocessedfeaturevector": 5,
            "rewardnettrainer": 2,
            "dict": 4,
            "policy": 34,
            "actionpreprocessor": 3,
            "optional [replaybuffer]": 2,
            "optional [replaybufferaddfn]": 2,
            "optional [replaybuffertrainfn]": 2,
            "replaybuffer": 6,
            "trainerpreprocessor": 9,
            "replaybuffertrainfn": 2,
            "scorer": 4,
            "sampler": 1,
            "policypreprocessor": 6,
            "gaussiansamplerscore": 3,
            "rlt.preprocessedstate": 44,
            "rlt.preprocessedstateaction": 11,
            "np.array": 9,
            "env": 13,
            "agent": 4,
            "gym.env": 9,
            "openaigymparameters": 20,
            "list [memorynetwork]": 1,
            "memorynetwork": 7,
            "cemplannernetwork": 6,
            "cemplanner": 2,
            "tuple [int,np]": 1,
            "union [namedtuple,torch]": 1,
            "seq2slaterewardnet": 1,
            "attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module": 56,
            "normalizationdata": 33,
            "dataclass": 1,
            "object": 2,
            "actiondistribution": 11,
            "reward": 4,
            "iterable [logsample]": 3,
            "actionspace": 7,
            "iterable [log]": 2,
            "optional [banditsmodel]": 4,
            "banditsestimatorinput": 3,
            "clamper": 6,
            "actionrewards": 3,
            "estimatorresults": 15,
            "optional [resultdiffs]": 4,
            "union [float,tensor]": 4,
            "optional [union [float,tensor]]": 2,
            "probability": 3,
            "optional [action]": 2,
            "status": 1,
            "rlpolicy": 8,
            "mapping [state,sequence [mdp]]": 1,
            "optional [valuefunction]": 2,
            "sequence [mdp]": 1,
            "rlestimatorinput": 6,
            "iterable [iterable [transition]]": 1,
            "statedistribution": 4,
            "union [mapping [slateslot,float],sequence [float],np,tensor]": 1,
            "union [mutablemapping [slateslot,type],mutablesequence [type]]": 1,
            "slateslot": 6,
            "sequence [object]": 1,
            "slateitems": 3,
            "slateitemvalues": 8,
            "slateslots": 17,
            "sequence [slateitem]": 1,
            "union [mutablemapping [slateslot,slateitemvalues],mutablesequence [slateitemvalues]]": 2,
            "sequence [slateitemvalues]": 1,
            "union [mapping [slateitem,float],sequence [float],np,tensor]": 1,
            "slatequery": 1,
            "slatecontext": 13,
            "slateslotvalues": 17,
            "optional [slateslotvalues]": 1,
            "slatemetric": 1,
            "optional [slateslotitemprobabilities]": 2,
            "optional [slateitemprobabilities]": 2,
            "optional [slateitemvalues]": 2,
            "iterable [logepisode]": 2,
            "slatemodel": 2,
            "slateestimatorinput": 6,
            "optional [type]": 1,
            "sequence [type]": 2,
            "union [mapping [slateslot,object],sequence [object]]": 1,
            "slateitem": 3,
            "slateslotitemexpectations": 5,
            "slateitemprobabilities": 4,
            "optional [slateslotitemexpectations]": 2,
            "union [mapping [type,float],sequence [float],np,tensor]": 2,
            "union [mapping [type,float],sequence [float],tensor,np]": 1,
            "union [sequence [type],int]": 1,
            "union [mapping [action,float],sequence [float],np,tensor]": 1,
            "tuple [sequence [type],tensor]": 1,
            "\"values\"": 4,
            "union [sequence [type],type]": 2,
            "union [sequence [float],mapping [type,float]]": 1,
            "sequence [action]": 1,
            "tuple [action,actiondistribution]": 3,
            "optional [none]": 2,
            "environment": 5,
            "mdp": 1,
            "tuple [int,int]": 11,
            "iterable [tuple [int,int]]": 1,
            "sequence [sequence [str]]": 1,
            "valuefunction": 1,
            "gridworld": 1,
            "tuple [tuple [int,int],float,bool]": 2,
            "statereward": 1,
            "list [tuple [float,tensor]]": 1,
            "mslrdatasets": 4,
            "estimator": 2,
            "tuple [float,float]": 14,
            "multiclasscontext": 3,
            "multiclassdatarow": 1,
            "distribution": 1,
            "tuple [int]": 3,
            "sequence [tuple [int,int]]": 1,
            "list [tuple [int,int]]": 1,
            "optional [mutablemapping [tuple [int,int],float]]": 1,
            "union [sequence [tuple [tuple [int,int],float]],mutablemapping [tuple [int,int],float]]": 2,
            "loggedquery": 1,
            "\"processedquery\"": 1,
            "trainingdataset": 1,
            "trainingdata": 8,
            "tuple [np,np,np]": 2,
            "predictresults": 4,
            "sequence [float]": 1,
            "model": 1,
            "tabularpolicy": 2,
            "mapping [state,float]": 1,
            "union [float,sequence [float],torch,np]": 2,
            "\"runningaverage\"": 1,
            "optional [cnnparameters]": 2,
            "rainbowdqnparameters": 4,
            "td3trainingparameters": 3,
            "optional [list [int]]": 9,
            "transformerparameters": 3,
            "optional [baselineparameters]": 2,
            "learningmethod": 2,
            "optional [rewardclamp]": 3,
            "dqnpolicyactionset": 8,
            "sacpolicyactionset": 4,
            "preprocessor": 18,
            "discretedqnwithpreprocessor": 1,
            "discretedqnwithpreprocessorwithidlist": 2,
            "optional [postprocessor]": 1,
            "actorwithpreprocessor": 1,
            "seq2slatewithpreprocessor": 1,
            "tuple [list [str],torch]": 5,
            "rlt.rawtrainingbatch": 16,
            "tuple [list [int],list [int]]": 1,
            "tuple [torch]": 1,
            "list [normalizationparameters]": 16,
            "normalizationparameters": 3,
            "parameter": 2,
            "ordereddict": 2,
            "optional [ordereddict]": 6,
            "tuple [int,...]": 6,
            "optional [list [replayelement]]": 2,
            "list [replayelement]": 5,
            "list [tuple [float,float]]": 2,
            "documentfeature": 8,
            "optional [openaigymmemorypool]": 2,
            "tuple [torch,torch,torch,int]": 2,
            "list [summarywriter]": 2,
            "tuple [list [np],list [np],list [int],list [np],list [np],list [bool],list [np],list [np]]": 2,
            "aparam": 1,
            "foounion": 1,
            "features": 4,
            "tuple [int,float,bool,object]": 2,
            "tuple [action,action,float]": 2,
            "list [list [int]]": 2,
            "union [gridworld,gridworldcontinuous]": 2,
            "optional [onpolicypredictor]": 8,
            "tuple [list [str],list [int],list [torch],list [int],list [float],list [float],list [float],list [bool]]": 2,
            "union [str,env]": 4,
            "tuple [torch,float]": 2,
            "union [float,torch]": 4,
            "optional [memorybuffer]": 2,
            "position": 2,
            "optional [sactrainerparameters]": 2,
            "rltrainer": 9,
            "onpolicypredictor": 2,
            "optional [dict [str,any]]": 3,
            "sactrainerparameters": 8,
            "sactrainer": 8,
            "rldataset": 5,
            "mdnrnnmemorypool": 2,
            "continuousactornetbuilder__union": 8,
            "discretedqnnetbuilder__union": 16,
            "parametricdqnnetbuilder__union": 14,
            "rlp.evaluationparameters": 8,
            "c51trainerparameters": 6,
            "list [mdnrnntrainer]": 1,
            "union [rlt,rlt]": 1,
            "optional [bcqconfig]": 2,
            "dqntrainerparameters": 6,
            "evolutionpool": 1,
            "evolutionparameters": 2,
            "processgroup": 1,
            "list [dict [str,torch]]": 1,
            "dict [str,torch]": 6,
            "list [batchstats]": 3,
            "union [sacpolicyactionset,dqnpolicyactionset]": 2,
            "rlp.discreteactionmodelparameters": 2,
            "qrdqntrainerparameters": 6,
            "seq2slatetransformerparameters": 5,
            "optional [baselinenet]": 4,
            "optional [evaluationparameters]": 3,
            "optional [optimizerparameters]": 2,
            "slateqtrainerparameters": 6,
            "rlt.preprocessedtiledfeaturevector": 4,
            "rlt.preprocessedslatefeaturevector": 2,
            "td3modelparameters": 1,
            "dict [str,idmapping]": 4,
            "list [idlistfeatureconfig]": 4,
            "valuepresence": 2,
            "idlistfeatures": 3,
            "preprocessedfeaturevector": 43,
            "featurevector": 14,
            "preprocessedtiledfeaturevector": 4,
            "preprocessedslatefeaturevector": 2,
            "union [torch,torch]": 1,
            "union [featurevector,torch]": 3,
            "union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput,preprocessedrankinginput,preprocessedslateqinput]": 1,
            "union [rawbaseinput,rawdiscretedqninput,rawparametricdqninput,rawpolicynetworkinput]": 1,
            "union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput]": 1,
            "optional [dict [int,str]]": 4,
            "dict [int,normalization]": 3,
            "tablespec": 84,
            "preprocessingoptions": 5,
            "categoricaldqnnetbuilder__union": 8,
            "c51trainer": 6,
            "qrdqnnetbuilder__union": 5,
            "qrdqntrainer": 7,
            "optional [preprocessingoptions]": 23,
            "optional [readeroptions]": 16,
            "dict [str,normalizationdata]": 116,
            "optional [tuple [float,float]]": 38,
            "rewardoptions": 91,
            "dataset": 65,
            "optional [dataset]": 72,
            "batchpreprocessor": 35,
            "rltrainingoutput": 61,
            "optional [dict [str,normalizationdata]]": 10,
            "optional [rewardoptions]": 17,
            "modelmanager": 11,
            "optional [recurringperiod]": 11,
            "publishingresult": 2,
            "nopublishingresults": 3,
            "modelmanager__union": 4,
            "optional [modelvalidator__union]": 3,
            "optional [modelpublisher__union]": 2,
            "modelvalidator__union": 1,
            "modelpublisher__union": 1,
            "trainevalsampleranges": 6,
            "optional [validationresult__union]": 5,
            "optional [publishingresult__union]": 5,
            "optional [rltrainingreport]": 3,
            "validationresult": 2,
            "novalidationresults": 2,
            "extradata": 10,
            "modulewithdimensions": 4,
            "dqnbase": 1,
            "optional [modulewithdimensions]": 4,
            "rlt.allactionqvalues": 5,
            "preprocessedmemorynetworkinput": 2,
            "preprocessedstate": 1,
            "torch.device": 6,
            "iterable [observer]": 2,
            "trainingpagehandler": 1,
            "evaluationpagehandler": 1,
            "rlt.featuredata": 18,
            "cemtrainerparameters": 4,
            "mdnrnntrainerparameters": 5,
            "rawfeaturedata": 10,
            "rlt.slatefeaturevector": 1,
            "featuredata": 49,
            "union [rawbaseinput,rawparametricdqninput]": 1,
            "preprocessedparametricdqninput": 1,
            "optional [valuenetbuilder__union]": 6,
            "optional [list [tuple [int,str]]]": 17,
            "optional [cemtrainerparameters]": 1,
            "optional [mdnrnntrainerparameters]": 1,
            "optional [trainer]": 8,
            "poststep": 2,
            "optimizer__union": 10,
            "valuemode": 1,
            "rlt.tensordataclass": 2,
            "logging.logger": 10,
            "mutablesequence [float]": 4,
            "optional [mapping [str,iterable [estimatorresults]]]": 1,
            "list [tuple [torch,torch]]": 1,
            "rlt.servingfeaturedata": 1,
            "union [str,torch]": 3,
            "spaces.box": 1,
            "modelfeatureconfigprovider__union": 6,
            "\"gym.env\"": 1,
            "tinydb": 2,
            "optional [resourceoptions]": 13,
            "readeroptions": 48,
            "actorcritictrainingreport": 2,
            "dqntrainingreport": 3,
            "parametricdqntrainingreport": 2,
            "dict [str,valuelistobserver]": 2,
            "dict [str,intervalaggregatingobserver]": 2,
            "trainingreport": 2,
            "memorynetworkinput": 6,
            "td3trainerparameters": 3,
            "td3trainer": 5,
            "list [tuple [int,str]]": 3,
            "datafetcher": 34,
            "worldmodel": 3,
            "valuenetbuilder__union": 6,
            "seq2rewardtrainerparameters": 3,
            "seq2rewardtrainer": 5,
            "slateqtrainer": 5,
            "optional [trainingreport__union]": 2,
            "list [idscorelistfeatureconfig]": 3,
            "idlistfeature": 3,
            "idscorelistfeature": 3,
            "optional [doclist]": 3,
            "servingidlistfeature": 3,
            "servingidscorelistfeature": 3,
            "optional [featuredata]": 12,
            "optional [extradata]": 12,
            "union [preprocessedrankinginput]": 4,
            "optional [batchpreprocessor]": 2,
            "ossdataset": 1,
            "optional [rlestimatorinput]": 1,
            "list [tuple [str,agg]]": 3,
            "resourceoptions": 8,
            "optional [modelvalidator]": 1,
            "modelvalidator": 1,
            "modelpublisher": 1,
            "tuple [dataset,dataset]": 1,
            "attribute(\n    value=attribute(\n        value=name(\n            value='torch',\n            lpar=[],\n            rpar=[],\n        ),\n        attr=name(\n            value='utils',\n            lpar=[],\n            rpar=[],\n        ),\n        dot=dot(\n            whitespace_before=simplewhitespace(\n                value='',\n            ),\n            whitespace_after=simplewhitespace(\n                value='',\n            ),\n        ),\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='data',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).dataloader": 1,
            "variancethreshold": 1,
            "rlt.memorynetworkinput": 8,
            "iterabledataset": 1,
            "envwrapper": 4,
            "trajectory": 2,
            "discretecrrtrainer": 2,
            "preprocessedrankinginput": 4,
            "reinforceparams": 1,
            "rlt.policygradientinput": 2,
            "episodicdataset": 1,
            "callable": 1,
            "modulenametoentityid": 1,
            "optional [dict [str,bytes]]": 7,
            "tuple [pandas,str]": 1,
            "optional [ipsclamp]": 1,
            "optional [simulationparameters]": 1,
            "ipsclampmethod": 1,
            "dict [str,str]": 1,
            "policygradientinput": 1,
            "rlt.discretedqninput": 1,
            "optional [reagentdatamodule]": 18,
            "crrtrainerparameters": 1,
            "discreteactornetbuilder__union": 1,
            "optional [tablespec]": 3,
            "optional [pl]": 5,
            "ppotrainerparameters": 1,
            "optional [policy]": 4,
            "ppotrainer": 1,
            "reinforcetrainerparameters": 1,
            "reinforcetrainer": 1,
            "optional [dict [str,str]]": 1,
            "compressmodeltrainer": 1,
            "dict [str,bytes]": 1,
            "list [optimizer]": 2,
            "seq2rewardtrainingreport": 1,
            "slateqtrainingreport": 1,
            "worldmodeltrainingreport": 1,
            "optional [normalizationdata]": 4,
            "seq2slateparameters": 4,
            "transition": 1,
            "optional [poststep]": 1,
            "optional [postepisode]": 1,
            "optional [union [torch,np]]": 1,
            "optional [tuple [float,float,float]]": 1,
            "dict [int,dict [int,int]]": 3,
            "list [union [str,int]]": 2,
            "optional [list [union [str,int]]]": 5,
            "union [str,int]": 1
        },
        "RQ2_5": "What types are the top 10 changed ?",
        "total_changed": 884,
        "typeChanged_dict_var": {
            "state -> optional [state]": 2,
            "optional [np] -> optional [torch]": 10,
            "optional [np] -> torch.tensor": 1,
            "torch.tensor -> optional [np]": 1,
            "optional [torch] -> optional [np]": 8,
            "list [list [str]] -> list [dict [str,float]]": 1,
            "possibleactions -> optional [action]": 2,
            "list [dict [int,float]] -> list [list [dict [int,float]]]": 1,
            "list [str] -> list [list [str]]": 1,
            "list [list [str]] -> list [list [list [str]]]": 1,
            "union [maxqlearninginput,sarsainput] -> union [maxqlearninginput,sarsainput,memorynetworkinput]": 1,
            "type [sequencefeatures] -> optional [type [sequencefeatures]]": 1,
            "np.array -> np.ndarray": 3,
            "list [object] -> list [torch]": 1,
            "rlt.valuetype -> torch.tensor": 4,
            "optional [valuetype] -> optional [valuepresence]": 1,
            "optional [valuetype] -> valuepresence": 1,
            "optional [valuetype] -> optional [torch]": 7,
            "valuetype -> torch.tensor": 22,
            "action -> discreteaction": 2,
            "optional [state] -> state": 2,
            "optional [action] -> parametricaction": 2,
            "action -> parametricaction": 2,
            "valuetype -> state": 1,
            "optional [valuetype] -> optional [np]": 1,
            "union [maxqlearninginput,sarsainput,memorynetworkinput] -> union [baseinput,discretedqninput,parametricdqninput,sarsainput,memorynetworkinput,policynetworkinput]": 1,
            "state -> torch.tensor": 5,
            "action -> torch.tensor": 4,
            "state -> featurevector": 3,
            "discreteaction -> featurevector": 1,
            "discreteaction -> torch.tensor": 1,
            "parametricaction -> torch.tensor": 4,
            "torch.tensor -> torch.bytetensor": 2,
            "action -> torch.bytetensor": 1,
            "optional [state] -> featurevector": 1,
            "action -> union [torch,torch]": 1,
            "union [baseinput,discretedqninput,parametricdqninput,sarsainput,memorynetworkinput,policynetworkinput] -> union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput]": 1,
            "torch.tensor -> preprocessedfeaturevector": 12,
            "torch.bytetensor -> torch.tensor": 8,
            "int -> optional [int]": 2,
            "featurevector -> preprocessedfeaturevector": 1,
            "preprocessedfeaturevector -> preprocessedslatefeaturevector": 2,
            "torch.tensor -> optional [torch]": 5,
            "optimizerparameters -> optional [optimizerparameters]": 1,
            "optional [sequencefeaturebase] -> optional [sequencefeatures]": 1,
            "baselineparameters -> optional [baselineparameters]": 1,
            "np.ndarray -> optional [np]": 1,
            "nopublishingresults -> optional [nopublishingresults]": 1,
            "novalidationresults -> optional [novalidationresults]": 1,
            "optional [rlt] -> rlt.modelfeatureconfig": 1,
            "union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput,preprocessedrankinginput,preprocessedslateqinput] -> union [preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput,preprocessedrankinginput]": 1,
            "torch.tensor -> featurevector": 2,
            "union [rawbaseinput,rawdiscretedqninput,rawparametricdqninput,rawpolicynetworkinput] -> union [rawbaseinput,rawparametricdqninput,rawpolicynetworkinput]": 1,
            "qrdqnnetbuilder__union -> discretedqnnetbuilder__union": 3,
            "discretedqnnetbuilder__union -> qrdqnnetbuilder__union": 2,
            "extradata -> optional [extradata]": 1,
            "featurevector -> union [featurevector,torch]": 1,
            "union [preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput,preprocessedrankinginput] -> union [preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedrankinginput]": 1,
            "any -> extradata": 1,
            "union [rawbaseinput,rawparametricdqninput,rawpolicynetworkinput] -> union [rawbaseinput,rawparametricdqninput]": 1,
            "optional [cemparameters] -> optional [cemtrainerparameters]": 1,
            "optional [mdnrnnparameters] -> optional [mdnrnntrainerparameters]": 1,
            "union [torch,torch] -> torch.tensor": 1,
            "preprocessedfeaturevector -> featuredata": 11,
            "optional [preprocessedfeaturevector] -> optional [featuredata]": 4,
            "featurevector -> rawfeaturedata": 9,
            "list [str] -> list [tuple [str,tuple [int]]]": 1,
            "list [str] -> list [tuple [str,int]]": 1,
            "optional [dict [int,normalizationparameters]] -> dict [int,normalizationparameters]": 1,
            "union [preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedrankinginput] -> union [preprocessedparametricdqninput,preprocessedrankinginput]": 1,
            "preprocessedslatefeaturevector -> slatefeaturevector": 2,
            "slatefeaturevector -> torch.tensor": 2,
            "union [preprocessedparametricdqninput,preprocessedrankinginput] -> union [preprocessedrankinginput]": 1,
            "rlp.optimizerparameters -> optimizer__union": 3,
            "int -> bool": 1,
            "td3trainingparameters -> td3trainerparameters": 1,
            "iterable [logsample] -> sequence [logsample]": 1,
            "type -> valuetype": 1,
            "tensor -> optional [tensor]": 2,
            "union [float,tensor] -> float": 3,
            "union [float,tensor] -> optional [float]": 1,
            "slateitemfeatures -> optional [slateitemfeatures]": 1,
            "idlistfeatures -> idlistfeature": 1,
            "tuple [int] -> tuple [int,...]": 1,
            "reward -> sequence [reward]": 1,
            "optional [list [int]] -> optional [np]": 1,
            "optional [rltrainingreport] -> optional [trainingreport__union]": 1,
            "list [str] -> optional [list [str]]": 1,
            "dict [str,idmapping] -> dict [str,idmappingunion]": 1
        },
        "typeChanged_dict_arg": {
            "list [dict [str,float]] -> list [dict [int,float]]": 10,
            "list [list [dict [str,float]]] -> list [list [dict [int,float]]]": 1,
            "dict [str,normalizationparameters] -> dict [int,normalizationparameters]": 6,
            "list [np] -> tuple [np,np]": 1,
            "np.ndarray -> list [np]": 1,
            "np.ndarray -> str": 14,
            "tuple [np,np] -> stackedarray": 1,
            "optional [bool] -> bool": 2,
            "optional [list] -> optional [np]": 1,
            "discreteactionmodelparameters -> continuousactionmodelparameters": 1,
            "normalizationparameters -> list [normalizationparameters]": 6,
            "list [str] -> list [int]": 2,
            "list [int] -> list [str]": 1,
            "optional [np] -> torch.tensor": 2,
            "optional [np] -> optional [torch]": 15,
            "torch.tensor -> torch.tensor": 7,
            "ordereddict -> namedtuple": 1,
            "optional [torch] -> torch.tensor": 1,
            "torch.tensor -> union [mt,torch]": 2,
            "trainingdatapage -> trainingbatch": 7,
            "rltrainer -> dqntrainer": 3,
            "union [rlpredictor,gympredictor,none] -> union [rlpredictor,onpolicypredictor,none]": 4,
            "mt.trainingbatch -> rlt.preprocessedtrainingbatch": 1,
            "union [mt,torch] -> torch.tensor": 2,
            "optional [mt] -> optional [torch]": 1,
            "trainingbatch -> preprocessedtrainingbatch": 10,
            "trainingbatch -> rlt.rawtrainingbatch": 4,
            "rlt.trainingbatch -> rlt.preprocessedtrainingbatch": 1,
            "torch.tensor -> rlt.preprocessedfeaturevector": 2,
            "optional [torch] -> optional [rlt]": 1,
            "torch.tensor -> preprocessedfeaturevector": 15,
            "torch.bytetensor -> torch.tensor": 1,
            "torch.tensor -> optional [torch]": 4,
            "dqntrainer -> parametricdqntrainer": 1,
            "optional [int] -> int": 3,
            "dict -> openaigymparameters": 2,
            "str -> int": 1,
            "union [rlpredictor,onpolicypredictor,none] -> optional [onpolicypredictor]": 4,
            "optional [dict] -> optional [doublyrobusthp]": 3,
            "float -> union [float,torch]": 2,
            "dqntrainer -> trainer": 1,
            "continuousactionmodelparameters -> parametricdqntrainerparameters": 1,
            "sacmodelparameters -> sactrainerparameters": 1,
            "discreteactionmodelparameters -> dqntrainerparameters": 1,
            "discreteactionmodelparameters -> qrdqntrainerparameters": 1,
            "discreteactionmodelparameters -> c51trainerparameters": 1,
            "baselinenet -> optional [baselinenet]": 1,
            "np.ndarray -> optional [np]": 1,
            "bool -> optional [bool]": 3,
            "continuousactornetbuilderchooser -> continuousactornetbuilder__union": 1,
            "discretedqnnetbuilderchooser -> discretedqnnetbuilder__union": 1,
            "parametricdqnnetbuilderchooser -> parametricdqnnetbuilder__union": 1,
            "dict [int,normalization] -> dict [int,normalizationparameters]": 1,
            "int -> optional [int]": 5,
            "gym.env -> str": 1,
            "any -> np.array": 1,
            "rlt.preprocessedstateaction -> rlt.preprocessedstate": 1,
            "union [preprocessedbaseinput,preprocesseddiscretedqninput,preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput] -> union [preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput]": 1,
            "rlt.preprocessedtrainingbatch -> rlt.preprocessedslateqinput": 1,
            "rlt.rawtrainingbatch -> dict [str,torch]": 4,
            "torch.floattensor -> torch.tensor": 1,
            "rlt.preprocesseddiscretedqninput -> rlt.discretedqninput": 3,
            "poststep -> optional [poststep]": 1,
            "gym.env -> \"gym.env\"": 1,
            "optional [union [str,torch]] -> union [str,torch]": 2,
            "np.array -> any": 1,
            "any -> rlt.preprocessedstate": 2,
            "union [preprocessedparametricdqninput,preprocessedmemorynetworkinput,preprocessedpolicynetworkinput] -> union [preprocessedparametricdqninput,preprocessedmemorynetworkinput]": 1,
            "list [str] -> optional [list [str]]": 3,
            "td3modelparameters -> td3trainingparameters": 1,
            "np.array -> np.ndarray": 1,
            "list [observer] -> iterable [observer]": 2,
            "preprocessedtrainingbatch -> preprocessedmemorynetworkinput": 2,
            "any -> np.ndarray": 2,
            "cemparameters -> cemtrainerparameters": 2,
            "mdnrnnparameters -> mdnrnntrainerparameters": 2,
            "rlt.preprocessedtrainingbatch -> rlt.preprocessedmemorynetworkinput": 2,
            "rlt.preprocessedfeaturevector -> rlt.featuredata": 7,
            "rlt.preprocessedstate -> rlt.featuredata": 6,
            "featurevector -> rawfeaturedata": 1,
            "preprocessedfeaturevector -> featuredata": 7,
            "torch.tensor -> np.ndarray": 1,
            "np.ndarray -> torch.tensor": 4,
            "optional [dataset] -> dataset": 1,
            "seq2slatetransformerparameters -> transformerparameters": 1,
            "np.ndarray -> any": 2,
            "any -> rlt.featuredata": 2,
            "str -> optional [str]": 1,
            "list [str] -> list [tuple [str,int]]": 1,
            "list [str] -> list [tuple [str,tuple [int]]]": 1,
            "preprocessedmemorynetworkinput -> memorynetworkinput": 5,
            "rlt.preprocessedmemorynetworkinput -> rlt.memorynetworkinput": 4,
            "union [preprocessedparametricdqninput,preprocessedmemorynetworkinput] -> preprocessedparametricdqninput": 1,
            "rlt.preprocessedslatefeaturevector -> rlt.slatefeaturevector": 2,
            "rlt.preprocessedslateqinput -> rlt.slateqinput": 1,
            "rlt.slatefeaturevector -> torch.tensor": 1,
            "\"recsimgymenv\" -> env": 1,
            "\"recsimgymenv\" -> gym.env": 1,
            "optional [modelpublisher__union] -> modelpublisher__union": 1,
            "union [mutablemapping [slateslot,type],mutablesequence [type]] -> union [mutablemapping [slateslot,valuetype],mutablesequence [valuetype]]": 1,
            "sequence [object] -> sequence [valuetype]": 1,
            "slate -> optional [slate]": 1,
            "union [mapping [type,float],sequence [float],np,tensor] -> union [mapping [keytype,valuetype],sequence [valuetype]]": 1,
            "type -> keytype": 2,
            "float -> valuetype": 1,
            "union [mapping [type,float],sequence [float],tensor,np] -> union [mapping [valuetype,float],sequence [float],tensor,np]": 1,
            "type -> valuetype": 2,
            "union [sequence [type],int] -> union [sequence [valuetype],int]": 1,
            "union [mapping [type,float],sequence [float],np,tensor] -> union [mapping [valuetype,float],sequence [float],np,tensor]": 1,
            "\"processedquery\" -> \"trainingquery\"": 1,
            "tensor -> np.ndarray": 1,
            "seq2slaterewardnet -> seq2slaterewardnetbase": 1,
            "seq2slatetransformerparameters -> seq2slateparameters": 4,
            "trainer -> optional [trainer]": 2,
            "clamper -> optional [clamper]": 8,
            "slateslotvalues -> optional [slateslotvalues]": 3,
            "rlt.featuredata -> any": 1,
            "rlt.featuredata -> union [rlt,tuple [torch,torch]]": 1,
            "optional [none] -> optional [state]": 1,
            "optional [pydantic] -> optional [any]": 1,
            "optional [rlt] -> rlt.modelfeatureconfig": 2,
            "env -> envwrapper": 9,
            "union [np,float] -> torch.tensor": 4,
            "gym.env -> envwrapper": 5,
            "optional [rewardoptions] -> rewardoptions": 1,
            "optional [readeroptions] -> readeroptions": 1,
            "optional [dict [str,str]] -> dict [str,str]": 1,
            "optional [readeroptions] -> optional [ossreaderoptions]": 2,
            "dict [str,str] -> optional [dict [str,str]]": 1,
            "optional [ossreaderoptions] -> optional [readeroptions]": 2,
            "env__union -> envwrapper": 1,
            "dataset -> optional [dataset]": 8,
            "tablespec -> optional [tablespec]": 1,
            "dict [str,normalizationdata] -> optional [dict [str,normalizationdata]]": 2,
            "policy -> optional [policy]": 1,
            "str -> seq2slatemode": 2,
            "rlt.preprocessedtrainingbatch -> rlt.preprocessedrankinginput": 7,
            "preprocessedtrainingbatch -> preprocessedrankinginput": 3,
            "rlt.featuredata -> torch.tensor": 3,
            "rlt.policygradientinput -> list [rlt]": 1,
            "list [rlt] -> rlt.policygradientinput": 2,
            "optional [resourceoptions] -> resourceoptions": 7,
            "optional [torch] -> optional [union [torch,np]]": 1,
            "rlt.preprocessedrankinginput -> rlt.tensordataclass": 1,
            "rlt.tensordataclass -> rlt.preprocessedrankinginput": 1,
            "rewardoptions -> optional [rewardoptions]": 1,
            "trainer -> reagentlightningmodule": 4,
            "rlt.policygradientinput -> union [rlt,dict [str,torch]]": 2,
            "union [rlt,dict [str,torch]] -> rlt.policygradientinput": 1,
            "fullyconnectednetwork -> floatfeaturefullyconnected": 1,
            "any -> union [rlt,tuple [torch,torch]]": 1,
            "np.ndarray -> tensor": 1,
            "union [np,sequence] -> tensor": 9,
            "optional [union [torch,np]] -> optional [torch]": 2,
            "int -> str": 2
        },
        "typeChanged_dict_ret": {
            "np.ndarray -> none": 5,
            "trainingdatapage -> tuple [list [dict [str,float]],list [dict [str,float]],list [float],list [dict [str,float]],list [dict [str,float]],list [bool],list [list [dict [str,float]]],list [dict [int,float]]]": 1,
            "trainingdatapage -> tuple [list [dict [str,float]],list [str],list [float],list [dict [str,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]]": 1,
            "int -> str": 2,
            "np.ndarray -> tuple [str,list [str]]": 1,
            "dict [int,str] -> list [int]": 1,
            "tuple [list [dict [str,float]],list [str],list [float],list [dict [str,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]] -> tuple [list [dict [int,float]],list [str],list [float],list [dict [int,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]]": 4,
            "tuple [list [dict [str,float]],list [dict [str,float]],list [float],list [dict [str,float]],list [dict [str,float]],list [bool],list [list [dict [str,float]]],list [dict [int,float]]] -> tuple [list [dict [int,float]],list [dict [int,float]],list [float],list [dict [int,float]],list [dict [int,float]],list [bool],list [list [dict [int,float]]],list [dict [int,float]]]": 2,
            "str -> int": 1,
            "np.ndarray -> bool": 1,
            "rlpredictor -> none": 1,
            "trainingdatapage -> list [trainingdatapage]": 4,
            "none -> np.ndarray": 2,
            "np.ndarray -> str": 5,
            "continuousactiondqnpredictor -> none": 1,
            "discreteactionpredictor -> none": 1,
            "none -> str": 1,
            "bool -> str": 1,
            "ddpgpredictor -> none": 2,
            "list [list [float]] -> np.ndarray": 1,
            "list [float] -> np.ndarray": 1,
            "list [str] -> str": 1,
            "ddpgpredictor -> np.ndarray": 1,
            "float -> none": 1,
            "tuple [list [dict [int,float]],list [str],list [float],list [dict [int,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]] -> tuple [list [dict [int,float]],list [str],list [float],list [float],list [dict [int,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]]": 4,
            "tuple [list [dict [int,float]],list [dict [int,float]],list [float],list [dict [int,float]],list [dict [int,float]],list [bool],list [list [dict [int,float]]],list [dict [int,float]]] -> tuple [list [dict [int,float]],list [dict [int,float]],list [float],list [float],list [dict [int,float]],list [dict [int,float]],list [bool],list [list [dict [int,float]]],list [dict [int,float]]]": 2,
            "str -> tuple [str,float]": 1,
            "tuple [list [dict [int,float]],list [str],list [float],list [float],list [dict [int,float]],list [str],list [bool],list [list [str]],list [dict [int,float]]] -> samples": 4,
            "tuple [list [dict [int,float]],list [dict [int,float]],list [float],list [float],list [dict [int,float]],list [dict [int,float]],list [bool],list [list [dict [int,float]]],list [dict [int,float]]] -> samples": 2,
            "tuple [list [object],list [int],list [float],list [float],list [float]] -> tuple [list [object],list [int],list [float],list [float],list [float],list [bool]]": 1,
            "tuple [list [np],list [np],list [int],list [np],list [np],list [bool],list [np],list [dict [int,float]]] -> tuple [list [np],list [np],list [int],list [np],list [np],list [bool],list [np],list [float]]": 1,
            "none -> torch.tensor": 7,
            "bytesio -> list [str]": 2,
            "ordereddict -> namedtuple": 3,
            "none -> ddpgpredictor": 1,
            "none -> tuple [torch,torch]": 2,
            "dqnpredictor -> torch.tensor": 1,
            "tuple [list [object],list [int],list [float],list [float],list [float],list [bool]] -> tuple [list [str],list [int],list [object],list [int],list [float],list [float],list [float],list [bool]]": 1,
            "none -> samples": 1,
            "samples -> union [samples,multistepsamples]": 3,
            "tuple [torch,torch] -> tuple [rlt,optional [rlt]]": 2,
            "tuple [rlt,optional [rlt]] -> tuple [rlt,rlt]": 1,
            "tuple [int,float,bool,list [str]] -> tuple [int,float,bool,object]": 1,
            "tuple [str,float] -> tuple [str,action,float]": 1,
            "tuple [rlt,optional [rlt]] -> int": 1,
            "torch.tensor -> dqnpredictor": 1,
            "rlt.sequencefeatures -> core.blobreference": 1,
            "list [int] -> list [rlt]": 1,
            "list [int] -> list [floatfeatureinfo]": 1,
            "tuple [torch,torch] -> tuple [rlt,rlt]": 1,
            "tuple [str,action,float] -> tuple [action,action,float]": 1,
            "torch.floattensor -> union [namedtuple,torch]": 1,
            "tuple [list [str],list [int],list [object],list [int],list [float],list [float],list [float],list [bool]] -> tuple [list [str],list [int],list [torch],list [int],list [float],list [float],list [float],list [bool]]": 1,
            "tuple [np,float] -> tuple [torch,float]": 1,
            "np.ndarray -> torch.tensor": 3,
            "torch.floattensor -> tuple [torch,torch]": 1,
            "tuple [str,list [str]] -> tuple [str,str,list [str]]": 1,
            "torch.tensor -> tuple [torch,torch]": 2,
            "trainingdatapage -> trainingbatch": 4,
            "namedtuple -> any": 2,
            "trainingbatch -> rlt.preprocessedtrainingbatch": 4,
            "trainingbatch -> rlt.rawtrainingbatch": 4,
            "none -> list [int]": 1,
            "list [int] -> none": 1,
            "tuple [cpeestimate,cpeestimate,cpeestimate] -> trainvalidevaldata": 2,
            "trainvalidevaldata -> tuple [cpeestimate,cpeestimate,cpeestimate]": 1,
            "int -> tuple [torch,torch,torch,int]": 1,
            "t -> dict [str,idfeatureconfig]": 1,
            "type -> list [str]": 1,
            "none -> int": 1,
            "type -> str": 3,
            "type -> bool": 1,
            "publishingoutput -> publishingresult": 1,
            "publishingoutput -> nopublishingresults": 1,
            "validationoutput -> validationresult": 1,
            "validationoutput -> novalidationresults": 1,
            "dict [int,normalization] -> dict [int,normalizationparameters]": 2,
            "none -> dataset": 1,
            "list [str] -> policy": 1,
            "none -> rltrainer": 1,
            "any -> rlt.preprocessedstate": 1,
            "rlt.preprocessedtrainingbatch -> rlt.preprocesseddiscretedqninput": 1,
            "rlt.preprocesseddiscretedqninput -> rlt.tensordataclass": 1,
            "torch.floattensor -> torch.tensor": 1,
            "rlt.preprocesseddiscretedqninput -> rlt.discretedqninput": 1,
            "union [namedtuple,torch] -> rlt.allactionqvalues": 1,
            "rlt.allactionqvalues -> union [namedtuple,torch]": 1,
            "rlt.preprocessedstate -> any": 1,
            "rlt.preprocessedtrainingbatch -> rlt.policynetworkinput": 1,
            "policy -> bool": 2,
            "dict -> dict [str,float]": 1,
            "rlt.preprocessedtrainingbatch -> rlt.preprocessedmemorynetworkinput": 1,
            "union [namedtuple,torch] -> tuple [torch,torch,torch,torch]": 1,
            "modelbase -> models.modelbase": 1,
            "tuple [rlt,optional [rlt]] -> tuple [torch,optional [torch]]": 1,
            "tuple [rlt,rlt] -> tuple [torch,torch]": 1,
            "rlt.preprocessedstate -> rlt.featuredata": 1,
            "preprocessedfeaturevector -> featuredata": 1,
            "int -> rlt.actoroutput": 2,
            "rlt.actoroutput -> attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='distributions',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).categorical": 1,
            "torch.tensor -> rlt.actoroutput": 3,
            "rlt.actoroutput -> torch.tensor": 1,
            "qrdqntrainer -> policy": 1,
            "bool -> policy": 4,
            "rlt.preprocessedmemorynetworkinput -> rlt.memorynetworkinput": 1,
            "union [rlt,rlt] -> none": 1,
            "rltrainer -> trainer": 3,
            "int -> optional [int]": 1,
            "torch.tensor -> rlt.doclist": 1,
            "rlt.preprocessedtrainingbatch -> rlt.parametricdqninput": 1,
            "int -> rlt.modelfeatureconfig": 1,
            "dict [int,normalizationparameters] -> none": 1,
            "str -> policy": 1,
            "none -> list [str]": 3,
            "float -> trajectory": 1,
            "estimatorresults -> bool": 1,
            "estimatorresults -> optional [estimatorresult]": 2,
            "estimatorresults -> optional [union [estimatorresult,estimatorresults]]": 1,
            "estimatorresults -> logging.logger": 1,
            "optional [type] -> slateslot": 1,
            "sequence [type] -> sequence [valuetype]": 1,
            "union [mapping [slateslot,object],sequence [object]] -> union [mapping [slateslot,valuetype],sequence [valuetype]]": 1,
            "slateslotvalues -> sequence [slateitem]": 1,
            "slate -> slateslotfeatures": 1,
            "slateitems -> iterable [tuple [sequence [slateitem],float]]": 1,
            "estimatorresults -> optional [estimatorsampleresult]": 4,
            "float -> valuetype": 1,
            "type -> keytype": 1,
            "int -> valuetype": 1,
            "tuple [sequence [type],tensor] -> int": 1,
            "int -> tensor": 1,
            "sequence [type] -> \"values\"": 1,
            "union [sequence [type],type] -> union [sequence [keytype],keytype]": 2,
            "type -> valuetype": 2,
            "union [sequence [float],mapping [type,float]] -> union [sequence [float],mapping [valuetype,float]]": 1,
            "slateitemvalues -> tensor": 1,
            "slateslotitemexpectations -> slateslotvalues": 2,
            "bool -> none": 1,
            "list [int] -> tuple [list [str],torch]": 1,
            "list [int] -> torch.tensor": 1,
            "list [str] -> rlt.modelfeatureconfig": 2,
            "tuple [reward,reward] -> tuple [optional [reward],optional [reward]]": 1,
            "logging.logger -> optional [mapping [str,iterable [estimatorresults]]]": 1,
            "policy -> qrdqntrainer": 1,
            "any -> tuple [any,float]": 1,
            "modelfeatureconfigprovider__union -> gym.env": 1,
            "tuple [optional [reward],optional [reward]] -> tuple [optional [reward],torch,torch]": 1,
            "tuple [float,float,float,float] -> tuple [float,float,float]": 1,
            "tuple [any,float] -> tuple [any,optional [float]]": 1,
            "list [int] -> dict [int,int]": 1,
            "union [sequence [keytype],keytype] -> sequence [keytype]": 2,
            "statereward -> float": 1,
            "cpedetails -> none": 1,
            "dict [str,float] -> none": 1,
            "bool -> dict [str,normalizationdata]": 1,
            "trainer -> batchpreprocessor": 1,
            "trainer -> policy": 1,
            "rltrainingoutput -> policy": 1,
            "rltrainingoutput -> attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module": 1,
            "rlt.modelfeatureconfig -> bool": 1,
            "none -> cpedetails": 1,
            "none -> dict [str,float]": 1,
            "gym.env -> rlt.featuredata": 1,
            "pl.trainresult -> torch.tensor": 1,
            "attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module -> dict [str,torch]": 2,
            "dict [str,normalizationdata] -> preprocessingoptions": 1,
            "str -> modelbase": 2,
            "normalizationdata -> discretecrrtrainer": 1,
            "list [str] -> list [optimizer]": 1,
            "attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module -> seq2rewardreporter": 1,
            "bool -> rewardoptions": 1,
            "tuple [list [str],torch] -> torch.tensor": 1,
            "list [str] -> batchpreprocessor": 1,
            "dict [str,normalizationdata] -> list [str]": 6,
            "bool -> list [str]": 2,
            "bool -> rlt.modelfeatureconfig": 3,
            "dataset -> optional [int]": 1,
            "dataset -> trainer": 1,
            "dataset -> list [str]": 1,
            "dict [str,torch] -> attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module": 1,
            "list [str] -> attribute(\n    value=name(\n        value='torch',\n        lpar=[],\n        rpar=[],\n    ),\n    attr=name(\n        value='nn',\n        lpar=[],\n        rpar=[],\n    ),\n    dot=dot(\n        whitespace_before=simplewhitespace(\n            value='',\n        ),\n        whitespace_after=simplewhitespace(\n            value='',\n        ),\n    ),\n    lpar=[],\n    rpar=[],\n).module": 1,
            "str -> list [str]": 1,
            "list [str] -> bool": 1,
            "list [str] -> optional [int]": 2,
            "list [str] -> dict [str,normalizationdata]": 4,
            "list [str] -> trainer": 1,
            "trainer -> reagentlightningmodule": 1,
            "rltrainingoutput -> tuple [rltrainingoutput,pl]": 1,
            "rltrainingoutput -> rlt.modelfeatureconfig": 2,
            "tuple [torch,torch,torch,torch] -> tuple [torch,torch,torch]": 1,
            "optional [int] -> preprocessingoptions": 1,
            "np.ndarray -> tensor": 4
        },
        "s3": "------------------------------------------------------------------------",
        "RQ3_1": "Where are types added (function args, function returns, variables)?",
        "functionArgsType_added": 6978,
        "functionReturnsType_added": 2337,
        "variableType_added": 3903,
        "RQ3_2": "Where are types removed (function args, function returns, variables)?",
        "functionArgsType_removed": 4314,
        "functionReturnsType_removed": 1581,
        "variableType_removed": 2968,
        "RQ3_3": "Where are types changed (function args, function returns, variables?",
        "functionArgsType_changed": 386,
        "functionReturnsType_changed": 286,
        "variableType_changed": 212,
        "s4": "------------------------------------------------------------------------",
        "RQ4_1": "Are types added along with other changes around this code or in commits that only add types?",
        "typeAnnotation_added_per_commit": 0,
        "list_typeAnnotation_added_per_commit": [],
        "RQ4_2": "Are types removed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_removed_per_commit": 0,
        "list_typeAnnotation_removed_per_commit": [],
        "RQ4_3": "Are types changed along with other changes around this code or in commits that only add types?",
        "typeAnnotation_changed_per_commit": 0,
        "list_typeAnnotation_changed_per_commit": [
            0.38992869875222813,
            2.841596130592503,
            5.509964830011723,
            12.360939431396787,
            0.24509803921568626,
            0.08210180623973727,
            0.5830903790087464,
            0.9708737864077669,
            3.225806451612903,
            2.898550724637681,
            4.317789291882556,
            0.6493506493506493,
            3.278688524590164,
            10.416666666666668,
            10.7981220657277,
            11.00196463654224,
            0.4796163069544364,
            5.678233438485805,
            0.2717391304347826,
            2.5974025974025974,
            0.7518796992481203,
            1.3257575757575757,
            2.02808112324493,
            0.1707941929974381,
            4.400977995110025,
            5.94679186228482,
            2.1475256769374416,
            0.9803921568627451,
            2.8947368421052633,
            0.966183574879227,
            1.1784511784511784,
            3.0927835051546393,
            4.539559014267185,
            4.493207941483804,
            1.2571428571428571,
            33.33333333333333,
            3.896103896103896,
            0.9708737864077669,
            17.543859649122805,
            3.2448377581120944,
            0.546448087431694,
            1.1764705882352942,
            4.761904761904762,
            4.0,
            7.8431372549019605,
            0.5649717514124294,
            3.10077519379845,
            0.6993006993006993,
            1.530612244897959,
            3.4482758620689653,
            0.823045267489712,
            3.571428571428571,
            4.508196721311475,
            4.820261437908497,
            0.045433893684688774,
            1.1904761904761905,
            1.4598540145985401,
            0.7751937984496124,
            3.2362459546925564,
            4.824561403508771,
            0.18587360594795538,
            0.5474452554744526,
            4.5662100456621,
            1.4925373134328357,
            0.2824858757062147,
            4.651162790697675,
            10.526315789473683,
            3.278688524590164,
            2.4725274725274726,
            10.2803738317757,
            0.1589825119236884,
            5.88235294117647,
            2.1739130434782608,
            1.174496644295302,
            0.36496350364963503,
            0.798175598631699,
            9.595959595959595,
            26.31578947368421,
            33.33333333333333,
            7.317073170731707,
            6.6350710900473935,
            0.7911392405063291,
            1.0526315789473684,
            0.8620689655172413,
            10.060975609756099,
            6.976744186046512,
            3.8910505836575875,
            0.5102040816326531,
            0.14064697609001406,
            1.9607843137254901,
            10.0,
            10.81081081081081,
            22.58064516129032,
            85.71428571428571,
            4.966887417218543,
            3.225806451612903,
            0.258732212160414,
            2.0,
            5.555555555555555,
            3.1390134529147984,
            6.315789473684211,
            29.411764705882355,
            0.21097046413502107,
            10.0,
            0.19801980198019803,
            3.8834951456310676,
            5.990783410138248,
            10.465116279069768,
            0.3289473684210526,
            4.624277456647398,
            87.5,
            18.181818181818183,
            12.5,
            0.3448275862068966,
            0.9803921568627451,
            0.4662004662004662,
            0.15772870662460567,
            3.9215686274509802,
            30.434782608695656,
            3.508771929824561,
            4.856115107913669,
            10.362694300518134,
            2.3255813953488373,
            1.4545454545454546,
            3.4482758620689653,
            6.827309236947792,
            3.2653061224489797,
            7.6923076923076925,
            0.2857142857142857,
            5.115511551155116,
            4.761904761904762,
            1.608910891089109,
            5.0,
            17.24137931034483,
            11.11111111111111,
            1.4134275618374559,
            10.526315789473683,
            0.9900990099009901,
            10.16949152542373,
            38.88888888888889,
            75.0,
            0.8032128514056224,
            3.1353135313531353,
            3.2697547683923704,
            0.5196733481811433,
            2.5974025974025974,
            4.281767955801105,
            23.376623376623375,
            0.966183574879227,
            1.4634146341463417,
            2.2508038585209005,
            0.3003003003003003,
            4.0,
            0.6006006006006006,
            2.7417027417027415,
            0.19455252918287938,
            1.303780964797914,
            6.220095693779904,
            7.262569832402235,
            0.9900990099009901,
            1.9230769230769231,
            10.526315789473683,
            4.25531914893617,
            33.33333333333333,
            0.546448087431694,
            3.1914893617021276,
            1.3245033112582782,
            0.9900990099009901,
            3.618421052631579,
            2.4390243902439024,
            2.1739130434782608,
            1.090909090909091,
            0.18083182640144665,
            1.6771488469601679,
            6.666666666666667,
            5.223880597014925,
            53.84615384615385,
            1.1904761904761905,
            0.9852216748768473,
            0.7692307692307693,
            1.9047619047619049,
            0.60882800608828,
            0.20533880903490762,
            0.546448087431694,
            5.579399141630901,
            5.454545454545454,
            2.9069767441860463,
            4.141104294478527,
            4.166666666666666,
            0.9433962264150944,
            2.3923444976076556,
            1.639344262295082,
            2.380952380952381,
            4.119638826185101,
            9.45945945945946,
            12.0,
            20.0,
            36.53846153846153,
            62.5,
            3.3333333333333335,
            10.526315789473683,
            25.0,
            4.838709677419355,
            18.51851851851852,
            57.14285714285714,
            29.411764705882355,
            6.557377049180328,
            13.91304347826087,
            1.8367346938775513,
            50.0,
            10.32258064516129,
            11.083743842364532,
            0.7389162561576355,
            0.7751937984496124,
            2.661064425770308,
            2.8846153846153846,
            0.40355125100887806,
            9.722222222222223,
            50.0,
            1.2987012987012987,
            4.821802935010482,
            2.152414194299011,
            0.031735956839098696,
            1.3986013986013985,
            10.256410256410255,
            15.74468085106383,
            7.5,
            1.3888888888888888,
            0.4418262150220913,
            0.12135922330097086,
            30.0,
            2.857142857142857,
            4.166666666666666,
            0.6006006006006006,
            3.4482758620689653,
            4.528985507246377,
            0.6928406466512702,
            6.22154779969651,
            2.0408163265306123,
            0.13192612137203166,
            3.6363636363636362,
            0.7042253521126761,
            8.809891808346213,
            14.389799635701275,
            0.1669449081803005,
            8.527131782945736,
            8.823529411764707,
            1.2121212121212122,
            7.317073170731707,
            2.857142857142857,
            1.9230769230769231,
            7.575757575757576,
            2.8846153846153846,
            4.166666666666666,
            0.7751937984496124,
            2.495201535508637,
            0.0946073793755913,
            1.2121212121212122,
            12.5,
            40.0,
            3.9337474120082816,
            6.25,
            7.216494845360824,
            33.33333333333333,
            100.0,
            50.0,
            5.7441253263707575,
            12.396694214876034,
            0.6896551724137931,
            16.071428571428573,
            18.88888888888889,
            0.9803921568627451,
            1.0135135135135136,
            1.1982570806100217,
            0.0823045267489712,
            0.9153318077803204,
            1.5759312320916905,
            0.08802816901408451,
            7.462686567164178,
            13.333333333333334,
            0.8130081300813009,
            2.515723270440252,
            2.631578947368421,
            7.142857142857142,
            1.5384615384615385,
            0.8695652173913043,
            4.942965779467681,
            7.8125,
            1.2109623964308476,
            1.0178117048346056,
            0.06363347120585428,
            12.244897959183673,
            28.000000000000004,
            3.896103896103896,
            2.0710059171597637,
            2.18978102189781,
            3.896103896103896,
            12.0,
            1.2269938650306749,
            3.3333333333333335,
            2.125147579693034,
            4.866008462623413,
            1.9900497512437811,
            2.0202020202020203,
            1.7241379310344827,
            3.668378576669112,
            0.45126353790613716,
            0.8028904054596547,
            6.8181818181818175,
            1.0638297872340425,
            5.161290322580645,
            1.282051282051282,
            0.6772009029345373,
            7.1033938437253346,
            2.112676056338028,
            3.0126849894291756,
            6.056129985228951,
            4.1816009557945035,
            3.134996801023673,
            5.234159779614325,
            0.625,
            5.253623188405797,
            4.838709677419355,
            3.225806451612903,
            0.8,
            47.368421052631575,
            1.66270783847981,
            1.9230769230769231,
            2.0,
            10.53484602917342,
            0.15600624024961,
            1.9943019943019942,
            13.636363636363635,
            3.3333333333333335,
            10.53484602917342,
            0.15600624024961,
            10.517799352750808,
            0.1557632398753894,
            26.47058823529412,
            6.3209076175040515,
            2.93040293040293,
            0.13253810470510272,
            3.0303030303030303,
            3.6764705882352944,
            2.0100502512562812,
            2.6490066225165565,
            45.45454545454545,
            38.46153846153847,
            1.6728624535315983,
            7.6923076923076925,
            66.66666666666666,
            4.700854700854701,
            1.0,
            0.22988505747126436,
            8.47457627118644,
            27.40560292326431,
            3.32541567695962,
            0.24096385542168677,
            2.4390243902439024,
            7.547169811320755,
            100.0,
            1.9230769230769231,
            1.5873015873015872,
            0.4716981132075472,
            4.285714285714286,
            0.7407407407407408,
            0.9009009009009009,
            1.2345679012345678,
            19.51219512195122,
            4.761904761904762,
            1.3669821240799158,
            6.0606060606060606,
            12.5,
            4.411764705882353,
            7.462686567164178,
            8.16326530612245,
            0.07194244604316546,
            1.2345679012345678,
            0.2680965147453083,
            15.53398058252427,
            0.3731343283582089,
            16.666666666666664,
            23.076923076923077,
            1.6096579476861168,
            3.051511758118701,
            1.1695906432748537,
            4.878048780487805,
            26.785714285714285,
            3.3333333333333335,
            20.0,
            4.166666666666666,
            4.477611940298507,
            3.787878787878788,
            9.623430962343097,
            0.7712082262210797,
            5.263157894736842,
            3.6363636363636362,
            20.0,
            6.6350710900473935,
            8.333333333333332,
            5.3156146179401995,
            4.0,
            1.2121212121212122,
            9.30232558139535,
            5.714285714285714,
            3.149606299212598,
            6.349206349206349,
            16.0,
            11.904761904761903,
            10.294117647058822,
            4.651162790697675,
            6.666666666666667,
            9.67741935483871,
            1.0309278350515463,
            54.54545454545454,
            23.863636363636363,
            25.868725868725868,
            0.19083969465648853,
            5.263157894736842,
            0.8333333333333334,
            6.153846153846154,
            10.561056105610561,
            20.0,
            15.450643776824036,
            0.398406374501992,
            6.451612903225806,
            2.857142857142857,
            14.285714285714285,
            12.5,
            16.666666666666664,
            1.282051282051282,
            19.298245614035086,
            1.1627906976744187,
            1.4292520247737017,
            16.666666666666664,
            3.8461538461538463,
            7.916666666666666,
            20.0,
            0.19569471624266144,
            4.639175257731959,
            0.4444444444444444,
            2.2988505747126435,
            3.225806451612903,
            1.8382352941176472,
            12.5,
            23.809523809523807,
            6.666666666666667,
            13.725490196078432,
            5.985915492957746,
            10.880829015544041,
            1.36986301369863,
            0.3731343283582089,
            6.666666666666667,
            5.901639344262295,
            5.901639344262295,
            20.982142857142858,
            4.2682926829268295,
            9.116809116809117,
            1.3409961685823755,
            5.0,
            13.043478260869565,
            7.028112449799197,
            12.76595744680851,
            15.10989010989011,
            5.7591623036649215,
            6.97214734950584,
            3.389830508474576,
            5.263157894736842,
            4.9504950495049505,
            4.424778761061947,
            0.34423407917383825,
            5.911330049261084,
            11.29032258064516,
            1.486988847583643,
            4.615384615384616,
            100.0,
            3.2732381826781296,
            3.2732381826781296,
            0.11695906432748539,
            4.223227752639517,
            4.651162790697675,
            0.4231311706629055,
            18.75,
            17.72151898734177,
            1.6853932584269662,
            0.09775171065493646,
            6.548431105047749,
            4.390243902439024,
            0.22205773501110287,
            4.0,
            4.975124378109453,
            0.7425742574257426,
            5.785123966942149,
            6.179775280898876,
            0.47393364928909953,
            0.9803921568627451,
            4.166666666666666,
            6.521739130434782,
            7.228915662650602,
            1.5267175572519083,
            4.529616724738676,
            0.2915451895043732,
            7.61478163493841,
            0.6997900629811057,
            0.04304778303917348,
            3.296703296703297,
            3.571428571428571,
            0.10152284263959391,
            0.08665511265164644,
            1.694915254237288,
            2.941176470588235,
            9.219858156028367,
            4.605263157894736,
            8.333333333333332,
            1.9230769230769231,
            0.8,
            6.748466257668712,
            3.674540682414698,
            0.23923444976076555,
            3.674540682414698,
            6.748466257668712,
            0.23923444976076555,
            1.098901098901099,
            0.2695417789757413,
            6.68724279835391,
            4.674457429048414,
            0.8207070707070708,
            1.4965986394557822,
            0.43668122270742354,
            0.10362694300518134,
            1.431980906921241,
            10.778443113772456,
            2.8606965174129355,
            0.0765696784073507,
            5.263157894736842,
            3.125,
            66.66666666666666,
            7.142857142857142,
            10.526315789473683,
            5.246053853296194,
            4.179566563467492,
            0.31559015358720804,
            3.125,
            4.720496894409938,
            1.9467213114754098,
            0.2799552071668533,
            6.269592476489027,
            3.9755351681957185,
            4.6078431372549025,
            4.270462633451958,
            5.0,
            0.33112582781456956,
            0.4807692307692308,
            0.847457627118644,
            8.695652173913043,
            5.113636363636364,
            1.3793103448275863,
            25.0,
            4.189944134078212,
            4.072398190045249,
            0.34423407917383825,
            10.551558752997602,
            6.422018348623854,
            0.8,
            1.639344262295082,
            0.7407407407407408,
            1.2422360248447204,
            6.666666666666667,
            8.720930232558139,
            0.576923076923077,
            1.1111111111111112,
            1.8433179723502304,
            1.9402985074626864,
            5.864197530864197,
            7.121661721068249,
            1.794616151545364,
            1.6129032258064515,
            3.731343283582089,
            8.333333333333332,
            8.571428571428571,
            1.8726591760299627,
            6.921241050119331,
            7.897334649555774,
            7.658643326039387,
            0.2587991718426501,
            12.634408602150538,
            8.557046979865772,
            0.10873504893077202,
            9.689213893967093,
            5.188679245283019,
            0.102880658436214,
            3.5211267605633805,
            1.257861635220126,
            2.857142857142857,
            4.132231404958678,
            4.417670682730924,
            2.3972602739726026,
            0.3683241252302026,
            4.819277108433735,
            4.25531914893617,
            8.679245283018867,
            0.6060606060606061,
            0.42979942693409745,
            6.70391061452514,
            0.4405286343612335,
            0.8113590263691683,
            2.7586206896551726,
            3.3333333333333335,
            25.0,
            2.486325211337643,
            3.7037037037037033,
            1.8181818181818181,
            6.8181818181818175,
            27.77777777777778,
            48.91304347826087,
            13.203463203463203,
            10.263522884882107,
            0.16877637130801687,
            6.122448979591836,
            6.382978723404255,
            8.294930875576037,
            9.565217391304348,
            10.689655172413794,
            12.209302325581394,
            2.0,
            19.35483870967742,
            7.706338349293206,
            5.790441176470589,
            1.3233082706766919,
            2.941176470588235,
            5.555555555555555,
            25.0,
            7.339449541284404,
            0.2762430939226519,
            5.299539170506913,
            21.818181818181817,
            1.7543859649122806,
            7.228915662650602,
            15.555555555555555,
            1.8604651162790697,
            12.080536912751679,
            0.6666666666666667,
            10.526315789473683,
            100.0,
            2.5,
            10.273972602739725,
            17.647058823529413,
            2.941176470588235,
            12.598425196850393,
            2.890932982917214,
            9.30232558139535,
            10.614525139664805,
            6.666666666666667,
            0.4166666666666667,
            6.036745406824147,
            6.093189964157706,
            0.19175455417066153,
            15.384615384615385,
            11.11111111111111,
            7.6923076923076925,
            4.679802955665025,
            8.695652173913043,
            0.22075055187637968,
            3.0303030303030303,
            0.8928571428571428,
            12.698412698412698,
            9.090909090909092,
            13.793103448275861,
            23.076923076923077,
            33.33333333333333,
            6.25,
            4.166666666666666,
            2.536231884057971,
            0.1364256480218281,
            5.472636815920398,
            8.032128514056225,
            1.7467248908296942,
            3.4482758620689653,
            8.333333333333332,
            7.8431372549019605,
            2.127659574468085,
            2.961672473867596,
            2.147239263803681,
            0.08149959250203749,
            10.0,
            6.0606060606060606,
            6.132075471698113,
            5.527638190954774,
            1.5873015873015872,
            0.4132231404958678,
            14.285714285714285,
            38.46153846153847,
            1.7699115044247788,
            4.761904761904762,
            4.830917874396135,
            9.090909090909092,
            0.7905138339920948,
            1.6042780748663104,
            11.415525114155251,
            4.444444444444445,
            8.823529411764707,
            1.25,
            10.526315789473683,
            1.1764705882352942,
            9.523809523809524,
            5.555555555555555,
            8.771929824561402,
            7.142857142857142,
            12.962962962962962,
            3.0303030303030303,
            12.380952380952381,
            12.807881773399016,
            3.6585365853658534,
            3.9473684210526314,
            15.50632911392405,
            8.712121212121213,
            1.644736842105263,
            1.1377488825680617,
            0.11045655375552282,
            9.18918918918919,
            6.896551724137931,
            11.456953642384105,
            8.226837060702875,
            0.3068038260241834,
            9.375,
            3.474903474903475,
            12.787849093581578,
            12.787849093581578,
            14.000000000000002,
            14.440825190010859,
            10.113016367887763,
            11.81981981981982,
            0.04678581454103116,
            7.4074074074074066,
            11.462450592885375,
            0.33670033670033667,
            44.44444444444444,
            2.841677943166441,
            5.9171597633136095,
            1.532567049808429,
            1.0638297872340425,
            2.0,
            3.0821917808219177,
            1.2738853503184715,
            8.712121212121213,
            15.555555555555555,
            5.769230769230769,
            4.761904761904762,
            18.181818181818183,
            5.128205128205128,
            37.5,
            3.9215686274509802,
            6.666666666666667,
            6.0606060606060606,
            2.5974025974025974,
            1.5873015873015872,
            9.24170616113744,
            5.357142857142857,
            0.20876826722338201,
            15.384615384615385,
            12.5,
            6.944444444444445,
            9.554140127388536,
            6.25,
            5.0,
            33.33333333333333,
            3.149606299212598,
            0.3294892915980231,
            0.3436426116838488,
            10.317460317460316,
            15.789473684210526,
            1.6129032258064515,
            2.631578947368421,
            5.405405405405405,
            4.3478260869565215,
            1.5317286652078774,
            2.1739130434782608,
            9.615384615384617,
            1.4925373134328357,
            4.123711340206185,
            9.523809523809524,
            2.564102564102564,
            3.3444816053511706,
            2.3622047244094486,
            0.7874015748031495,
            3.3057851239669422,
            6.382978723404255,
            2.0,
            2.8169014084507045,
            12.5,
            2.2222222222222223,
            12.244897959183673,
            3.125,
            6.282722513089005,
            7.142857142857142,
            14.285714285714285,
            0.7462686567164178,
            8.75,
            4.25531914893617,
            38.18181818181819,
            0.8928571428571428,
            3.75,
            7.4074074074074066,
            1.2096774193548387,
            2.0408163265306123,
            1.1904761904761905,
            2.197802197802198,
            19.402985074626866,
            10.714285714285714,
            6.532663316582915,
            0.5208333333333333,
            0.6734006734006733,
            11.585365853658537,
            7.894736842105263,
            8.080808080808081,
            4.201680672268908,
            4.385964912280701,
            0.43668122270742354,
            14.285714285714285,
            5.031446540880504,
            3.8461538461538463,
            15.09433962264151,
            5.8370044052863435,
            2.7027027027027026,
            1.4134275618374559,
            1.0101010101010102,
            0.26109660574412535,
            6.451612903225806,
            11.684782608695652,
            18.181818181818183,
            66.66666666666666,
            9.090909090909092,
            6.666666666666667,
            5.031446540880504,
            5.0,
            50.0,
            50.0,
            15.0,
            6.122448979591836,
            23.333333333333332,
            11.76470588235294,
            5.88235294117647,
            13.043478260869565,
            7.894736842105263,
            18.181818181818183,
            6.796116504854369,
            8.0,
            4.878048780487805,
            6.725146198830409,
            2.674897119341564,
            8.333333333333332,
            3.0275229357798166,
            1.9305019305019304,
            0.1480384900074019,
            3.8834951456310676,
            4.8,
            0.8695652173913043,
            13.861386138613863,
            16.25,
            4.0,
            100.0,
            11.827956989247312,
            10.416666666666668,
            0.8620689655172413,
            1.1363636363636365,
            1.1400651465798046,
            50.0,
            33.33333333333333,
            8.333333333333332,
            10.0,
            14.572864321608039,
            13.940031562335614,
            2.7624309392265194,
            0.8403361344537815,
            9.012875536480687,
            9.01639344262295,
            8.333333333333332,
            12.5,
            4.0,
            13.26530612244898,
            8.333333333333332,
            33.33333333333333,
            11.530094271211022,
            11.539861667273389,
            6.756756756756757,
            50.0,
            4.0,
            20.0,
            2.9850746268656714,
            6.405693950177936,
            0.2070393374741201,
            8.634222919937205,
            6.390328151986183,
            22.48062015503876,
            14.374999999999998,
            7.6923076923076925,
            33.33333333333333,
            2.7522935779816518,
            4.301075268817205,
            12.626262626262626,
            2.4390243902439024,
            1.7241379310344827,
            25.0,
            10.0,
            9.792284866468842,
            0.14970059880239522,
            52.54237288135594,
            14.285714285714285,
            6.896551724137931,
            13.333333333333334,
            5.0,
            53.333333333333336,
            4.201680672268908,
            9.386733416770964,
            16.666666666666664,
            0.12406947890818859,
            1.8867924528301887,
            1.8867924528301887,
            0.5050505050505051,
            1.6,
            5.0,
            2.5,
            12.987012987012985,
            20.0,
            3.4090909090909087,
            3.4090909090909087,
            8.51063829787234,
            4.761904761904762,
            6.046511627906977,
            1.3986013986013985,
            0.2785515320334262,
            3.0303030303030303,
            14.450867052023122,
            7.8125,
            8.793969849246231,
            11.11111111111111,
            10.0,
            4.742268041237113,
            7.476635514018691,
            0.10940919037199125,
            6.25,
            32.35294117647059,
            50.0,
            1.1904761904761905,
            10.0,
            26.506024096385545,
            36.36363636363637,
            0.8547008547008548,
            50.0,
            50.0,
            2.127659574468085,
            55.55555555555556,
            50.0,
            15.74074074074074,
            39.130434782608695,
            13.043478260869565,
            -33.33333333333333,
            32.35294117647059,
            17.647058823529413,
            38.46153846153847,
            52.63157894736842,
            3.9473684210526314,
            16.176470588235293,
            12.871287128712872,
            0.974025974025974,
            12.5,
            16.8141592920354,
            7.377049180327869,
            16.783216783216783,
            17.582417582417584,
            0.847457627118644,
            12.446351931330472,
            18.115942028985508,
            0.7668711656441718,
            6.2953995157385,
            5.263157894736842,
            7.199999999999999,
            4.301075268817205,
            5.6521739130434785,
            14.893617021276595,
            8.333333333333332,
            6.443914081145586,
            3.7383177570093453,
            4.416403785488959,
            5.714285714285714,
            3.571428571428571,
            8.687615526802219,
            0.6655574043261231,
            10.0,
            4.545454545454546,
            10.256410256410255,
            10.256410256410255,
            3.6363636363636362,
            2.608695652173913,
            0.7575757575757576,
            2.7777777777777777,
            16.666666666666664,
            6.685236768802229,
            10.0,
            10.0,
            0.5747126436781609,
            3.428571428571429,
            0.24271844660194172,
            3.428571428571429,
            0.24271844660194172,
            3.296703296703297,
            0.45558086560364464,
            8.0,
            5.88235294117647,
            2.3255813953488373,
            3.508771929824561,
            1.3888888888888888,
            16.666666666666664,
            25.0,
            16.77018633540373,
            16.0,
            0.53475935828877,
            25.0,
            0.24549918166939444,
            8.695652173913043,
            3.8461538461538463,
            1.3793103448275863,
            2.564102564102564,
            4.8359240069084635,
            1.6666666666666667,
            5.426356589147287,
            14.285714285714285,
            6.666666666666667,
            28.205128205128204,
            5.319148936170213,
            5.25164113785558,
            9.219858156028367,
            0.6756756756756757,
            18.421052631578945,
            50.0,
            1.4705882352941175,
            5.25,
            14.285714285714285,
            100.0,
            6.976744186046512,
            3.571428571428571,
            5.3097345132743365,
            2.2222222222222223,
            15.0,
            1.3513513513513513,
            8.955223880597014,
            8.695652173913043
        ],
        "annotation_related_insertion_edits_vs_all_commit": [],
        "annotation_related_deletion_edits_vs_all_commit": [],
        "s5": "------------------------------------------------------------------------",
        "RQ5": "Relation of properties of projects vs. properties of type changes.",
        "matrix_commits_stars_annotations": [
            [
                "2017",
                "1390",
                "2664",
                "22965",
                "363",
                "19",
                "2294",
                "6187",
                "132",
                "0",
                "0",
                "28857"
            ]
        ],
        "matrix_files_annotations": [],
        "matrix_test_files_annotations": [],
        "dict_funct_call_no_types": {},
        "dict_funct_call_types": {},
        "s6": "------------------------------------------------------------------------",
        "RQ6": "Which are the top 10 repository with the highest number of type annotations.",
        "number_type_annotations_per_repo": {
            "https://github.com/facebookresearch/ReAgent": 22965
        },
        "s7": "------------------------------------------------------------------------",
        "RQ7": "How many of all types are annotated in the last version of the code?",
        "typeLastProjectVersion_total": 4979,
        "typeLastProjectVersion_average": 0,
        "typeLastProjectVersion_percentage": [
            37.67
        ],
        "typeLastProjectVersion_dict": {
            "https://github.com/facebookresearch/ReAgent": 4979
        },
        "typeLastProjectVersion_dict_error": {},
        "RQ8": "Total number of annotations over time, across all projects",
        "typeAnnotation_year_analysis": {
            "2017": 351,
            "2018": 1117,
            "2019": 1780,
            "2020": 7830,
            "2021": 2140
        },
        "RQ9": "Total number of annotation-related commit over time, across all projects",
        "typeAnnotation_commit_annotation_year_analysis": {
            "2017": 10,
            "2018": 110,
            "2019": 96,
            "2020": 177,
            "2021": 132
        },
        "typeAnnotation_commit_not_annotation_year_analysis": {
            "2017": 36,
            "2018": 245,
            "2019": 179,
            "2020": 185,
            "2021": 205
        },
        "RQ10": "Type annotation coverage for each each",
        "annotation_coverage": {
            "2014": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2015": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2016": [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "2017": [
                0,
                177,
                0,
                62,
                0,
                241
            ],
            "2018": [
                269,
                1050,
                137,
                333,
                51,
                2137
            ],
            "2019": [
                641,
                2215,
                244,
                899,
                315,
                4187
            ],
            "2020": [
                1858,
                2635,
                688,
                1262,
                757,
                5601
            ]
        },
        "RQ11": "Developers statistics",
        "list_dev_dict": [
            {
                "facebookresearch-ReAgent": 0,
                "jjg@fb.com": 72,
                "nishadsingh@fb.com": 9,
                "zhekang@fb.com": 1,
                "edoardoc@fb.com": 33,
                "vivekn@fb.com": 5,
                "hongzi@fb.com": 1,
                "mogengyin@fb.com": 2,
                "sophiajxw@fb.com": 1,
                "yitaoliang@fb.com": 8,
                "alanwu@fb.com": 1,
                "jwpan@fb.com": 1,
                "kittipat@fb.com": 135,
                "choudharydhruv@fb.com": 1,
                "chenz@instagram.com": 9,
                "alborzg@fb.com": 1,
                "drjiang@fb.com": 1,
                "jgmath2000@gmail.com": 2,
                "roh@fb.com": 1,
                "czxttkl@fb.com": 77,
                "cphillippi@fb.com": 1,
                "lucasadams@fb.com": 1,
                "sfujimoto@fb.com": 3,
                "alexnik@fb.com": 25,
                "bcui@fb.com": 1,
                "honglei@fb.com": 3,
                "samdaulton@instagram.com": 1,
                "jpchen@fb.com": 1,
                "kchipman@fb.com": 2,
                "kaiwenw@fb.com": 45,
                "wangkaiwen998@gmail.com": 11,
                "jialiu@fb.com": 2,
                "kittipatv@users.noreply.github.com": 1,
                "wenl@fb.com": 1,
                "tianshu@fb.com": 1,
                "ruiyangxu@fb.com": 6,
                "alexschneidman@fb.com": 5,
                "xinqian@fb.com": 1,
                "badri@fb.com": 5,
                "generatedunixname89002005307016@fb.com": 1,
                "alexschneidman@devvm883.atn0.facebook.com": 1,
                "": 2,
                "dvengerov@fb.com": 1,
                "ifox@fb.com": 8,
                "kgondkar@fb.com": 1,
                "yileixu@fb.com": 1,
                "jbschlosser@fb.com": 1,
                "glebsidora@fb.com": 1,
                "yifanbai@fb.com": 1,
                "yuanyuanshen@fb.com": 1,
                "dive1734@yahoo.com": 1,
                "gji@fb.com": 9,
                "jreese@fb.com": 1,
                "bankawas@fb.com": 2,
                "fjia@fb.com": 5,
                "iramazanli@fb.com": 3,
                "ruizhe@fb.com": 4,
                "judyhopps@fb.com": 1,
                "tengyuxu@fb.com": 2,
                "wonjae@fb.com": 1
            }
        ],
        "list_dev_dict_total": [
            {
                "facebookresearch-ReAgent": 0,
                "jjg@fb.com": 193,
                "hychyc07@cs.utexas.edu": 1,
                "nishadsingh@fb.com": 29,
                "nishadsingh@berkeley.edu": 8,
                "vivekn@fb.com": 16,
                "danielsimig@fb.com": 1,
                "kharitonov@fb.com": 1,
                "zhekang@fb.com": 1,
                "edoardoc@fb.com": 125,
                "dzhulgakov@fb.com": 1,
                "jgmath2000@protonmail.com": 4,
                "hongzi@fb.com": 2,
                "mogengyin@fb.com": 2,
                "sophiajxw@fb.com": 1,
                "pararths@fb.com": 2,
                "darbour@fb.com": 1,
                "saravanp@fb.com": 1,
                "yitaoliang@fb.com": 17,
                "kittipat@fb.com": 351,
                "alanwu@fb.com": 1,
                "zkaden@fb.com": 2,
                "jwpan@fb.com": 3,
                "choudharydhruv@fb.com": 1,
                "lufang@fb.com": 1,
                "kittipat@thisbluepla.net": 1,
                "kittipatv@users.noreply.github.com": 6,
                "adam.paszke@gmail.com": 1,
                "zsol@fb.com": 1,
                "chenz@instagram.com": 23,
                "baek32jinoo@gmail.com": 1,
                "jgmath2000@gmail.com": 4,
                "alborzg@fb.com": 1,
                "tongzhou.wang.1994@gmail.com": 2,
                "dinohuang@fb.com": 1,
                "drjiang@fb.com": 1,
                "thebillkidy@gmail.com": 1,
                "roh@fb.com": 1,
                "czxttkl@fb.com": 174,
                "cphillippi@fb.com": 2,
                "lucasadams@fb.com": 1,
                "sfujimoto@fb.com": 10,
                "wdead@fb.com": 2,
                "alexnik@fb.com": 47,
                "poshannessy@fb.com": 1,
                "sanekmelnikov@fb.com": 1,
                "bcui@fb.com": 1,
                "honglei@fb.com": 3,
                "12649111+sfujim@users.noreply.github.com": 1,
                "koonce@hello.com": 1,
                "samdaulton@instagram.com": 1,
                "xingjiama@fb.com": 1,
                "ruxuanli@fb.com": 1,
                "jialiu@fb.com": 3,
                "zdevito@fb.com": 1,
                "gengler1123@fb.com": 1,
                "jpchen@fb.com": 1,
                "kchipman@fb.com": 2,
                "badri@fb.com": 9,
                "cmw@fb.com": 1,
                "kaiwenw@fb.com": 71,
                "tmmai@fb.com": 2,
                "wangkaiwen998@gmail.com": 18,
                "koeber@fb.com": 1,
                "ttzztt0518@fb.com": 1,
                "szhu@fb.com": 2,
                "dominik@fb.com": 1,
                "wenl@fb.com": 1,
                "tianshu@fb.com": 1,
                "ruiyangxu@fb.com": 8,
                "guglani@fb.com": 1,
                "alexschneidman@fb.com": 8,
                "xinqian@fb.com": 2,
                "dunan@fb.com": 1,
                "stash@fb.com": 2,
                "generatedunixname89002005307016@fb.com": 25,
                "alexschneidman@devvm883.atn0.facebook.com": 1,
                "": 27,
                "root@sandcastle852.pnb2.facebook.com": 1,
                "ananthsub@fb.com": 6,
                "jreese@fb.com": 3,
                "dvengerov@fb.com": 12,
                "ifox@fb.com": 23,
                "generatedunixname89002005287564@fb.com": 4,
                "pradeepkumars@fb.com": 1,
                "certler@fb.com": 1,
                "kgondkar@fb.com": 1,
                "yileixu@fb.com": 1,
                "jbschlosser@fb.com": 1,
                "leizhang@fb.com": 1,
                "glebsidora@fb.com": 1,
                "yifanbai@fb.com": 1,
                "ubuntu@ip-172-31-16-103.us-east-2.compute.internal": 1,
                "malitto@fb.com": 1,
                "yuanyuanshen@fb.com": 1,
                "dive1734@yahoo.com": 1,
                "manishpandit@fb.com": 1,
                "wzehui@fb.com": 1,
                "grievejia@fb.com": 1,
                "gji@fb.com": 18,
                "bankawas@fb.com": 3,
                "fjia@fb.com": 10,
                "wanchaol@fb.com": 1,
                "partow@gmail.com": 1,
                "57405801+wall-ed-coder@users.noreply.github.com": 1,
                "roelbertens@users.noreply.github.com": 1,
                "colin2328@fb.com": 1,
                "yifu@fb.com": 1,
                "kelrlu@fb.com": 1,
                "iramazanli@fb.com": 3,
                "sestep@fb.com": 1,
                "ruizhe@fb.com": 4,
                "judyhopps@fb.com": 1,
                "tengyuxu@fb.com": 2,
                "avilay@fb.com": 1,
                "luispe@fb.com": 4,
                "wewen@fb.com": 2,
                "alh99@fb.com": 1,
                "wonjae@fb.com": 1,
                "pavlosapost@fb.com": 3,
                "espellman@fb.com": 1,
                "siyuw@fb.com": 2,
                "gleize@fb.com": 1,
                "avery1@fb.com": 1,
                "bogong1@fb.com": 1,
                "yunuse@fb.com": 1,
                "daniellepintz@fb.com": 2,
                "binhtang@fb.com": 3,
                "dehuacheng@fb.com": 1,
                "hack@fb.com": 1,
                "azzolini@fb.com": 1,
                "jenniferdai@fb.com": 3
            }
        ],
        "dev_dict": {},
        "dev_dict_total": {},
        "list_dev_plot": []
    }
]